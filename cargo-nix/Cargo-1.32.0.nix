# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.

args@{
  release ? true,
  rootFeatures ? [
    "bootstrap/default"
    "build_helper/default"
    "rustc-main/default"
    "rustc_codegen_ssa/default"
    "rustc/default"
    "arena/default"
    "rustc_data_structures/default"
    "graphviz/default"
    "rustc_cratesio_shim/default"
    "serialize/default"
    "fmt_macros/default"
    "rustc_apfloat/default"
    "rustc_errors/default"
    "syntax_pos/default"
    "rustc_fs_util/default"
    "rustc_target/default"
    "syntax/default"
    "rustc_allocator/default"
    "rustc_codegen_utils/default"
    "rustc_incremental/default"
    "rustc_metadata/default"
    "syntax_ext/default"
    "rustc_mir/default"
    "rustc_driver/default"
    "rustc_borrowck/default"
    "rustc_lint/default"
    "rustc_passes/default"
    "rustc_plugin/default"
    "rustc_privacy/default"
    "rustc_typeck/default"
    "rustc_platform_intrinsics/default"
    "rustc_resolve/default"
    "rustc_save_analysis/default"
    "rustc_traits/default"
    "std/default"
    "alloc/default"
    "compiler_builtins/default"
    "core/default"
    "libc/default"
    "panic_abort/default"
    "panic_unwind/default"
    "unwind/default"
    "profiler_builtins/default"
    "dlmalloc/default"
    "rustc_asan/default"
    "rustc_tsan/default"
    "rustc_lsan/default"
    "rustc_msan/default"
    "test/default"
    "proc_macro/default"
    "term/default"
    "rustc_codegen_llvm/default"
    "rustc_llvm/default"
    "cargotest2/default"
    "clippy/default"
    "clippy_lints/default"
    "rustc_tools_util/default"
    "clippy-mini-macro-test/default"
    "clippy_dev/default"
    "compiletest/default"
    "error_index_generator/default"
    "rustdoc/default"
    "linkchecker/default"
    "rustbook/default"
    "unstable-book-gen/default"
    "tidy/default"
    "build-manifest/default"
    "remote-test-client/default"
    "remote-test-server/default"
    "installer/default"
    "cargo/default"
    "crates-io/default"
    "rustdoc-tool/default"
    "rls/default"
    "rustfmt-nightly/default"
    "miri/default"
    "rustdoc-themes/default"
  ],
  rustPackages,
  buildRustPackages,
  hostPlatform,
  hostPlatformCpu ? null,
  hostPlatformFeatures ? [],
  target ? null,
  codegenOpts ? null,
  profileOpts ? null,
  mkRustCrate,
  rustLib,
  lib,
  workspaceSrc,
}:
let
  workspaceSrc = if args.workspaceSrc == null then ./. else args.workspaceSrc;
in let
  inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
  profilesByName = {
    bench = builtins.fromTOML "opt-level = 2\n";
    dev = builtins.fromTOML "debug = false\ndebug-assertions = false\n";
    release = builtins.fromTOML "opt-level = 2\n";
    test = builtins.fromTOML "debug = false\ndebug-assertions = false\n";
  };
  rootFeatures' = expandFeatures rootFeatures;
  overridableMkRustCrate = f:
    let
      drvs = genDrvsByProfile profilesByName ({ profile, profileName }: mkRustCrate ({ inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts; } // (f profileName)));
    in { compileMode ? null, profileName ? decideProfile compileMode release }:
      let drv = drvs.${profileName}; in if compileMode == null then drv else drv.override { inherit compileMode; };
in
{
  cargo2nixVersion = "0.11.0";
  workspace = {
    bootstrap = rustPackages.unknown.bootstrap."0.0.0";
    build_helper = rustPackages.unknown.build_helper."0.1.0";
    rustc-main = rustPackages.unknown.rustc-main."0.0.0";
    rustc_codegen_ssa = rustPackages.unknown.rustc_codegen_ssa."0.0.0";
    rustc = rustPackages.unknown.rustc."0.0.0";
    arena = rustPackages.unknown.arena."0.0.0";
    rustc_data_structures = rustPackages.unknown.rustc_data_structures."0.0.0";
    graphviz = rustPackages.unknown.graphviz."0.0.0";
    rustc_cratesio_shim = rustPackages.unknown.rustc_cratesio_shim."0.0.0";
    serialize = rustPackages.unknown.serialize."0.0.0";
    fmt_macros = rustPackages.unknown.fmt_macros."0.0.0";
    rustc_apfloat = rustPackages.unknown.rustc_apfloat."0.0.0";
    rustc_errors = rustPackages.unknown.rustc_errors."0.0.0";
    syntax_pos = rustPackages.unknown.syntax_pos."0.0.0";
    rustc_fs_util = rustPackages.unknown.rustc_fs_util."0.0.0";
    rustc_target = rustPackages.unknown.rustc_target."0.0.0";
    syntax = rustPackages.unknown.syntax."0.0.0";
    rustc_allocator = rustPackages.unknown.rustc_allocator."0.0.0";
    rustc_codegen_utils = rustPackages.unknown.rustc_codegen_utils."0.0.0";
    rustc_incremental = rustPackages.unknown.rustc_incremental."0.0.0";
    rustc_metadata = rustPackages.unknown.rustc_metadata."0.0.0";
    syntax_ext = rustPackages.unknown.syntax_ext."0.0.0";
    rustc_mir = rustPackages.unknown.rustc_mir."0.0.0";
    rustc_driver = rustPackages.unknown.rustc_driver."0.0.0";
    rustc_borrowck = rustPackages.unknown.rustc_borrowck."0.0.0";
    rustc_lint = rustPackages.unknown.rustc_lint."0.0.0";
    rustc_passes = rustPackages.unknown.rustc_passes."0.0.0";
    rustc_plugin = rustPackages.unknown.rustc_plugin."0.0.0";
    rustc_privacy = rustPackages.unknown.rustc_privacy."0.0.0";
    rustc_typeck = rustPackages.unknown.rustc_typeck."0.0.0";
    rustc_platform_intrinsics = rustPackages.unknown.rustc_platform_intrinsics."0.0.0";
    rustc_resolve = rustPackages.unknown.rustc_resolve."0.0.0";
    rustc_save_analysis = rustPackages.unknown.rustc_save_analysis."0.0.0";
    rustc_traits = rustPackages.unknown.rustc_traits."0.0.0";
    std = rustPackages.unknown.std."0.0.0";
    alloc = rustPackages.unknown.alloc."0.0.0";
    compiler_builtins = rustPackages.unknown.compiler_builtins."0.0.0";
    core = rustPackages.unknown.core."0.0.0";
    libc = rustPackages.unknown.libc."0.0.0";
    panic_abort = rustPackages.unknown.panic_abort."0.0.0";
    panic_unwind = rustPackages.unknown.panic_unwind."0.0.0";
    unwind = rustPackages.unknown.unwind."0.0.0";
    profiler_builtins = rustPackages.unknown.profiler_builtins."0.0.0";
    dlmalloc = rustPackages.unknown.dlmalloc."0.0.0";
    rustc_asan = rustPackages.unknown.rustc_asan."0.0.0";
    rustc_tsan = rustPackages.unknown.rustc_tsan."0.0.0";
    rustc_lsan = rustPackages.unknown.rustc_lsan."0.0.0";
    rustc_msan = rustPackages.unknown.rustc_msan."0.0.0";
    test = rustPackages.unknown.test."0.0.0";
    proc_macro = rustPackages.unknown.proc_macro."0.0.0";
    term = rustPackages.unknown.term."0.0.0";
    rustc_codegen_llvm = rustPackages.unknown.rustc_codegen_llvm."0.0.0";
    rustc_llvm = rustPackages.unknown.rustc_llvm."0.0.0";
    cargotest2 = rustPackages.unknown.cargotest2."0.1.0";
    clippy = rustPackages.unknown.clippy."0.0.212";
    clippy_lints = rustPackages.unknown.clippy_lints."0.0.212";
    rustc_tools_util = rustPackages.unknown.rustc_tools_util."0.1.0";
    clippy-mini-macro-test = rustPackages.unknown.clippy-mini-macro-test."0.2.0";
    clippy_dev = rustPackages.unknown.clippy_dev."0.0.1";
    compiletest = rustPackages.unknown.compiletest."0.0.0";
    error_index_generator = rustPackages.unknown.error_index_generator."0.0.0";
    rustdoc = rustPackages.unknown.rustdoc."0.0.0";
    linkchecker = rustPackages.unknown.linkchecker."0.1.0";
    rustbook = rustPackages.unknown.rustbook."0.1.0";
    unstable-book-gen = rustPackages.unknown.unstable-book-gen."0.1.0";
    tidy = rustPackages.unknown.tidy."0.1.0";
    build-manifest = rustPackages.unknown.build-manifest."0.1.0";
    remote-test-client = rustPackages.unknown.remote-test-client."0.1.0";
    remote-test-server = rustPackages.unknown.remote-test-server."0.1.0";
    installer = rustPackages.unknown.installer."0.0.0";
    cargo = rustPackages.unknown.cargo."0.33.0";
    crates-io = rustPackages.unknown.crates-io."0.21.0";
    rustdoc-tool = rustPackages.unknown.rustdoc-tool."0.0.0";
    rls = rustPackages.unknown.rls."1.31.6";
    rustfmt-nightly = rustPackages.unknown.rustfmt-nightly."1.0.0";
    miri = rustPackages.unknown.miri."0.1.0";
    rustdoc-themes = rustPackages.unknown.rustdoc-themes."0.1.0";
  };
  "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.6.7" = overridableMkRustCrate (profileName: rec {
    name = "aho-corasick";
    version = "0.6.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7ee94e9463ccb9d681e7b708082687b2c56d2bd420ca8a3d3157d27d59508ec0"; };
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.0.2" { inherit profileName; };
    };
  });
  
  "unknown".alloc."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "alloc";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/liballoc");
    dependencies = {
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.5.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ammonia."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "ammonia";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fd4c682378117e4186a492b2252b9537990e1617f44aed9788b9a1149de45477"; };
    dependencies = {
      html5ever = rustPackages."registry+https://github.com/rust-lang/crates.io-index".html5ever."0.22.3" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      maplit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maplit."1.0.1" { inherit profileName; };
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      tendril = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.0" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "ansi_term";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "unknown".arena."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "arena";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libarena");
    dependencies = {
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.4.7" = overridableMkRustCrate (profileName: rec {
    name = "arrayvec";
    version = "0.4.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a1e964f9e24d588183fcb43503abda40d288c8657dfc27311516ce2f05675aef"; };
    dependencies = {
      nodrop = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nodrop."0.1.12" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".assert_cli."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "assert_cli";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "98589b0e465a6c510d95fceebd365bb79bedece7f6e18a480897f2015f85ec51"; };
    dependencies = {
      colored = rustPackages."registry+https://github.com/rust-lang/crates.io-index".colored."1.6.0" { inherit profileName; };
      difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
      environment = rustPackages."registry+https://github.com/rust-lang/crates.io-index".environment."0.1.1" { inherit profileName; };
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.2" { inherit profileName; };
      failure_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.2" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" = overridableMkRustCrate (profileName: rec {
    name = "atty";
    version = "0.2.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "termion" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termion."1.5.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.9" = overridableMkRustCrate (profileName: rec {
    name = "backtrace";
    version = "0.3.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "89a47830402e9981c5c41223151efcced65a0510c13097c769cede7efb34782a"; };
    features = builtins.concatLists [
      [ "backtrace-sys" ]
      [ "coresymbolication" ]
      [ "dbghelp" ]
      [ "default" ]
      [ "dladdr" ]
      [ "libbacktrace" ]
      [ "libunwind" ]
      [ "winapi" ]
    ];
    dependencies = {
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "fuchsia") && !(hostPlatform.parsed.kernel.name == "emscripten") && !(hostPlatform.parsed.kernel.name == "darwin") && !(hostPlatform.parsed.kernel.name == "ios") then "backtrace_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace-sys."0.1.24" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.9" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".backtrace-sys."0.1.24" = overridableMkRustCrate (profileName: rec {
    name = "backtrace-sys";
    version = "0.1.24";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c66d56ac8dabd07f6aacdaf633f4b8262f5b3601a810a0dcddffd5c22c69daa0"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "bit-set";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6f1efcc46c18245a69c38fcc5cc650f16d3a59d034f3106e9ed63748f695730a"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      bit_vec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.5.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "bit-vec";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4440d5cb623bb7390ae27fec0bb6c61111969860f8e3ae198bfa0663645e67cf"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bitflags."0.9.1" = overridableMkRustCrate (profileName: rec {
    name = "bitflags";
    version = "0.9.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4efd02e230a02e18f92fc2735f44597385ed02ad8f831e7c1c1156ee5e1ab3a5"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "example_generated" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" = overridableMkRustCrate (profileName: rec {
    name = "bitflags";
    version = "1.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "228047a76f468627ca71776ecdebd732a3423081fcf5125585bcd7c49886ce12"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "unknown".bootstrap."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "bootstrap";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/bootstrap");
    dependencies = {
      build_helper = rustPackages."unknown".build_helper."0.1.0" { inherit profileName; };
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { inherit profileName; };
      cmake = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.33" { inherit profileName; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.1" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.17" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."0.2.11" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.8.0" { inherit profileName; };
      petgraph = rustPackages."registry+https://github.com/rust-lang/crates.io-index".petgraph."0.4.13" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.40" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.4.6" { inherit profileName; };
    };
    devDependencies = {
      pretty_assertions = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pretty_assertions."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bufstream."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "bufstream";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f2f382711e76b9de6c744cc00d0497baba02fb00a787f088c879f01d09468e32"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "unknown".build-manifest."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "build-manifest";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/build-manifest");
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.4.6" { inherit profileName; };
    };
  });
  
  "unknown".build_helper."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "build_helper";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/build_helper");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytecount."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "bytecount";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b92204551573580e078dc80017f36a213eb77a0450e4ddd8cfa0f3f2d1f0178f"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "generic-simd")
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "packed_simd")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustfmt-nightly/generic-simd" then "packed_simd" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".packed_simd."0.3.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.2.3" = overridableMkRustCrate (profileName: rec {
    name = "byteorder";
    version = "1.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "74c0b906e9446b0a2e4f760cdb3fa4b2c48cdc6db8766a845c54b6ff063fd2e9"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "i128" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytesize."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "bytesize";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "716960a18f978640f25101b5cbf1c6f6b0d3192fab36a2d98ca96f0ecbe41010"; };
  });
  
  "unknown".cargo."0.33.0" = overridableMkRustCrate (profileName: rec {
    name = "cargo";
    version = "0.33.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "cargo/openssl" || rootFeatures' ? "cargo/vendored-openssl") "openssl")
      (lib.optional (rootFeatures' ? "cargo/pretty-env-logger") "pretty-env-logger")
      (lib.optional (rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger") "pretty_env_logger")
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "vendored-openssl")
    ];
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      bytesize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytesize."1.0.0" { inherit profileName; };
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.32.0" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "darwin" then "core_foundation" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.6.1" { inherit profileName; };
      crates_io = rustPackages."unknown".crates-io."0.21.0" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.1" { inherit profileName; };
      crypto_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crypto-hash."0.3.1" { inherit profileName; };
      curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl."0.4.19" { inherit profileName; };
      curl_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl-sys."0.4.15" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.6.0" { inherit profileName; };
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.2" { inherit profileName; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.1" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.3" { inherit profileName; };
      fs2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fs2."0.4.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "fwdansi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fwdansi."1.0.1" { inherit profileName; };
      git2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2."0.7.5" { inherit profileName; };
      git2_curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2-curl."0.8.2" { inherit profileName; };
      glob = rustPackages."registry+https://github.com/rust-lang/crates.io-index".glob."0.2.11" { inherit profileName; };
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.3.2" { inherit profileName; };
      home = rustPackages."registry+https://github.com/rust-lang/crates.io-index".home."0.3.3" { inherit profileName; };
      ignore = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ignore."0.4.3" { inherit profileName; };
      im_rc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".im-rc."12.2.0" { inherit profileName; };
      jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.11" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      lazycell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazycell."1.2.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      libgit2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.7.10" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.3" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.8.0" { inherit profileName; };
      opener = rustPackages."registry+https://github.com/rust-lang/crates.io-index".opener."0.3.0" { inherit profileName; };
      ${ if rootFeatures' ? "cargo/openssl" || rootFeatures' ? "cargo/vendored-openssl" then "openssl" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.13" { inherit profileName; };
      ${ if rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger" then "pretty_env_logger" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pretty_env_logger."0.2.5" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      rustfix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustfix."0.4.2" { inherit profileName; };
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.3" { inherit profileName; };
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_ignored = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_ignored."0.0.4" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
      shell_escape = rustPackages."registry+https://github.com/rust-lang/crates.io-index".shell-escape."0.1.4" { inherit profileName; };
      tar = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.20" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.0.3" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.2" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.4.6" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
    devDependencies = {
      bufstream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bufstream."0.1.3" { inherit profileName; };
      proptest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proptest."0.8.7" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "cargo_metadata";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7d8dfe3adeb30f7938e6c1dd5327f29235d8ada3e898aeb08c343005ec2915a2"; };
    features = builtins.concatLists [
      [ "backtrace" ]
      [ "default" ]
    ];
    dependencies = {
      error_chain = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-chain."0.12.0" { inherit profileName; };
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
    };
  });
  
  "unknown".cargotest2."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "cargotest2";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargotest");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" = overridableMkRustCrate (profileName: rec {
    name = "cc";
    version = "1.0.25";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f159dfd43363c4d08055a07703eb7a3406b0dac4d0584d96965a3262db3c9d16"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "cfg-if";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0c4e7bb64a8ebb0d856483e1e682ea3422f883c5f5615a90d51a2c82fe87fdd3"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".chalk-engine."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "chalk-engine";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6749eb72e7d4355d944a99f15fbaea701b978c18c5e184a025fcde942b0c9779"; };
    dependencies = {
      chalk_macros = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-macros."0.1.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".chalk-macros."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "chalk-macros";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "295635afd6853aa9f20baeb7f0204862440c0fe994c5a253d5f479dac41d047e"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."0.2.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.4" = overridableMkRustCrate (profileName: rec {
    name = "chrono";
    version = "0.4.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6962c635d530328acc53ac6a955e83093fedc91c5809dfac1fa60fa470830a37"; };
    features = builtins.concatLists [
      [ "clock" ]
      [ "default" ]
      [ "time" ]
    ];
    dependencies = {
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.39" { inherit profileName; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.5" { inherit profileName; };
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.40" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".clap."2.32.0" = overridableMkRustCrate (profileName: rec {
    name = "clap";
    version = "2.32.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b957d88f4b6a63b9d70d5f454ac8011819c6efa7727858f458ab71c756ce2d3e"; };
    features = builtins.concatLists [
      [ "ansi_term" ]
      [ "atty" ]
      [ "color" ]
      [ "default" ]
      [ "strsim" ]
      [ "suggestions" ]
      [ "vec_map" ]
      [ "yaml" ]
      [ "yaml-rust" ]
    ];
    dependencies = {
      ${ if !hostPlatform.isWindows then "ansi_term" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      strsim = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.7.0" { inherit profileName; };
      textwrap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".textwrap."0.10.0" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" { inherit profileName; };
      vec_map = rustPackages."registry+https://github.com/rust-lang/crates.io-index".vec_map."0.8.1" { inherit profileName; };
      yaml_rust = rustPackages."registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.3.5" { inherit profileName; };
    };
  });
  
  "unknown".clippy."0.0.212" = overridableMkRustCrate (profileName: rec {
    name = "clippy";
    version = "0.0.212";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "clippy/debugging") "debugging")
    ];
    dependencies = {
      clippy_lints = rustPackages."unknown".clippy_lints."0.0.212" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
      rustc_tools_util = rustPackages."unknown".rustc_tools_util."0.1.0" { inherit profileName; };
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
    };
    devDependencies = {
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.6.2" { inherit profileName; };
      clippy_mini_macro_test = buildRustPackages."unknown".clippy-mini-macro-test."0.2.0" { profileName = "__noProfile"; };
      clippy_dev = rustPackages."unknown".clippy_dev."0.0.1" { inherit profileName; };
      compiletest_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiletest_rs."0.3.17" { inherit profileName; };
      derive_new = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.4" { profileName = "__noProfile"; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
    };
    buildDependencies = {
      rustc_tools_util = buildRustPackages."unknown".rustc_tools_util."0.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".clippy-mini-macro-test."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "clippy-mini-macro-test";
    version = "0.2.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy/mini-macro");
  });
  
  "unknown".clippy_dev."0.0.1" = overridableMkRustCrate (profileName: rec {
    name = "clippy_dev";
    version = "0.0.1";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy/clippy_dev");
    dependencies = {
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.32.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.7.8" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.5" { inherit profileName; };
    };
  });
  
  "unknown".clippy_lints."0.0.212" = overridableMkRustCrate (profileName: rec {
    name = "clippy_lints";
    version = "0.0.212";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy/clippy_lints");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "clippy_lints/debugging") "debugging")
    ];
    dependencies = {
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.6.2" { inherit profileName; };
      if_chain = rustPackages."registry+https://github.com/rust-lang/crates.io-index".if_chain."0.1.3" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.7.8" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      pulldown_cmark = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.2.0" { inherit profileName; };
      quine_mc_cluskey = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quine-mc_cluskey."0.2.4" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.2" { inherit profileName; };
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.4.6" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.7" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" = overridableMkRustCrate (profileName: rec {
    name = "cloudabi";
    version = "0.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f"; };
    features = builtins.concatLists [
      [ "bitflags" ]
      [ "default" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.33" = overridableMkRustCrate (profileName: rec {
    name = "cmake";
    version = "0.1.33";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "704fbf3bb5149daab0afb255dbea24a1f08d2f4099cedb9baab6d470d4c5eefb"; };
    dependencies = {
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".colored."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "colored";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b0aa3473e85a3161b59845d6096b289bb577874cafeaf75ea1b1beaa6572c7fc"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."0.2.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".commoncrypto."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "commoncrypto";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d056a8586ba25a1e4d61cb090900e495952c7886786fc55f909ab2f819b69007"; };
    dependencies = {
      commoncrypto_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".commoncrypto-sys."0.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".commoncrypto-sys."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "commoncrypto-sys";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1fed34f46747aa73dfaa578069fd8279d2818ade2b55f38f22a9401c7f4083e2"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
  });
  
  "unknown".compiler_builtins."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "compiler_builtins";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/rustc/compiler_builtins_shim");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "compiler_builtins/c" || rootFeatures' ? "std/compiler_builtins_c" || rootFeatures' ? "std/default") "c")
      [ "compiler-builtins" ]
      [ "default" ]
      (lib.optional (rootFeatures' ? "compiler_builtins/mem") "mem")
      [ "rustbuild" ]
    ];
    dependencies = {
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".compiletest."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "compiletest";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/compiletest");
    dependencies = {
      diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diff."0.1.11" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.5.12" { inherit profileName; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.1" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.17" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.3" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
      rustfix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustfix."0.4.2" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".compiletest_rs."0.3.17" = overridableMkRustCrate (profileName: rec {
    name = "compiletest_rs";
    version = "0.3.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "89747fe073b7838343bd2c2445e7a7c2e0d415598f8925f0fa9205b9cdfc48cb"; };
    features = builtins.concatLists [
      [ "tempfile" ]
      [ "tmp" ]
    ];
    dependencies = {
      diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diff."0.1.11" { inherit profileName; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.1" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.17" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.3" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.0.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "unknown".core."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "core";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libcore");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "core/panic_immediate_abort" || rootFeatures' ? "std/panic_immediate_abort") "panic_immediate_abort")
    ];
    devDependencies = {
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.5.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.6.1" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation";
    version = "0.6.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cc3532ec724375c7cb7ff0a097b714fde180bb1f6ed2ab27cfcd99ffca873cd2"; };
    features = builtins.concatLists [
      [ "mac_os_10_7_support" ]
    ];
    dependencies = {
      core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.6.1" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.6.1" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation-sys";
    version = "0.6.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a3fb15cdbdd9cf8b82d97d0296bb5cd3631bba58d6e31650a002a8e7fb5721f9"; };
    features = builtins.concatLists [
      [ "mac_os_10_7_support" ]
    ];
  });
  
  "unknown".crates-io."0.21.0" = overridableMkRustCrate (profileName: rec {
    name = "crates-io";
    version = "0.21.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo/src/crates-io");
    dependencies = {
      curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl."0.4.19" { inherit profileName; };
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.2" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "24ce9782d4d5c53674646a6a4c1863a21a8fc0cb649b3c94dfc16e45071dea19"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.2.6" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-channel";
    version = "0.2.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7b85741761b7f160bc5e7e0c14986ef685b7f8bf9b7ad081c60c604bb4649827"; };
    dependencies = {
      crossbeam_epoch = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.6.0" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.5.0" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.6.4" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.5.5" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-deque";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f739f8c5363aca78cfb059edf753d8f0d36908c348f3d8d1503f03d8b75d9cf3"; };
    dependencies = {
      crossbeam_epoch = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.3.1" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.2.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-epoch";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "927121f5407de9956180ff5e936fe3cf4324279280001cd56b669d28ee7e9150"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "use_std" ]
    ];
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.4.7" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.2.2" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      memoffset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.2.1" { inherit profileName; };
      nodrop = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nodrop."0.1.12" { inherit profileName; };
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.6.0" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-epoch";
    version = "0.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9c90f1474584f38e270b5b613e898c8c328aa4f3dea85e0a27ac2e642f009416"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "use_std" ]
    ];
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.4.7" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.5.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      memoffset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.2.1" { inherit profileName; };
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-utils";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2760899e32a1d58d5abb31129f8fae5de75220bc2176e77ff7c627ae45c918d9"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-utils";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "677d453a17e8bd2b913fa38e8b9cf04bcdbb5be790aa294f2389661d72036015"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.1" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-utils";
    version = "0.6.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c55913cc2799171a550e307918c0a360e8c16004820291bf3b638969b4a01816"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crypto-hash."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "crypto-hash";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "09de9ee0fc255ace04c7fa0763c9395a945c37c8292bb554f8d48361d1dcf1b4"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "darwin" then "commoncrypto" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".commoncrypto."0.2.0" { inherit profileName; };
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.3.2" { inherit profileName; };
      ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin") then "openssl" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.13" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".curl."0.4.19" = overridableMkRustCrate (profileName: rec {
    name = "curl";
    version = "0.4.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c7c9d851c825e0c033979d4516c9173bc19a78a96eb4d6ae51d4045440eafa16"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "http2" ]
      [ "openssl-probe" ]
      [ "openssl-sys" ]
      [ "ssl" ]
    ];
    dependencies = {
      curl_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl-sys."0.4.15" { inherit profileName; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "kernel32" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_probe" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.38" { inherit profileName; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "schannel" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.14" { inherit profileName; };
      socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.8" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".curl-sys."0.4.15" = overridableMkRustCrate (profileName: rec {
    name = "curl-sys";
    version = "0.4.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "721c204978be2143fab0a84b708c49d79d1f6100b8785610f456043a90708870"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "http2" ]
      [ "libnghttp2-sys" ]
      [ "openssl-sys" ]
      [ "ssl" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      libnghttp2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libnghttp2-sys."0.1.0" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.0.24" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.38" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.14" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.6" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".datafrog."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "datafrog";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "16d724bf4ffe77cdceeecd461009b5f8d9e23c5d645d68bedb4586bf43e7e142"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.4" = overridableMkRustCrate (profileName: rec {
    name = "derive-new";
    version = "0.5.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ceed73957c449214f8440eec8ad7fa282b67dc9eacbb24a3085b15d60397a17a"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.3.8" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.5.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.13.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".derive_more."0.13.0" = overridableMkRustCrate (profileName: rec {
    name = "derive_more";
    version = "0.13.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3f57d78cf3bd45270dad4e70c21ec77a960b36c7a841ff9db76aaa775a8fb871"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.24" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.8" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.15.21" { inherit profileName; };
    };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.2" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".diff."0.1.11" = overridableMkRustCrate (profileName: rec {
    name = "diff";
    version = "0.1.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3c2b69f912779fbb121ceb775d74d51e915af17aaebc38d28a592843a2dd0a3a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "difference";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".directories."1.0.2" = overridableMkRustCrate (profileName: rec {
    name = "directories";
    version = "1.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "72d337a64190607d4fcca2cb78982c5dd57f4916e19696b48a575fa746b6cb0f"; };
    dependencies = {
      ${ if (rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/directories") && hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      ${ if (rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/directories") && hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "unknown".dlmalloc."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "dlmalloc";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/rustc/dlmalloc_shim");
    dependencies = {
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" = overridableMkRustCrate (profileName: rec {
    name = "either";
    version = "1.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3be565ca5c557d7f59e7cfcf1844f9e3033650c929c6566f511e8005f205c1d0"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".elasticlunr-rs."2.3.3" = overridableMkRustCrate (profileName: rec {
    name = "elasticlunr-rs";
    version = "2.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4837d77a1e157489a3933b743fd774ae75074e0e390b2b7f071530048a0d87ee"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
      strum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.9.0" { inherit profileName; };
      strum_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.9.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ena."0.9.3" = overridableMkRustCrate (profileName: rec {
    name = "ena";
    version = "0.9.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "88dc8393b3c7352f94092497f6b52019643e493b6b890eb417cdb7c46117e621"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ena."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "ena";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f56c93cc076508c549d9bb747f79aa9b4eb098be7b8cad8830c3137ef52d1e00"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".env_logger."0.5.12" = overridableMkRustCrate (profileName: rec {
    name = "env_logger";
    version = "0.5.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f4d7e69c283751083d53d01eac767407343b8b69c4bd70058e08adc2637cb257"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "regex" ]
    ];
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."1.1.1" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".env_logger."0.6.0" = overridableMkRustCrate (profileName: rec {
    name = "env_logger";
    version = "0.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "afb070faf94c85d17d50ca44f6ad076bce18ae92f0037d350947240a36e9d42e"; };
    features = builtins.concatLists [
      [ "atty" ]
      [ "default" ]
      [ "humantime" ]
      [ "regex" ]
      [ "termcolor" ]
    ];
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."1.1.1" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".environment."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "environment";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1f4b14e20978669064c33b4c1e0fb4083412e40fe56cbea2eae80fd7591503ee"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".error-chain."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "error-chain";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ff511d5dc435d703f4971bc399647c9bc38e20cb41452e3b9feb4765419ed3f3"; };
    features = builtins.concatLists [
      [ "backtrace" ]
      [ "default" ]
      [ "example_generated" ]
    ];
    dependencies = {
      backtrace = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".error-chain."0.12.0" = overridableMkRustCrate (profileName: rec {
    name = "error-chain";
    version = "0.12.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "07e791d3be96241c77c43846b665ef1384606da2cd2a48730abe606a12906e02"; };
    features = builtins.concatLists [
      [ "backtrace" ]
      [ "default" ]
      [ "example_generated" ]
    ];
    dependencies = {
      backtrace = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.9" { inherit profileName; };
    };
  });
  
  "unknown".error_index_generator."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "error_index_generator";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/error_index_generator");
    dependencies = {
      rustdoc = rustPackages."unknown".rustdoc."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".failure."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "failure";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7efb22686e4a466b1ec1a15c2898f91fa9cb340452496dca654032de20ff95b9"; };
    features = builtins.concatLists [
      [ "backtrace" ]
      [ "default" ]
      [ "derive" ]
      [ "failure_derive" ]
      [ "std" ]
    ];
    dependencies = {
      backtrace = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.9" { inherit profileName; };
      failure_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.2" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "failure_derive";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "946d0e98a50d9831f5d589038d2ca7f8f455b1c21028c0db0e84116a12696426"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.24" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.8" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.14.9" { inherit profileName; };
      synstructure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.9.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "filetime";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "da4b9849e77b13195302c174324b5ba73eec9b236b24c221a61000daefb95c5f"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.40" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fixedbitset."0.1.9" = overridableMkRustCrate (profileName: rec {
    name = "fixedbitset";
    version = "0.1.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "86d4de0081402f5e88cdac65c8dcdcc73118c1a7a465e2a05f0da05843a8ea33"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.3" = overridableMkRustCrate (profileName: rec {
    name = "flate2";
    version = "1.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4af030962d89d62aa52cd9492083b1cd9b2d1a77764878102a6c0f86b4d5444d"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "libz-sys" ]
      [ "miniz-sys" ]
      [ "zlib" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.0.24" { inherit profileName; };
      miniz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz-sys."0.1.10" { inherit profileName; };
    };
  });
  
  "unknown".fmt_macros."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "fmt_macros";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libfmt_macros");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.6" = overridableMkRustCrate (profileName: rec {
    name = "fnv";
    version = "1.0.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2fad85553e09a6f881f739c29f0b00b0f01357c743266d478b68951ce23285f3"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "foreign-types";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1"; };
    dependencies = {
      foreign_types_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "foreign-types-shared";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fs2."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "fs2";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9564fc758e15025b46aa6643b1b77d047d1a56a1aea6e01002ac0c7026876213"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fs_extra."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "fs_extra";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5f2a4a2034423744d2cc7ca2068453168dcdb82c438419e639a26bd87839c674"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fst."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "fst";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d94485a00b1827b861dd9d1a2cc9764f9044d4c535514c0760a5a2012ef3399f"; };
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.2.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "fuchsia-zircon";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      fuchsia_zircon_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "fuchsia-zircon-sys";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".futf."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "futf";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7c9c1ce3fa9336301af935ab852c437817d14cd33690446569392e65170aac3b"; };
    dependencies = {
      mac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; };
      debug_unreachable = rustPackages."registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".futures."0.1.21" = overridableMkRustCrate (profileName: rec {
    name = "futures";
    version = "0.1.21";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1a70b146671de62ec8c8ed572219ca5d594d9b06c0b364d5e67b722fc559b48c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
      [ "with-deprecated" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fwdansi."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "fwdansi";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "34dd4c507af68d37ffef962063dfa1944ce0dd4d5b82043dbab1dabe088610c3"; };
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.0.2" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.17" = overridableMkRustCrate (profileName: rec {
    name = "getopts";
    version = "0.2.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b900c08c1939860ce8b54dc6a89e26e00c04c380fd0e09796799bd7f12861e05"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".git2."0.7.5" = overridableMkRustCrate (profileName: rec {
    name = "git2";
    version = "0.7.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "591f8be1674b421644b6c030969520bc3fa12114d2eb467471982ed3e9584e71"; };
    features = builtins.concatLists [
      [ "curl" ]
      [ "default" ]
      [ "https" ]
      [ "openssl-probe" ]
      [ "openssl-sys" ]
      [ "ssh" ]
      [ "ssh_key_from_memory" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      libgit2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.7.10" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_probe" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.38" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".git2-curl."0.8.2" = overridableMkRustCrate (profileName: rec {
    name = "git2-curl";
    version = "0.8.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0173e317f8ba21f3fff0f71549fead5e42e67961dbd402bf69f42775f3cc78b4"; };
    dependencies = {
      curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl."0.4.19" { inherit profileName; };
      git2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2."0.7.5" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".glob."0.2.11" = overridableMkRustCrate (profileName: rec {
    name = "glob";
    version = "0.2.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8be18de09a56b60ed0edf84bc9df007e30040691af7acd1c41874faac5895bfb"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".globset."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "globset";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8e49edbcc9c7fc5beb8c0a54e7319ff8bed353a2b55e85811c6281188c2a6c84"; };
    dependencies = {
      aho_corasick = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.6.7" { inherit profileName; };
      fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.6" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.0.2" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
    };
  });
  
  "unknown".graphviz."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "graphviz";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libgraphviz");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".handlebars."0.32.4" = overridableMkRustCrate (profileName: rec {
    name = "handlebars";
    version = "0.32.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d89ec99d1594f285d4590fc32bac5f75cdab383f1123d504d27862c644a807dd"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."1.0.6" { inherit profileName; };
      pest_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pest_derive."1.0.7" { profileName = "__noProfile"; };
      quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.2" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hex."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "hex";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "805026a5d0141ffc30abb3be3173848ad46a1b1664fe632428479619a3644d77"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".home."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "home";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "80dff82fb58cfbbc617fb9a9184b010be0529201553cda50ad04372bc2333aff"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "scopeguard" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."0.3.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".html5ever."0.22.3" = overridableMkRustCrate (profileName: rec {
    name = "html5ever";
    version = "0.22.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b04478cf718862650a0bf66acaf8f2f8c906fbc703f35c916c1f4211b069a364"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      mac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; };
      markup5ever = rustPackages."registry+https://github.com/rust-lang/crates.io-index".markup5ever."0.7.2" { inherit profileName; };
    };
    buildDependencies = {
      proc_macro2 = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.3.8" { profileName = "__noProfile"; };
      quote = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.5.2" { profileName = "__noProfile"; };
      syn = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.13.11" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".humantime."1.1.1" = overridableMkRustCrate (profileName: rec {
    name = "humantime";
    version = "1.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0484fda3e7007f2a4a0d9c3a703ca38c71c54c55602ce4660c419fd32e188c9e"; };
    dependencies = {
      quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".idna."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "idna";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "38f09e0f0b1fb55fdee1f17470ad800da77af5186a1a76c026b679358b7e844e"; };
    dependencies = {
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      unicode_bidi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.7" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".if_chain."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "if_chain";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4bac95d9aa0624e7b78187d6fb8ab012b41d9f6f54b1bcb61e61c4845f8357ec"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ignore."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "ignore";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3e9faa7c84064f07b40da27044af629f578bc7994b650d3e458d0c29183c1d91"; };
    dependencies = {
      crossbeam = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam."0.3.2" { inherit profileName; };
      globset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".globset."0.4.1" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.0.2" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.3" { inherit profileName; };
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."0.3.6" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.5" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".im-rc."12.2.0" = overridableMkRustCrate (profileName: rec {
    name = "im-rc";
    version = "12.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d4591152fd573cf453a890b5f9fdc5c328a751a0785539316739d5f85e5c468c"; };
    dependencies = {
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.10.0" { inherit profileName; };
    };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.2" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".installer."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "installer";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rust-installer");
    dependencies = {
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.32.0" { inherit profileName; };
      error_chain = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-chain."0.12.0" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.0.1" { inherit profileName; };
      tar = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.20" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.5" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
      xz2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xz2."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".is-match."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "is-match";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7e5b386aef33a1c677be65237cb9d32c3f3ef56bd035949710c4bb13083eb053"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.7.8" = overridableMkRustCrate (profileName: rec {
    name = "itertools";
    version = "0.7.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f58856976b776fedd95533137617a02fb25719f40e7d9b01c7043cd65474f450"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "itoa";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1306f3464951f30e30d12373d31c79fbd52d236e5e896fd92f96ec7babbbe60b"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jemalloc-sys."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "jemalloc-sys";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bfc62c8e50e381768ce8ee0428ee53741929f7ebd73e4d83f669bcf7693e00ae"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc_driver/jemalloc-sys") "bg_thread")
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc_driver/jemalloc-sys") "default")
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc_driver/jemalloc-sys") "unprefixed_malloc_on_supported_platforms")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc_driver/jemalloc-sys" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc_driver/jemalloc-sys" then "cc" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc_driver/jemalloc-sys" then "fs_extra" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".fs_extra."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.11" = overridableMkRustCrate (profileName: rec {
    name = "jobserver";
    version = "0.1.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "60af5f849e1981434e4a31d3d782c4774ae9b434ce55b101a96ecfd09147e8be"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      ${ if hostPlatform.isWindows then "rand" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.4.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".json."0.11.13" = overridableMkRustCrate (profileName: rec {
    name = "json";
    version = "0.11.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9ad0485404155f45cce53a40d4b2d6ac356418300daed05273d9e26f91c390be"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."8.0.1" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-core";
    version = "8.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ddf83704f4e79979a424d1082dd2c1e52683058056c9280efa19ac5f6bc9033c"; };
    dependencies = {
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.21" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.3.9" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "kernel32-sys";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d"; };
    dependencies = {
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
    };
    buildDependencies = {
      build = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".languageserver-types."0.51.1" = overridableMkRustCrate (profileName: rec {
    name = "languageserver-types";
    version = "0.51.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "68de833188ada4e175d04a028f03f244f6370eedbcc75a05604d47d925933f69"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      num_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".num-derive."0.2.2" { profileName = "__noProfile"; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.5" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.1" { inherit profileName; };
      url_serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url_serde."0.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lazy_static."0.2.11" = overridableMkRustCrate (profileName: rec {
    name = "lazy_static";
    version = "0.2.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "76f033c7ad61445c5b347c7382dd1237847eb1bce590fe50365dcb33d546be73"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "lazy_static";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca488b89a5657b0a2ecd45b95609b3e848cf1755da332a0da46e2b2b1cb371a7"; };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.1.5" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lazycell."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "lazycell";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ddba4c30a78328befecec92fc94970e53b3ae385827d28620f0f5bb2493081e0"; };
  });
  
  "unknown".libc."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "libc";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/rustc/libc_shim");
    features = builtins.concatLists [
      [ "align" ]
      [ "default" ]
      [ "stdbuild" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" = overridableMkRustCrate (profileName: rec {
    name = "libc";
    version = "0.2.45";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2d2857ec59fadc0773853c664d2d18e7198e83883e7060b63c924cb077bd5c74"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.7.10" = overridableMkRustCrate (profileName: rec {
    name = "libgit2-sys";
    version = "0.7.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4916b5addc78ec36cc309acfcdf0b9f9d97ab7b84083118b248709c5b7029356"; };
    features = builtins.concatLists [
      [ "curl" ]
      [ "curl-sys" ]
      [ "https" ]
      [ "libssh2-sys" ]
      [ "openssl-sys" ]
      [ "ssh" ]
      [ "ssh_key_from_memory" ]
    ];
    dependencies = {
      curl_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl-sys."0.4.15" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      libssh2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libssh2-sys."0.2.11" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.0.24" { inherit profileName; };
      ${ if hostPlatform.isUnix then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.38" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.14" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libnghttp2-sys."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "libnghttp2-sys";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4ffbfb81475cc9f625e44f3a8f8b9cf7173815ae1c7cc2fa91853ec009e38198"; };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libssh2-sys."0.2.11" = overridableMkRustCrate (profileName: rec {
    name = "libssh2-sys";
    version = "0.2.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "126a1f4078368b163bfdee65fbab072af08a1b374a5551b21e87ade27b1fbf9d"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.0.24" { inherit profileName; };
      ${ if hostPlatform.isUnix then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.38" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.14" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.6" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.0.24" = overridableMkRustCrate (profileName: rec {
    name = "libz-sys";
    version = "1.0.24";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4401fe74560a0d46fce3464625ac8aa7a79d291dd28cee021d18852d5191c280"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.14" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.6" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".linkchecker."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "linkchecker";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/linkchecker");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "lock_api";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "949826a5ccf18c1b3a7c3d57692778d21768b79e46eb9dd07bfc4c2160036c54"; };
    features = builtins.concatLists [
      [ "nightly" ]
      [ "owning_ref" ]
    ];
    dependencies = {
      owning_ref = rustPackages."registry+https://github.com/rust-lang/crates.io-index".owning_ref."0.3.3" { inherit profileName; };
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".log."0.3.9" = overridableMkRustCrate (profileName: rec {
    name = "log";
    version = "0.3.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e19e8d5c34a3e0e2223db8e060f9e8264aeeb5c5fc64a4ee9965c062211c024b"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" = overridableMkRustCrate (profileName: rec {
    name = "log";
    version = "0.4.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d4fcce5fa49cc693c312001daf1d13411c4a5283796bac1084299ea3e567113f"; };
    features = builtins.concatLists [
      [ "release_max_level_info" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".log_settings."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "log_settings";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "19af41f0565d7c19b2058153ad0b42d4d5ce89ec4dbf06ed6741114a8b63e7cd"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lzma-sys."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "lzma-sys";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d1eaa027402541975218bb0eec67d6b0412f6233af96e0d096d31dbdfd22e614"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
      filetime = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.1" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.14" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "mac";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c41e0c4fef86961ac6d6f8a82609f55f31b05e4fce149ac5710e439df7619ba4"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".macro-utils."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "macro-utils";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f2c4deaccc2ead6a28c16c0ba82f07d52b6475397415ce40876e559b0b0ea510"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".maplit."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "maplit";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "08cbb6b4fef96b6d77bfc40ec491b1690c779e77b05cd9f07f787ed376fd4c43"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".markup5ever."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "markup5ever";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bfedc97d5a503e96816d10fedcd5b42f760b2e525ce2f7ec71f6a41780548475"; };
    dependencies = {
      phf = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf."0.7.22" { inherit profileName; };
      string_cache = rustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache."0.7.3" { inherit profileName; };
      tendril = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.0" { inherit profileName; };
    };
    buildDependencies = {
      phf_codegen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_codegen."0.7.22" { profileName = "__noProfile"; };
      serde = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { profileName = "__noProfile"; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { profileName = "__noProfile"; };
      string_cache_codegen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache_codegen."0.4.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "matches";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mdbook."0.1.7" = overridableMkRustCrate (profileName: rec {
    name = "mdbook";
    version = "0.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "90b5a8d7e341ceee5db3882a06078d42661ddcfa2b3687319cc5da76ec4e782f"; };
    features = builtins.concatLists [
      [ "ammonia" ]
      [ "elasticlunr-rs" ]
      [ "search" ]
    ];
    dependencies = {
      ammonia = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ammonia."1.1.0" { inherit profileName; };
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.4" { inherit profileName; };
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.32.0" { inherit profileName; };
      elasticlunr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".elasticlunr-rs."2.3.3" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.5.12" { inherit profileName; };
      error_chain = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-chain."0.11.0" { inherit profileName; };
      handlebars = rustPackages."registry+https://github.com/rust-lang/crates.io-index".handlebars."0.32.4" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.7.8" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.0.2" { inherit profileName; };
      open = rustPackages."registry+https://github.com/rust-lang/crates.io-index".open."1.2.1" { inherit profileName; };
      pulldown_cmark = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.1.2" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."0.2.11" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
      shlex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".shlex."0.1.1" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.0.3" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.4.6" { inherit profileName; };
      toml_query = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml-query."0.6.0" { inherit profileName; };
    };
    buildDependencies = {
      error_chain = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".error-chain."0.11.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memchr."2.0.2" = overridableMkRustCrate (profileName: rec {
    name = "memchr";
    version = "2.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a3b4142ab8738a78c51896f704f83c11df047ff1bda9a92a661aa6361552d93d"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "libc" ]
      [ "use_std" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memmap."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "memmap";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e2ffa2c986de11a9df78620c01eeaaf27d94d3ff02bf81bfcca953102dd0c6ff"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memoffset."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "memoffset";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0f9dc261e2b62d7a622bf416ea3c5245cdd5d9a7fcc428c0d06804dfce1775b3"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".minifier."0.0.20" = overridableMkRustCrate (profileName: rec {
    name = "minifier";
    version = "0.0.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "96c269bb45c39b333392b2b18ad71760b34ac65666591386b0e959ed58b3f474"; };
    dependencies = {
      macro_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".macro-utils."0.1.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".miniz-sys."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "miniz-sys";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "609ce024854aeb19a0ef7567d348aaa5a746b32fb72e336df7fcc16869d7e2b4"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".miow."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "miow";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "396aa0f2003d7df8395cb93e09871561ccc3e785f0acb369170e8cc74ddf9226"; };
    dependencies = {
      socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.8" { inherit profileName; };
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "unknown".miri."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "miri";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/miri");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "miri/cargo_metadata" || rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default") "cargo_metadata")
      (lib.optional (rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default") "cargo_miri")
      (lib.optional (rootFeatures' ? "miri/default") "default")
      (lib.optional (rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/directories") "directories")
      (lib.optional (rootFeatures' ? "miri/rustc_tests") "rustc_tests")
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.2.3" { inherit profileName; };
      ${ if rootFeatures' ? "miri/cargo_metadata" || rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" then "cargo_metadata" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.6.2" { inherit profileName; };
      ${ if rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/directories" then "directories" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".directories."1.0.2" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.5.12" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
    };
    devDependencies = {
      colored = rustPackages."registry+https://github.com/rust-lang/crates.io-index".colored."1.6.0" { inherit profileName; };
      compiletest_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiletest_rs."0.3.17" { inherit profileName; };
    };
    buildDependencies = {
      vergen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vergen."3.0.3" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "new_debug_unreachable";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0cdc457076c78ab54d5e0d6fa7c47981757f1e34dc39ff92787f217dede586c4"; };
    dependencies = {
      unreachable = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unreachable."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".nodrop."0.1.12" = overridableMkRustCrate (profileName: rec {
    name = "nodrop";
    version = "0.1.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9a2228dca57108069a5262f2ed8bd2e82496d2e074a06d1ccc7ce1687b6ae0a2"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-derive."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "num-derive";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0d2c31b75c36a993d30c7a13d70513cb93f02acafdd5b7ba250f9b0e18615de7"; };
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.5" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.24" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.8" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.14.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.39" = overridableMkRustCrate (profileName: rec {
    name = "num-integer";
    version = "0.1.39";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e83d528d2677f0518c570baf2b7abdcf0cd2d248860b68507bdcb3e91d4c0cea"; };
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.5" = overridableMkRustCrate (profileName: rec {
    name = "num-traits";
    version = "0.2.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "630de1ef5cc79d0cdd78b7e33b81f083cbfe90de0f4b2b2f07f905867c70e9fe"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.8.0" = overridableMkRustCrate (profileName: rec {
    name = "num_cpus";
    version = "1.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c51a3322e4bca9d212ad9a158a02abc6934d005490c054a2778df73a70aa0a30"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".open."1.2.1" = overridableMkRustCrate (profileName: rec {
    name = "open";
    version = "1.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c281318d992e4432cfa799969467003d05921582a7489a8325e37f8a450d5113"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".opener."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "opener";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "176cd8eadff5ef9fa5c6d19452535662c02c6bf29b3d594a3fc01f749bb24c94"; };
    dependencies = {
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.2" { inherit profileName; };
      failure_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.2" { profileName = "__noProfile"; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.13" = overridableMkRustCrate (profileName: rec {
    name = "openssl";
    version = "0.10.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5af9e83eb3c51ee806387d26a43056f3246d865844caa6dd704d2ba7e831c264"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "vendored")
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
      foreign_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      openssl_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "openssl-probe";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "77af24da69f9d9341038eba93a073b1fdaaa1b788221b00a69bce9e762cb32de"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl-src."111.0.1+1.1.1" = overridableMkRustCrate (profileName: rec {
    name = "openssl-src";
    version = "111.0.1+1.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d1edaed888fd85a54a2646bf02992931ddefdda3b1a748fc79f088a8db27fcbe"; };
    dependencies = {
      ${ if rootFeatures' ? "cargo/vendored-openssl" then "cc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.38" = overridableMkRustCrate (profileName: rec {
    name = "openssl-sys";
    version = "0.9.38";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ff3d1b390ab1b9700f682ad95a30dc9c0f40dd212ca57266012cfc678b0e365a"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "openssl-src")
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "vendored")
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "cargo/vendored-openssl" then "openssl_src" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-src."111.0.1+1.1.1" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.14" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.6" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ordermap."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "ordermap";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a86ed3f5f244b372d6b1a00b72ef7f8876d0bc6a78a4c9985c53614041512063"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ordslice."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "ordslice";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dd20eec3dbe4376829cb7d80ae6ac45e0a766831dca50202ff2d40db46a8a024"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".owning_ref."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "owning_ref";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cdf84f41639e037b484f93433aa3897863b561ed65c6e59c7073d7c561710f37"; };
    dependencies = {
      stable_deref_trait = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".packed_simd."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "packed_simd";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "25d36de864f7218ec5633572a800109bbe5a1cc8d9d95a967f3daf93ea7e6ddc"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "default")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustfmt-nightly/generic-simd" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
    };
  });
  
  "unknown".panic_abort."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "panic_abort";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libpanic_abort");
    dependencies = {
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      libc = rustPackages."unknown".libc."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".panic_unwind."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "panic_unwind";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libpanic_unwind");
    dependencies = {
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      libc = rustPackages."unknown".libc."0.0.0" { inherit profileName; };
      unwind = rustPackages."unknown".unwind."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.6.4" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot";
    version = "0.6.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f0802bff09003b291ba756dc7e79313e51cc31667e94afbe847def490424cde5"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "nightly" ]
      [ "owning_ref" ]
    ];
    dependencies = {
      lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.1.3" { inherit profileName; };
      parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.3.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.2.14" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot_core";
    version = "0.2.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4db1a8ccf734a7bce794cc19b3df06ed87ab2f3907036b693c68f56b4d4537fa"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.4.3" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot_core";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "06a2b6aae052309c2fd2161ef58f5067bc17bb758377a0de9d4b279d603fdd8a"; };
    features = builtins.concatLists [
      [ "nightly" ]
    ];
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.5.5" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "percent-encoding";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "31010dd2e1ac33d5b46a5b413495239882813e0369f8ed8a5e266f173602f831"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pest."1.0.6" = overridableMkRustCrate (profileName: rec {
    name = "pest";
    version = "1.0.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0fce5d8b5cc33983fc74f78ad552b5522ab41442c4ca91606e4236eb4b5ceefc"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pest_derive."1.0.7" = overridableMkRustCrate (profileName: rec {
    name = "pest_derive";
    version = "1.0.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ab94faafeb93f4c5e3ce81ca0e5a779529a602ad5d09ae6d21996bfb8b6a52bf"; };
    dependencies = {
      pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."1.0.6" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.3.15" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.11.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".petgraph."0.4.13" = overridableMkRustCrate (profileName: rec {
    name = "petgraph";
    version = "0.4.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9c3659d1ee90221741f65dd128d9998311b0e40c5d3c23a62445938214abce4f"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "graphmap" ]
      [ "ordermap" ]
      [ "stable_graph" ]
    ];
    dependencies = {
      fixedbitset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fixedbitset."0.1.9" { inherit profileName; };
      ordermap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ordermap."0.3.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf."0.7.22" = overridableMkRustCrate (profileName: rec {
    name = "phf";
    version = "0.7.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7d37a244c75a9748e049225155f56dbcb98fe71b192fd25fd23cb914b5ad62f2"; };
    dependencies = {
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.22" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf_codegen."0.7.22" = overridableMkRustCrate (profileName: rec {
    name = "phf_codegen";
    version = "0.7.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4e4048fe7dd7a06b8127ecd6d3803149126e9b33c7558879846da3a63f734f2b"; };
    dependencies = {
      phf_generator = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.7.22" { inherit profileName; };
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.22" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.7.22" = overridableMkRustCrate (profileName: rec {
    name = "phf_generator";
    version = "0.7.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "05a079dd052e7b674d21cb31cbb6c05efd56a2cd2827db7692e2f1a507ebd998"; };
    dependencies = {
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.22" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.4.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.22" = overridableMkRustCrate (profileName: rec {
    name = "phf_shared";
    version = "0.7.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c2261d544c2bb6aa3b10022b0be371b9c7c64f762ef28c6f5d4f1ef6d97b5930"; };
    dependencies = {
      siphasher = rustPackages."registry+https://github.com/rust-lang/crates.io-index".siphasher."0.2.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.14" = overridableMkRustCrate (profileName: rec {
    name = "pkg-config";
    version = "0.3.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "676e8eb2b1b4c9043511a9b7bea0915320d7e502b0a079fb03f9635a5252b18c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".polonius-engine."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "polonius-engine";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a5b6b0a7f5f4278b991ffd14abce1d01b013121ad297460237ef0a2f08d43201"; };
    dependencies = {
      datafrog = rustPackages."registry+https://github.com/rust-lang/crates.io-index".datafrog."0.1.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".precomputed-hash."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "precomputed-hash";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pretty_assertions."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "pretty_assertions";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3a029430f0d744bc3d15dd474d591bed2402b645d024583082b9f63bb936dac6"; };
    dependencies = {
      ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" { inherit profileName; };
      difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pretty_env_logger."0.2.5" = overridableMkRustCrate (profileName: rec {
    name = "pretty_env_logger";
    version = "0.2.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ed8d1e63042e889b85228620629b51c011d380eed2c7e0015f8a644def280c28"; };
    dependencies = {
      ${ if rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger" then "ansi_term" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" { inherit profileName; };
      ${ if rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger" then "chrono" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.4" { inherit profileName; };
      ${ if rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger" then "env_logger" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.5.12" { inherit profileName; };
      ${ if rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.3.8" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro2";
    version = "0.3.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1b06e2f335f48d24442b35a19df506a835fb3547bc3c06ef27340da9acf5cae7"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.24" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro2";
    version = "0.4.24";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "77619697826f31a02ae974457af0b29b723e5619e113e9397b8b82c6bd253f09"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" { inherit profileName; };
    };
  });
  
  "unknown".proc_macro."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "proc_macro";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libproc_macro");
  });
  
  "unknown".profiler_builtins."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "profiler_builtins";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libprofiler_builtins");
    dependencies = {
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proptest."0.8.7" = overridableMkRustCrate (profileName: rec {
    name = "proptest";
    version = "0.8.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "926d0604475349f463fe44130aae73f2294b5309ab2ca0310b998bd334ef191f"; };
    features = builtins.concatLists [
      [ "bit-set" ]
      [ "default" ]
      [ "fork" ]
      [ "quick-error" ]
      [ "regex-syntax" ]
      [ "rusty-fork" ]
      [ "std" ]
      [ "tempfile" ]
      [ "timeout" ]
    ];
    dependencies = {
      bit_set = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.0" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.2.3" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.5" { inherit profileName; };
      quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.2" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.5.5" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.2" { inherit profileName; };
      rusty_fork = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rusty-fork."0.2.1" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.0.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "pulldown-cmark";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d6fdf85cda6cadfae5428a54661d431330b312bc767ddbc57adbedc24da66e32"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "getopts" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."0.9.1" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.17" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "pulldown-cmark";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "eef52fac62d0ea7b9b4dc7da092aa64ea7ec3d90af6679422d3d7e0e14b6ee15"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "getopts" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.17" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.2" = overridableMkRustCrate (profileName: rec {
    name = "quick-error";
    version = "1.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9274b940887ce9addde99c4eee6b5c44cc494b182b97e73dc8ffdcb3397fd3f0"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quine-mc_cluskey."0.2.4" = overridableMkRustCrate (profileName: rec {
    name = "quine-mc_cluskey";
    version = "0.2.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "07589615d719a60c8dd8a4622e7946465dfef20d1a428f969e3443e7386d5f45"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quote."0.3.15" = overridableMkRustCrate (profileName: rec {
    name = "quote";
    version = "0.3.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7a6e920b65c65f10b2ae65c831a81a073a89edd28c7cce89475bff467ab4167a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quote."0.5.2" = overridableMkRustCrate (profileName: rec {
    name = "quote";
    version = "0.5.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9949cfe66888ffe1d53e6ec9d9f3b70714083854be20fd5e271b232a017401e8"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quote."0.6.8" = overridableMkRustCrate (profileName: rec {
    name = "quote";
    version = "0.6.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dd636425967c33af890042c483632d33fa7a18f19ad1d7ea72e8998c6ef8dea5"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.24" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".racer."2.1.13" = overridableMkRustCrate (profileName: rec {
    name = "racer";
    version = "2.1.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "344a53b68d889ab5f44d0617f2bbe1f696abe6a730bd41fa619cfc6fa83a6078"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.32.0" { inherit profileName; };
      derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.13.0" { profileName = "__noProfile"; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.5.12" { inherit profileName; };
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."1.1.1" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.4.0" { inherit profileName; };
      syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax."297.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "rand";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8356f47b32624fef5b3301c1be97e5944ecdd595409cc5da11d05f211db6cfbd"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "libc" ]
      [ "std" ]
    ];
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_zircon" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand."0.5.5" = overridableMkRustCrate (profileName: rec {
    name = "rand";
    version = "0.5.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e464cd887e869cddcae8792a4ee31d23c7edd516700695608f5b98c67ee0131c"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "cloudabi" ]
      [ "default" ]
      [ "fuchsia-zircon" ]
      [ "i128_support" ]
      [ "libc" ]
      [ "std" ]
      [ "winapi" ]
    ];
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_zircon" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.2.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "rand_core";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "edecf0f94da5551fc9b492093e30b041a891657db7940ee221f9d2f66e82eef2"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rayon."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "rayon";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "80e811e76f1dbf68abf87a759083d34600017fc4e10b6bd5ad84a700f9dba4b1"; };
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
      rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.4.0" = overridableMkRustCrate (profileName: rec {
    name = "rayon-core";
    version = "1.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9d24ad214285a7729b174ed6d3bcfcb80177807f959d95fafd5bfc5c4f201ac8"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.2.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.8.0" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.4.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.40" = overridableMkRustCrate (profileName: rec {
    name = "redox_syscall";
    version = "0.1.40";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c214e91d3ecf43e9a4e41e578973adeb14b474f2bee858742d127af75a0112b1"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".redox_termios."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "redox_termios";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76"; };
    dependencies = {
      syscall = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.40" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex."0.2.11" = overridableMkRustCrate (profileName: rec {
    name = "regex";
    version = "0.2.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9329abc99e39129fcceabd24cf5d85b4671ef7c29c50e972bc5afe32438ec384"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      aho_corasick = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.6.7" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.0.2" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.5.6" { inherit profileName; };
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."0.3.6" { inherit profileName; };
      utf8_ranges = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8-ranges."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" = overridableMkRustCrate (profileName: rec {
    name = "regex";
    version = "1.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "67d0301b0c6804eca7e3c275119d0b01ff3b7ab9258a65709e608a66312a1025"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
    dependencies = {
      aho_corasick = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.6.7" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.0.2" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.2" { inherit profileName; };
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."0.3.6" { inherit profileName; };
      utf8_ranges = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8-ranges."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.5.6" = overridableMkRustCrate (profileName: rec {
    name = "regex-syntax";
    version = "0.5.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7d707a4fa2637f2dca2ef9fd02225ec7661fe01a53623c1e6515b6916511f7a7"; };
    dependencies = {
      ucd_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ucd-util."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "regex-syntax";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "747ba3b235651f6e2f67dfa8bcdcd073ddb7c243cb21c442fc12395dfcac212d"; };
    dependencies = {
      ucd_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ucd-util."0.1.1" { inherit profileName; };
    };
  });
  
  "unknown".remote-test-client."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "remote-test-client";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/remote-test-client");
  });
  
  "unknown".remote-test-server."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "remote-test-server";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/remote-test-server");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "remove_dir_all";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3488ba1b9a2084d38645c4c08276a1752dcbf2c7130d74f1569681ad5d2799c5"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "unknown".rls."1.31.6" = overridableMkRustCrate (profileName: rec {
    name = "rls";
    version = "1.31.6";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rls");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls/default") "clippy")
      (lib.optional (rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls/clippy_lints" || rootFeatures' ? "rls/default") "clippy_lints")
      (lib.optional (rootFeatures' ? "rls/default") "default")
    ];
    dependencies = {
      cargo = rustPackages."unknown".cargo."0.33.0" { inherit profileName; };
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.6.2" { inherit profileName; };
      ${ if rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls/clippy_lints" || rootFeatures' ? "rls/default" then "clippy_lints" else null } = rustPackages."unknown".clippy_lints."0.0.212" { inherit profileName; };
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.2.6" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.5.12" { inherit profileName; };
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.2" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.7.8" { inherit profileName; };
      jsonrpc_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."8.0.1" { inherit profileName; };
      languageserver_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".languageserver-types."0.51.1" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.8.0" { inherit profileName; };
      ordslice = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ordslice."0.3.0" { inherit profileName; };
      racer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".racer."2.1.13" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.5.5" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.0.1" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
      rls_analysis = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-analysis."0.16.10" { inherit profileName; };
      rls_blacklist = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-blacklist."0.1.3" { inherit profileName; };
      rls_data = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.18.1" { inherit profileName; };
      rls_rustc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-rustc."0.5.0" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.4.0" { inherit profileName; };
      rls_vfs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-vfs."0.7.0" { inherit profileName; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-serialize."0.3.24" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      rustc_tools_util = rustPackages."unknown".rustc_tools_util."0.1.0" { inherit profileName; };
      rustfmt_nightly = rustPackages."unknown".rustfmt-nightly."1.0.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.4.6" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.1" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.5" { inherit profileName; };
    };
    buildDependencies = {
      rustc_tools_util = buildRustPackages."unknown".rustc_tools_util."0.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-analysis."0.16.10" = overridableMkRustCrate (profileName: rec {
    name = "rls-analysis";
    version = "0.16.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2de1187cceaf16d7642cc78835a2890b55b35ed9e8a8e3c6348a6297d8dd0fb1"; };
    dependencies = {
      derive_new = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.4" { profileName = "__noProfile"; };
      fst = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fst."0.3.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.7.8" { inherit profileName; };
      json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".json."0.11.13" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rls_data = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.18.1" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.4.0" { inherit profileName; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-serialize."0.3.24" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-blacklist."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "rls-blacklist";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b8ce1fdac03e138c4617ff87b194e1ff57a39bb985a044ccbd8673d30701e411"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-data."0.18.1" = overridableMkRustCrate (profileName: rec {
    name = "rls-data";
    version = "0.18.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3a209ce46bb52813cbe0786a7baadc0c1a3f5543ef93f179eda3b841ed72cf2e"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "rustc-serialize" ]
      [ "serde" ]
      [ "serde_derive" ]
      [ "serialize-rustc" ]
      [ "serialize-serde" ]
    ];
    dependencies = {
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.4.0" { inherit profileName; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-serialize."0.3.24" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-rustc."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-rustc";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2f9dba7390427aefa953608429701e3665192ca810ba8ae09301e001b7c7bed0"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-span."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-span";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5d7c7046dc6a92f2ae02ed302746db4382e75131b9ce20ce967259f6b5867a6a"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "rustc-serialize" ]
      [ "serde" ]
      [ "serde_derive" ]
      [ "serialize-rustc" ]
      [ "serialize-serde" ]
    ];
    dependencies = {
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-serialize."0.3.24" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-vfs."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-vfs";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "72d56425bd5aa86d9d4372b76f0381d3b4bda9c0220e71956c9fcc929f45c1f1"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.4.0" { inherit profileName; };
    };
  });
  
  "unknown".rustbook."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustbook";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustbook");
    dependencies = {
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.32.0" { inherit profileName; };
      mdbook = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mdbook."0.1.7" { inherit profileName; };
    };
  });
  
  "unknown".rustc."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc");
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      backtrace = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.9" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.2.3" { inherit profileName; };
      chalk_engine = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-engine."0.8.0" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.3" { inherit profileName; };
      fmt_macros = rustPackages."unknown".fmt_macros."0.0.0" { inherit profileName; };
      graphviz = rustPackages."unknown".graphviz."0.0.0" { inherit profileName; };
      jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.11" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.6.4" { inherit profileName; };
      polonius_engine = rustPackages."registry+https://github.com/rust-lang/crates.io-index".polonius-engine."0.5.0" { inherit profileName; };
      rustc_rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.1.1" { inherit profileName; };
      rustc_rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.1.1" { inherit profileName; };
      rustc_apfloat = rustPackages."unknown".rustc_apfloat."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."unknown".rustc_fs_util."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."0.1.2" { inherit profileName; };
      serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.0.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-arena."297.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-arena";
    version = "297.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b69fd4a0e8a3ecd99b497965d05f6f04dd2e4601a6146a841dbe4c8e77c2b30c"; };
    dependencies = {
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."297.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-graphviz."297.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-graphviz";
    version = "297.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f8136418dbc491bab74aa0565eaa2086754a7a81a5e74a1d84d6168d18e889e7"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_cratesio_shim."297.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_cratesio_shim";
    version = "297.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a972feda82332d1d05b1ba5a097e915cd9c9c8f1af2bd7b08af09fb88c753d5f"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."297.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_data_structures";
    version = "297.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "582584c6c48b0ece4b8aef3f9bb59d94d17c5665612bc87a71f509e45a3113b5"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
      ena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ena."0.9.3" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.6.4" { inherit profileName; };
      parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.2.14" { inherit profileName; };
      graphviz = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-graphviz."297.0.0" { inherit profileName; };
      rustc_cratesio_shim = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_cratesio_shim."297.0.0" { inherit profileName; };
      serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."297.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.0.1" { inherit profileName; };
      rustc_rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.1.1" { inherit profileName; };
      rustc_rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.1.1" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      stable_deref_trait = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."297.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_errors";
    version = "297.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cd852096944d0ac6af1aefa9639a2ae6dede217606ce97f88ff0dcc8c86d6ff6"; };
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc_cratesio_shim = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_cratesio_shim."297.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."297.0.0" { inherit profileName; };
      serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."297.0.0" { inherit profileName; };
      syntax_pos = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax_pos."297.0.0" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.2" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_target."297.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_target";
    version = "297.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "98301a272ecfeec29d2d4e97b07238707c2b89d86fc3a4a5f31a00728f14e288"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc_cratesio_shim = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_cratesio_shim."297.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."297.0.0" { inherit profileName; };
      serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."297.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."297.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-serialize";
    version = "297.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c8f13510e617e2e322e3297038fd6a7346f2297124af9e10e33a627c5d544e9d"; };
    dependencies = {
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax."297.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-syntax";
    version = "297.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0792f5a9ccfc5ec13bb5b0472fa49e145481029c39f6bf5b1a36decc99c3328f"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."297.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."297.0.0" { inherit profileName; };
      rustc_target = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_target."297.0.0" { inherit profileName; };
      serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."297.0.0" { inherit profileName; };
      syntax_pos = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax_pos."297.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."0.1.2" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax_pos."297.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-syntax_pos";
    version = "297.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0df9f97f41650d23b14f92f7267f8c61089655efb4533d82bf8991f99245198d"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
      arena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-arena."297.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."297.0.0" { inherit profileName; };
      serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."297.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."0.1.2" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.9" = overridableMkRustCrate (profileName: rec {
    name = "rustc-demangle";
    version = "0.1.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bcfe5b13211b4d78e5c2cadfebd7769197d95c639c35a50057eb4c05de811395"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "rustc-hash";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7540fc8b0c49f096ee9c961cda096467dce8084bec6bdca2fc83895fd9b28cb8"; };
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.2.3" { inherit profileName; };
    };
  });
  
  "unknown".rustc-main."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-main";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/rustc");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc") "jemalloc")
    ];
    dependencies = {
      rustc_codegen_ssa = rustPackages."unknown".rustc_codegen_ssa."0.0.0" { inherit profileName; };
      rustc_driver = rustPackages."unknown".rustc_driver."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "rustc-rayon";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8c6d5a683c6ba4ed37959097e88d71c9e8e26659a3cb5be8b389078e7ad45306"; };
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
      rustc_rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "rustc-rayon-core";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "40f06724db71e18d68b3b946fdf890ca8c921d9edccc1404fdfdb537b0d12649"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "tlv" ]
    ];
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.2.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.8.0" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.4.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-serialize."0.3.24" = overridableMkRustCrate (profileName: rec {
    name = "rustc-serialize";
    version = "0.3.24";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dcf128d1287d2ea9d80910b5f1120d0b8eede3fbf1abe91c40d39ea7d51e6fda"; };
  });
  
  "unknown".rustc-workspace-hack."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-workspace-hack";
    version = "1.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustc-workspace-hack");
    dependencies = {
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.5.5" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
    buildDependencies = {
      syn = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.14.9" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".rustc_allocator."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_allocator";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_allocator");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_apfloat."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_apfloat";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_apfloat");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      rustc_cratesio_shim = rustPackages."unknown".rustc_cratesio_shim."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
    };
  });
  
  "unknown".rustc_asan."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_asan";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_asan");
    dependencies = {
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
    buildDependencies = {
      build_helper = buildRustPackages."unknown".build_helper."0.1.0" { profileName = "__noProfile"; };
      cmake = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.33" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".rustc_borrowck."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_borrowck";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_borrowck");
    dependencies = {
      graphviz = rustPackages."unknown".graphviz."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_mir = rustPackages."unknown".rustc_mir."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_codegen_llvm."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_codegen_llvm";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_codegen_llvm");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc_codegen_llvm/emscripten") "emscripten")
    ];
    dependencies = {
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { inherit profileName; };
      memmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap."0.6.2" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.8.0" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.9" { inherit profileName; };
      rustc_llvm = rustPackages."unknown".rustc_llvm."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_codegen_ssa."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_codegen_ssa";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_codegen_ssa");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { inherit profileName; };
      jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.11" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      memmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap."0.6.2" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.8.0" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.9" { inherit profileName; };
      rustc_allocator = rustPackages."unknown".rustc_allocator."0.0.0" { inherit profileName; };
      rustc_apfloat = rustPackages."unknown".rustc_apfloat."0.0.0" { inherit profileName; };
      rustc_codegen_utils = rustPackages."unknown".rustc_codegen_utils."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."unknown".rustc_fs_util."0.0.0" { inherit profileName; };
      rustc_incremental = rustPackages."unknown".rustc_incremental."0.0.0" { inherit profileName; };
      rustc_mir = rustPackages."unknown".rustc_mir."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_codegen_utils."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_codegen_utils";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_codegen_utils");
    dependencies = {
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.3" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_incremental = rustPackages."unknown".rustc_incremental."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      rustc_mir = rustPackages."unknown".rustc_mir."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_cratesio_shim."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_cratesio_shim";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_cratesio_shim");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" { inherit profileName; };
    };
  });
  
  "unknown".rustc_data_structures."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_data_structures";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_data_structures");
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
      ena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ena."0.11.0" { inherit profileName; };
      graphviz = rustPackages."unknown".graphviz."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.6.4" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.0.1" { inherit profileName; };
      rustc_rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.1.1" { inherit profileName; };
      rustc_rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.1.1" { inherit profileName; };
      rustc_cratesio_shim = rustPackages."unknown".rustc_cratesio_shim."0.0.0" { inherit profileName; };
      serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      stable_deref_trait = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.1.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_driver."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_driver";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_driver");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc_driver/jemalloc-sys") "jemalloc-sys")
    ];
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.5.12" { inherit profileName; };
      graphviz = rustPackages."unknown".graphviz."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc_driver/jemalloc-sys" then "jemalloc_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jemalloc-sys."0.1.8" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.1.1" { inherit profileName; };
      rustc_allocator = rustPackages."unknown".rustc_allocator."0.0.0" { inherit profileName; };
      rustc_borrowck = rustPackages."unknown".rustc_borrowck."0.0.0" { inherit profileName; };
      rustc_codegen_utils = rustPackages."unknown".rustc_codegen_utils."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_incremental = rustPackages."unknown".rustc_incremental."0.0.0" { inherit profileName; };
      rustc_lint = rustPackages."unknown".rustc_lint."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      rustc_mir = rustPackages."unknown".rustc_mir."0.0.0" { inherit profileName; };
      rustc_passes = rustPackages."unknown".rustc_passes."0.0.0" { inherit profileName; };
      rustc_plugin = rustPackages."unknown".rustc_plugin."0.0.0" { inherit profileName; };
      rustc_privacy = rustPackages."unknown".rustc_privacy."0.0.0" { inherit profileName; };
      rustc_resolve = rustPackages."unknown".rustc_resolve."0.0.0" { inherit profileName; };
      rustc_save_analysis = rustPackages."unknown".rustc_save_analysis."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_traits = rustPackages."unknown".rustc_traits."0.0.0" { inherit profileName; };
      rustc_typeck = rustPackages."unknown".rustc_typeck."0.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."0.1.2" { inherit profileName; };
      serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_ext = rustPackages."unknown".syntax_ext."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_errors."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_errors";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_errors");
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc_cratesio_shim = rustPackages."unknown".rustc_cratesio_shim."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.2" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" { inherit profileName; };
    };
  });
  
  "unknown".rustc_fs_util."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_fs_util";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_fs_util");
  });
  
  "unknown".rustc_incremental."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_incremental";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_incremental");
    dependencies = {
      graphviz = rustPackages."unknown".graphviz."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.5.5" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."unknown".rustc_fs_util."0.0.0" { inherit profileName; };
      serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_lint."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_lint";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_lint");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_mir = rustPackages."unknown".rustc_mir."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_llvm."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_llvm";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_llvm");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc_codegen_llvm/emscripten" || rootFeatures' ? "rustc_llvm/emscripten") "emscripten")
      (lib.optional (rootFeatures' ? "rustc_llvm/static-libstdcpp") "static-libstdcpp")
    ];
    buildDependencies = {
      build_helper = buildRustPackages."unknown".build_helper."0.1.0" { profileName = "__noProfile"; };
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".rustc_lsan."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_lsan";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_lsan");
    dependencies = {
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
    buildDependencies = {
      build_helper = buildRustPackages."unknown".build_helper."0.1.0" { profileName = "__noProfile"; };
      cmake = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.33" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".rustc_metadata."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_metadata";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_metadata");
    dependencies = {
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.3" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      memmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap."0.6.2" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      stable_deref_trait = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.1.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_ext = rustPackages."unknown".syntax_ext."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_mir."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_mir";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_mir");
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.2.3" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
      graphviz = rustPackages."unknown".graphviz."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      log_settings = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log_settings."0.1.2" { inherit profileName; };
      polonius_engine = rustPackages."registry+https://github.com/rust-lang/crates.io-index".polonius-engine."0.5.0" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_apfloat = rustPackages."unknown".rustc_apfloat."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_msan."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_msan";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_msan");
    dependencies = {
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
    buildDependencies = {
      build_helper = buildRustPackages."unknown".build_helper."0.1.0" { profileName = "__noProfile"; };
      cmake = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.33" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".rustc_passes."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_passes";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_passes");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_mir = rustPackages."unknown".rustc_mir."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_platform_intrinsics."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_platform_intrinsics";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_platform_intrinsics");
  });
  
  "unknown".rustc_plugin."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_plugin";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_plugin");
    dependencies = {
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_privacy."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_privacy";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_privacy");
    dependencies = {
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_typeck = rustPackages."unknown".rustc_typeck."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_resolve."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_resolve";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_resolve");
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_save_analysis."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_save_analysis";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_save_analysis");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rls_data = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.18.1" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.4.0" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-serialize."0.3.24" { inherit profileName; };
      rustc_codegen_utils = rustPackages."unknown".rustc_codegen_utils."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_typeck = rustPackages."unknown".rustc_typeck."0.0.0" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_target."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_target";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_target");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc_cratesio_shim = rustPackages."unknown".rustc_cratesio_shim."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_tools_util."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_tools_util";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy/rustc_tools_util");
  });
  
  "unknown".rustc_traits."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_traits";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_traits");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      chalk_engine = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-engine."0.8.0" { inherit profileName; };
      graphviz = rustPackages."unknown".graphviz."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_tsan."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_tsan";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_tsan");
    dependencies = {
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
    buildDependencies = {
      build_helper = buildRustPackages."unknown".build_helper."0.1.0" { profileName = "__noProfile"; };
      cmake = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.33" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".rustc_typeck."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_typeck";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_typeck");
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_platform_intrinsics = rustPackages."unknown".rustc_platform_intrinsics."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "rustc_version";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a54aa04a10c68c1c4eacb4337fd883b435997ede17a9385784b990777686b09a"; };
    dependencies = {
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
    };
  });
  
  "unknown".rustdoc."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustdoc";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustdoc");
    dependencies = {
      minifier = rustPackages."registry+https://github.com/rust-lang/crates.io-index".minifier."0.0.20" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.6.4" { inherit profileName; };
      pulldown_cmark = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.1.2" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.0.3" { inherit profileName; };
    };
  });
  
  "unknown".rustdoc-themes."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustdoc-themes";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustdoc-themes");
  });
  
  "unknown".rustdoc-tool."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustdoc-tool";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustdoc");
    dependencies = {
      rustdoc = rustPackages."unknown".rustdoc."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustfix."0.4.2" = overridableMkRustCrate (profileName: rec {
    name = "rustfix";
    version = "0.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "756567f00f7d89c9f89a5c401b8b1caaa122e27240b9eaadd0bb52ee0b680b1b"; };
    dependencies = {
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.2" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
    };
  });
  
  "unknown".rustfmt-nightly."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustfmt-nightly";
    version = "1.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustfmt");
    features = builtins.concatLists [
      [ "cargo-fmt" ]
      [ "default" ]
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "generic-simd")
      [ "rustfmt-format-diff" ]
    ];
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      bytecount = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytecount."0.4.0" { inherit profileName; };
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.6.2" { inherit profileName; };
      derive_new = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.4" { profileName = "__noProfile"; };
      diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diff."0.1.11" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.5.12" { inherit profileName; };
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.2" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.17" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.7.8" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.0.4" { inherit profileName; };
      rustc_target = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_target."297.0.0" { inherit profileName; };
      syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax."297.0.0" { inherit profileName; };
      syntax_pos = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax_pos."297.0.0" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
      term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".term."0.5.1" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.4.6" { inherit profileName; };
      unicode_segmentation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.2.1" { inherit profileName; };
    };
    devDependencies = {
      assert_cli = rustPackages."registry+https://github.com/rust-lang/crates.io-index".assert_cli."0.6.2" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rusty-fork."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "rusty-fork";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9591f190d2852720b679c21f66ad929f9f1d7bb09d1193c26167586029d8489c"; };
    features = builtins.concatLists [
      [ "timeout" ]
      [ "wait-timeout" ]
    ];
    dependencies = {
      fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.6" { inherit profileName; };
      quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.2" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.0.3" { inherit profileName; };
      wait_timeout = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wait-timeout."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ryu."0.2.6" = overridableMkRustCrate (profileName: rec {
    name = "ryu";
    version = "0.2.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7153dd96dade874ab973e098cb62fcdbb89a03682e46b144fd09550998d4a4a7"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.3" = overridableMkRustCrate (profileName: rec {
    name = "same-file";
    version = "1.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "10f7794e2fda7f594866840e95f5c5962e886e228e68b6505885811a94dd728c"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.14" = overridableMkRustCrate (profileName: rec {
    name = "schannel";
    version = "0.1.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0e1a231dc10abf6749cfa5d7767f25888d484201accbd919b66ab5413c502d56"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".scoped-tls."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "scoped-tls";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "332ffa32bf586782a3efaeb58f127980944bbc8c4d6913a86107ac2a5ab24b28"; };
    features = builtins.concatLists [
      [ "nightly" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".scopeguard."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "scopeguard";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "94258f53601af11e6a49f722422f6e3425c52b06245a5cf9bc09908b174f5e27"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "semver";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "serde" ]
    ];
    dependencies = {
      semver_parser = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "semver-parser";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" = overridableMkRustCrate (profileName: rec {
    name = "serde";
    version = "1.0.75";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "22d340507cea0b7e6632900a176101fea959c7065d93ba555072da90aaaafc87"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" = overridableMkRustCrate (profileName: rec {
    name = "serde_derive";
    version = "1.0.75";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "234fc8b737737b148ccd625175fc6390f5e4dacfdaa543cb93a3430d984a9119"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.24" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.8" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.14.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_ignored."0.0.4" = overridableMkRustCrate (profileName: rec {
    name = "serde_ignored";
    version = "0.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "190e9765dcedb56be63b6e0993a006c7e3b071a016a304736e4a315dc01fb142"; };
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" = overridableMkRustCrate (profileName: rec {
    name = "serde_json";
    version = "1.0.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bb47a3d5c84320222f66d7db21157c4a7407755de41798f9b4c1c40593397b1a"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "raw_value" ]
    ];
    dependencies = {
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.3" { inherit profileName; };
      ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."0.2.6" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
    };
  });
  
  "unknown".serialize."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "serialize";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libserialize");
    dependencies = {
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".shell-escape."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "shell-escape";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "170a13e64f2a51b77a45702ba77287f5c6829375b04a69cf2222acd17d0cfab9"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".shlex."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "shlex";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7fdf1b9db47230893d76faad238fd6097fd6d6a9245cd7a4d90dbd639536bbd2"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".siphasher."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "siphasher";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0df90a788073e8d0235a67e50441d47db7c8ad9debd91cbf43736a2a92d36537"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" = overridableMkRustCrate (profileName: rec {
    name = "smallvec";
    version = "0.6.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "153ffa32fd170e9944f7e0838edf824a754ec4c1fc64746fcc9fe1f8fa602e5d"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
      [ "union" ]
    ];
    dependencies = {
      unreachable = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unreachable."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.8" = overridableMkRustCrate (profileName: rec {
    name = "socket2";
    version = "0.3.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c4d11a52082057d87cb5caa31ad812f4504b97ab44732cd8359df2e9ff9f48e7"; };
    dependencies = {
      ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "redox" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
      ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "redox" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.40" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "stable_deref_trait";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ffbc596e092fe5f598b12ef46cc03754085ac2f4d8c739ad61c4ae266cc3b3fa"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "unknown".std."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "std";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libstd");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "std/backtrace") "backtrace")
      (lib.optional (rootFeatures' ? "std/compiler_builtins_c" || rootFeatures' ? "std/default") "compiler_builtins_c")
      (lib.optional (rootFeatures' ? "std/default") "default")
      (lib.optional (rootFeatures' ? "std/panic-unwind") "panic-unwind")
      (lib.optional (rootFeatures' ? "std/panic_immediate_abort") "panic_immediate_abort")
      (lib.optional (rootFeatures' ? "std/panic-unwind" || rootFeatures' ? "std/panic_unwind") "panic_unwind")
      (lib.optional (rootFeatures' ? "std/profiler") "profiler")
      (lib.optional (rootFeatures' ? "std/profiler" || rootFeatures' ? "std/profiler_builtins") "profiler_builtins")
      (lib.optional (rootFeatures' ? "std/wasm-bindgen-threads") "wasm-bindgen-threads")
      (lib.optional (rootFeatures' ? "std/wasm_syscall") "wasm_syscall")
    ];
    dependencies = {
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten") then "dlmalloc" else null } = rustPackages."unknown".dlmalloc."0.0.0" { inherit profileName; };
      libc = rustPackages."unknown".libc."0.0.0" { inherit profileName; };
      panic_abort = rustPackages."unknown".panic_abort."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/panic-unwind" || rootFeatures' ? "std/panic_unwind" then "panic_unwind" else null } = rustPackages."unknown".panic_unwind."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/profiler" || rootFeatures' ? "std/profiler_builtins" then "profiler_builtins" else null } = rustPackages."unknown".profiler_builtins."0.0.0" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-apple-darwin" || hostPlatform.config == "x86_64-unknown-linux-gnu" then "rustc_asan" else null } = rustPackages."unknown".rustc_asan."0.0.0" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-unknown-linux-gnu" then "rustc_lsan" else null } = rustPackages."unknown".rustc_lsan."0.0.0" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-unknown-linux-gnu" then "rustc_msan" else null } = rustPackages."unknown".rustc_msan."0.0.0" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-apple-darwin" || hostPlatform.config == "x86_64-unknown-linux-gnu" then "rustc_tsan" else null } = rustPackages."unknown".rustc_tsan."0.0.0" { inherit profileName; };
      unwind = rustPackages."unknown".unwind."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.5.5" { inherit profileName; };
    };
    buildDependencies = {
      build_helper = buildRustPackages."unknown".build_helper."0.1.0" { profileName = "__noProfile"; };
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.25" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".string_cache."0.7.3" = overridableMkRustCrate (profileName: rec {
    name = "string_cache";
    version = "0.7.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "25d70109977172b127fe834e5449e5ab1740b9ba49fa18a2020f509174f25423"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      debug_unreachable = rustPackages."registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.1" { inherit profileName; };
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.22" { inherit profileName; };
      precomputed_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".precomputed-hash."0.1.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      string_cache_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache_shared."0.3.0" { inherit profileName; };
    };
    buildDependencies = {
      string_cache_codegen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache_codegen."0.4.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".string_cache_codegen."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "string_cache_codegen";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "35293b05cf1494e8ddd042a7df6756bf18d07f42d234f32e71dce8a7aabb0191"; };
    dependencies = {
      phf_generator = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.7.22" { inherit profileName; };
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.22" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.3.8" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.5.2" { inherit profileName; };
      string_cache_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache_shared."0.3.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".string_cache_shared."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "string_cache_shared";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b1884d1bc09741d466d9b14e6d37ac89d6909cbcac41dd9ae982d4d063bbedfc"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strsim."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "strsim";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bb4f380125926a99e52bc279241539c018323fab05ad6368b56f93d9369ff550"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strum."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "strum";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "099e21b5dd6dd07b5adcf8c4b723a7c0b7efd7a9359bf963d58c0caae8532545"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.9.1" = overridableMkRustCrate (profileName: rec {
    name = "strum_macros";
    version = "0.9.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1292d85e688e4696ecb69b2db2648994fb8af266974e89be53cefdf003861a5d"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.24" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.8" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.14.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".syn."0.11.11" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "0.11.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d3b891b9015c88c576343b9b3e41c2c11a51c219ef067b264bd9c8aa9b441dad"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "parsing" ]
      [ "printing" ]
      [ "quote" ]
      [ "synom" ]
      [ "unicode-xid" ]
    ];
    dependencies = {
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.3.15" { inherit profileName; };
      synom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".synom."0.11.3" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.0.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".syn."0.13.11" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "0.13.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "14f9bf6292f3a61d2c716723fdb789a41bbe104168e6f496dc6497e531ea1b9b"; };
    features = builtins.concatLists [
      [ "clone-impls" ]
      [ "default" ]
      [ "derive" ]
      [ "extra-traits" ]
      [ "fold" ]
      [ "full" ]
      [ "parsing" ]
      [ "printing" ]
      [ "proc-macro" ]
      [ "quote" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.3.8" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.5.2" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".syn."0.14.9" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "0.14.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "261ae9ecaa397c42b960649561949d69311f08eeaea86a65696e6e46517cf741"; };
    features = builtins.concatLists [
      [ "clone-impls" ]
      [ "default" ]
      [ "derive" ]
      [ "extra-traits" ]
      [ "parsing" ]
      [ "printing" ]
      [ "proc-macro" ]
      [ "quote" ]
      [ "visit" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.24" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.8" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".syn."0.15.21" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "0.15.21";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "816b7af21405b011a23554ea2dc3f6576dc86ca557047c34098c1d741f10f823"; };
    features = builtins.concatLists [
      [ "clone-impls" ]
      [ "default" ]
      [ "derive" ]
      [ "extra-traits" ]
      [ "parsing" ]
      [ "printing" ]
      [ "proc-macro" ]
      [ "quote" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.24" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.8" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".synom."0.11.3" = overridableMkRustCrate (profileName: rec {
    name = "synom";
    version = "0.11.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a393066ed9010ebaed60b9eafa373d4b1baac186dd7e008555b0f702b51945b6"; };
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.0.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".synstructure."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "synstructure";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "85bb9b7550d063ea184027c9b8c20ac167cd36d3e06b3a40bceb9d746dc1a7b7"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.24" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.8" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.14.9" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" { inherit profileName; };
    };
  });
  
  "unknown".syntax."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "syntax";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libsyntax");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."0.1.2" { inherit profileName; };
      serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".syntax_ext."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "syntax_ext";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libsyntax_ext");
    dependencies = {
      fmt_macros = rustPackages."unknown".fmt_macros."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.5" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.5" { inherit profileName; };
      syntax = rustPackages."unknown".syntax."0.0.0" { inherit profileName; };
      syntax_pos = rustPackages."unknown".syntax_pos."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".syntax_pos."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "syntax_pos";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libsyntax_pos");
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.5" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."0.1.2" { inherit profileName; };
      serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tar."0.4.20" = overridableMkRustCrate (profileName: rec {
    name = "tar";
    version = "0.4.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a303ba60a099fcd2aaa646b14d2724591a96a75283e4b7ed3d1a1658909d9ae2"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "xattr" ]
    ];
    dependencies = {
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.1" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.40" { inherit profileName; };
      ${ if hostPlatform.isUnix then "xattr" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xattr."0.2.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tempfile."3.0.3" = overridableMkRustCrate (profileName: rec {
    name = "tempfile";
    version = "3.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c4b103c6d08d323b92ff42c8ce62abcd83ca8efa7fd5bf7927efefec75f58c76"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.5.5" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.40" { inherit profileName; };
      remove_dir_all = rustPackages."registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "tendril";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9de21546595a0873061940d994bbbc5c35f024ae4fd61ec5c5b159115684f508"; };
    dependencies = {
      futf = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futf."0.1.4" { inherit profileName; };
      mac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; };
      utf8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf-8."0.7.2" { inherit profileName; };
    };
  });
  
  "unknown".term."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "term";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libterm");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".term."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "term";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5e6b677dd1e8214ea1ef4297f85dbcbed8e8cdddb561040cc998ca2551c37561"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.2.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.2" = overridableMkRustCrate (profileName: rec {
    name = "termcolor";
    version = "1.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3390f44f1f706d8870297b6a2c4f92d9ab65a37c265fbbc6ac4ee72bcc2f3698"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "wincolor" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wincolor."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".termion."1.5.1" = overridableMkRustCrate (profileName: rec {
    name = "termion";
    version = "1.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096"; };
    dependencies = {
      ${ if !(hostPlatform.parsed.kernel.name == "redox") then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.40" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "redox_termios" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_termios."0.1.1" { inherit profileName; };
    };
  });
  
  "unknown".test."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "test";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libtest");
    dependencies = {
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.17" { inherit profileName; };
      proc_macro = rustPackages."unknown".proc_macro."0.0.0" { inherit profileName; };
      term = rustPackages."unknown".term."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".textwrap."0.10.0" = overridableMkRustCrate (profileName: rec {
    name = "textwrap";
    version = "0.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6"; };
    dependencies = {
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thread_local."0.3.6" = overridableMkRustCrate (profileName: rec {
    name = "thread_local";
    version = "0.3.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
    };
  });
  
  "unknown".tidy."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "tidy";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/tidy");
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.75" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.31" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".time."0.1.40" = overridableMkRustCrate (profileName: rec {
    name = "time";
    version = "0.1.40";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d825be0eb33fda1a7e68012d51e9c7f451dc1a69391e7fdc197060bb8c56667b"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.40" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".toml."0.4.6" = overridableMkRustCrate (profileName: rec {
    name = "toml";
    version = "0.4.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a0263c6c02c4db6c8f7681f9fd35e90de799ebd4cfdeab77a38f4ff6b3d8c0d9"; };
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".toml-query."0.6.0" = overridableMkRustCrate (profileName: rec {
    name = "toml-query";
    version = "0.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6854664bfc6df0360c695480836ee90e2d0c965f06db291d10be9344792d43e8"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      error_chain = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-chain."0.11.0" { inherit profileName; };
      is_match = rustPackages."registry+https://github.com/rust-lang/crates.io-index".is-match."0.1.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.1.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."0.2.11" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.4.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".typenum."1.10.0" = overridableMkRustCrate (profileName: rec {
    name = "typenum";
    version = "1.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "612d636f949607bdf9b123b4a6f6d966dedf3ff669f7f045890d3a4a73948169"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ucd-util."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "ucd-util";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fd2be2d6639d0f8fe6cdda291ad456e23629558d466e2789d2c3e9892bda285d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "unicode-bidi";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "49f2bd0c6468a8230e1db229cff8029217cf623c767ea5d60bfbd42729ea54d5"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.7" = overridableMkRustCrate (profileName: rec {
    name = "unicode-normalization";
    version = "0.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6a0180bc61fc5a987082bfa111f4cc95c4caff7f9799f3e46df09163a937aa25"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.2.1" = overridableMkRustCrate (profileName: rec {
    name = "unicode-segmentation";
    version = "1.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aa6024fc12ddfd1c6dbc14a80fa2324d4568849869b779f6bd37e5e4c03344d1"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "unicode-width";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "882386231c45df4700b275c7ff55b6f3698780a650026380e72dabe76fa46526"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.0.4" = overridableMkRustCrate (profileName: rec {
    name = "unicode-xid";
    version = "0.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8c1f860d7d29cf02cb2f3f359fd35991af3d30bac52c57d265a3c461074cb4dc"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "unicode-xid";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unreachable."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "unreachable";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "382810877fe448991dfc7f0dd6e3ae5d58088fd0ea5e35189655f84e6814fa56"; };
    dependencies = {
      void = rustPackages."registry+https://github.com/rust-lang/crates.io-index".void."1.0.2" { inherit profileName; };
    };
  });
  
  "unknown".unstable-book-gen."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "unstable-book-gen";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/unstable-book-gen");
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.5" { inherit profileName; };
      tidy = rustPackages."unknown".tidy."0.1.0" { inherit profileName; };
    };
  });
  
  "unknown".unwind."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "unwind";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libunwind");
    dependencies = {
      compiler_builtins = rustPackages."unknown".compiler_builtins."0.0.0" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      libc = rustPackages."unknown".libc."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".url."1.7.1" = overridableMkRustCrate (profileName: rec {
    name = "url";
    version = "1.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2a321979c09843d272956e73700d12c4e7d3d92b2ee112b31548aef0d4efc5a6"; };
    dependencies = {
      idna = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.1.5" { inherit profileName; };
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".url_serde."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "url_serde";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "74e7d099f1ee52f823d4bdd60c93c3602043c728f5db3b97bdb548467f7bddea"; };
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.75" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".utf-8."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "utf-8";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f1262dfab4c30d5cb7c07026be00ee343a6cf5027fdc0104a9160f354e5db75c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".utf8-ranges."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "utf8-ranges";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fd70f467df6810094968e2fce0ee1bd0e87157aceb026a8c083bcf5e25b9efe4"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.6" = overridableMkRustCrate (profileName: rec {
    name = "vcpkg";
    version = "0.2.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "def296d3eb3b12371b2c7d0e83bfe1403e4db2d7a0bba324a12b21c4ee13143d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".vec_map."0.8.1" = overridableMkRustCrate (profileName: rec {
    name = "vec_map";
    version = "0.8.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "05c78687fb1a80548ae3250346c3db86a80a7cdd77bda190189f2d0a0987c81a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".vergen."3.0.3" = overridableMkRustCrate (profileName: rec {
    name = "vergen";
    version = "3.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1b9696d96ec5d68984d060af80d7ba0ed4eb533978a0efb05ed4b8465f20d04f"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.0.4" { inherit profileName; };
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.4" { inherit profileName; };
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.2" { inherit profileName; };
    };
    buildDependencies = {
      chrono = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.4" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".version_check."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "version_check";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "914b1a6776c4c929a602fafd8bc742e06365d4bcbe48c30f9cca5824f70dc9dd"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".void."1.0.2" = overridableMkRustCrate (profileName: rec {
    name = "void";
    version = "1.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wait-timeout."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "wait-timeout";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b9f3bf741a801531993db6478b95682117471f76916f5e690dd8d45395b09349"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.5" = overridableMkRustCrate (profileName: rec {
    name = "walkdir";
    version = "2.2.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "af464bc7be7b785c7ac72e266a6b67c4c9070155606f51655a650a6686204e35"; };
    dependencies = {
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" = overridableMkRustCrate (profileName: rec {
    name = "winapi";
    version = "0.2.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" = overridableMkRustCrate (profileName: rec {
    name = "winapi";
    version = "0.3.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "92c1eb33641e276cfa214a0522acad57be5c56b10cb348b3c5117db75f3ac4b0"; };
    features = builtins.concatLists [
      [ "basetsd" ]
      [ "consoleapi" ]
      [ "dbghelp" ]
      [ "errhandlingapi" ]
      [ "fileapi" ]
      [ "handleapi" ]
      [ "ioapiset" ]
      [ "jobapi" ]
      [ "jobapi2" ]
      (lib.optional (rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/directories") "knownfolders")
      [ "lmcons" ]
      [ "memoryapi" ]
      [ "minschannel" ]
      [ "minwinbase" ]
      [ "minwindef" ]
      [ "namedpipeapi" ]
      [ "ntdef" ]
      [ "ntsecapi" ]
      [ "ntstatus" ]
      (lib.optional (rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/directories") "objbase")
      [ "processenv" ]
      [ "processthreadsapi" ]
      [ "profileapi" ]
      [ "psapi" ]
      [ "schannel" ]
      [ "securitybaseapi" ]
      [ "shellapi" ]
      (lib.optional (rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/directories") "shlobj")
      [ "sspi" ]
      [ "std" ]
      [ "synchapi" ]
      [ "sysinfoapi" ]
      [ "timezoneapi" ]
      [ "userenv" ]
      [ "winbase" ]
      [ "wincon" ]
      [ "wincrypt" ]
      [ "winerror" ]
      [ "winioctl" ]
      [ "winnt" ]
      [ "winsock2" ]
      [ "ws2def" ]
      [ "ws2ipdef" ]
      [ "ws2tcpip" ]
    ];
    dependencies = {
      ${ if hostPlatform.config == "i686-pc-windows-gnu" then "winapi_i686_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-pc-windows-gnu" then "winapi_x86_64_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "winapi-build";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "winapi-util";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "afc5508759c5bf4285e61feb862b6083c8480aec864fa17a81fdec6f69b461ab"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wincolor."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "wincolor";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "561ed901ae465d6185fa7864d63fbd5720d0ef718366c9a4dc83cf6170d7e9ba"; };
    dependencies = {
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.6" { inherit profileName; };
      winapi_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".xattr."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "xattr";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "244c3741f4240ef46274860397c7c74e50eb23624996930e484c16679633a54c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "unsupported" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.45" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".xz2."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "xz2";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "df8bf41d3030c3577c9458fd6640a05afbf43b150d0b531b16bd77d3f794f27a"; };
    dependencies = {
      lzma_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lzma-sys."0.1.10" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "yaml-rust";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e66366e18dc58b46801afbf2ca7661a9f59cc8c5962c29892b6039b4f86fa992"; };
  });
  
}
