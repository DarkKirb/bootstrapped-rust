# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.

args@{
  release ? true,
  rootFeatures ? [
    "bootstrap/default"
    "build_helper/default"
    "rustc-main/default"
    "rustc_codegen_ssa/default"
    "rustc/default"
    "arena/default"
    "rustc_data_structures/default"
    "graphviz/default"
    "rustc_index/default"
    "serialize/default"
    "rustc_apfloat/default"
    "rustc_ast/default"
    "rustc_lexer/default"
    "rustc_macros/default"
    "rustc_span/default"
    "rustc_attr/default"
    "rustc_ast_pretty/default"
    "rustc_errors/default"
    "rustc_feature/default"
    "rustc_session/default"
    "rustc_fs_util/default"
    "rustc_target/default"
    "rustc_hir/default"
    "rustc_codegen_utils/default"
    "rustc_metadata/default"
    "rustc_expand/default"
    "rustc_ast_passes/default"
    "rustc_parse/default"
    "rustc_incremental/default"
    "rustc_driver/default"
    "rustc_error_codes/default"
    "rustc_interface/default"
    "rustc_ast_lowering/default"
    "rustc_builtin_macros/default"
    "fmt_macros/default"
    "rustc_codegen_llvm/default"
    "rustc_llvm/default"
    "rustc_infer/default"
    "rustc_lint/default"
    "rustc_mir/default"
    "rustc_mir_build/default"
    "rustc_passes/default"
    "rustc_plugin_impl/default"
    "rustc_privacy/default"
    "rustc_typeck/default"
    "rustc_resolve/default"
    "rustc_traits/default"
    "rustc_ty/default"
    "rustc_save_analysis/default"
    "std/default"
    "alloc/default"
    "core/default"
    "panic_abort/default"
    "panic_unwind/default"
    "unwind/default"
    "profiler_builtins/default"
    "test/default"
    "proc_macro/default"
    "term/default"
    "cargotest2/default"
    "clippy/default"
    "clippy_lints/default"
    "rustc_tools_util/default"
    "clippy-mini-macro-test/default"
    "compiletest/default"
    "error_index_generator/default"
    "rustdoc/default"
    "linkchecker/default"
    "rustbook/default"
    "unstable-book-gen/default"
    "tidy/default"
    "build-manifest/default"
    "remote-test-client/default"
    "remote-test-server/default"
    "installer/default"
    "cargo/default"
    "cargo-platform/default"
    "crates-io/default"
    "cargo-test-macro/default"
    "cargo-test-support/default"
    "rustdoc-tool/default"
    "rls/default"
    "rls-ipc/default"
    "rls-rustc/default"
    "rustfmt-nightly/default"
    "rustfmt-config_proc_macro/default"
    "miri/default"
    "rustdoc-themes/default"
    "unicode-bdd/default"
  ],
  rustPackages,
  buildRustPackages,
  hostPlatform,
  hostPlatformCpu ? null,
  hostPlatformFeatures ? [],
  target ? null,
  codegenOpts ? null,
  profileOpts ? null,
  mkRustCrate,
  rustLib,
  lib,
  workspaceSrc,
}:
let
  workspaceSrc = if args.workspaceSrc == null then ./. else args.workspaceSrc;
in let
  inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
  profilesByName = {
    dev = builtins.fromTOML "debug = false\ndebug-assertions = false\n";
    test = builtins.fromTOML "debug = false\ndebug-assertions = false\n";
  };
  rootFeatures' = expandFeatures rootFeatures;
  overridableMkRustCrate = f:
    let
      drvs = genDrvsByProfile profilesByName ({ profile, profileName }: mkRustCrate ({ inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts; } // (f profileName)));
    in { compileMode ? null, profileName ? decideProfile compileMode release }:
      let drv = drvs.${profileName}; in if compileMode == null then drv else drv.override { inherit compileMode; };
in
{
  cargo2nixVersion = "0.11.0";
  workspace = {
    bootstrap = rustPackages.unknown.bootstrap."0.0.0";
    build_helper = rustPackages.unknown.build_helper."0.1.0";
    rustc-main = rustPackages.unknown.rustc-main."0.0.0";
    rustc_codegen_ssa = rustPackages.unknown.rustc_codegen_ssa."0.0.0";
    rustc = rustPackages.unknown.rustc."0.0.0";
    arena = rustPackages.unknown.arena."0.0.0";
    rustc_data_structures = rustPackages.unknown.rustc_data_structures."0.0.0";
    graphviz = rustPackages.unknown.graphviz."0.0.0";
    rustc_index = rustPackages.unknown.rustc_index."0.0.0";
    serialize = rustPackages.unknown.serialize."0.0.0";
    rustc_apfloat = rustPackages.unknown.rustc_apfloat."0.0.0";
    rustc_ast = rustPackages.unknown.rustc_ast."0.0.0";
    rustc_lexer = rustPackages.unknown.rustc_lexer."0.1.0";
    rustc_macros = rustPackages.unknown.rustc_macros."0.1.0";
    rustc_span = rustPackages.unknown.rustc_span."0.0.0";
    rustc_attr = rustPackages.unknown.rustc_attr."0.0.0";
    rustc_ast_pretty = rustPackages.unknown.rustc_ast_pretty."0.0.0";
    rustc_errors = rustPackages.unknown.rustc_errors."0.0.0";
    rustc_feature = rustPackages.unknown.rustc_feature."0.0.0";
    rustc_session = rustPackages.unknown.rustc_session."0.0.0";
    rustc_fs_util = rustPackages.unknown.rustc_fs_util."0.0.0";
    rustc_target = rustPackages.unknown.rustc_target."0.0.0";
    rustc_hir = rustPackages.unknown.rustc_hir."0.0.0";
    rustc_codegen_utils = rustPackages.unknown.rustc_codegen_utils."0.0.0";
    rustc_metadata = rustPackages.unknown.rustc_metadata."0.0.0";
    rustc_expand = rustPackages.unknown.rustc_expand."0.0.0";
    rustc_ast_passes = rustPackages.unknown.rustc_ast_passes."0.0.0";
    rustc_parse = rustPackages.unknown.rustc_parse."0.0.0";
    rustc_incremental = rustPackages.unknown.rustc_incremental."0.0.0";
    rustc_driver = rustPackages.unknown.rustc_driver."0.0.0";
    rustc_error_codes = rustPackages.unknown.rustc_error_codes."0.0.0";
    rustc_interface = rustPackages.unknown.rustc_interface."0.0.0";
    rustc_ast_lowering = rustPackages.unknown.rustc_ast_lowering."0.0.0";
    rustc_builtin_macros = rustPackages.unknown.rustc_builtin_macros."0.0.0";
    fmt_macros = rustPackages.unknown.fmt_macros."0.0.0";
    rustc_codegen_llvm = rustPackages.unknown.rustc_codegen_llvm."0.0.0";
    rustc_llvm = rustPackages.unknown.rustc_llvm."0.0.0";
    rustc_infer = rustPackages.unknown.rustc_infer."0.0.0";
    rustc_lint = rustPackages.unknown.rustc_lint."0.0.0";
    rustc_mir = rustPackages.unknown.rustc_mir."0.0.0";
    rustc_mir_build = rustPackages.unknown.rustc_mir_build."0.0.0";
    rustc_passes = rustPackages.unknown.rustc_passes."0.0.0";
    rustc_plugin_impl = rustPackages.unknown.rustc_plugin_impl."0.0.0";
    rustc_privacy = rustPackages.unknown.rustc_privacy."0.0.0";
    rustc_typeck = rustPackages.unknown.rustc_typeck."0.0.0";
    rustc_resolve = rustPackages.unknown.rustc_resolve."0.0.0";
    rustc_traits = rustPackages.unknown.rustc_traits."0.0.0";
    rustc_ty = rustPackages.unknown.rustc_ty."0.0.0";
    rustc_save_analysis = rustPackages.unknown.rustc_save_analysis."0.0.0";
    std = rustPackages.unknown.std."0.0.0";
    alloc = rustPackages.unknown.alloc."0.0.0";
    core = rustPackages.unknown.core."0.0.0";
    panic_abort = rustPackages.unknown.panic_abort."0.0.0";
    panic_unwind = rustPackages.unknown.panic_unwind."0.0.0";
    unwind = rustPackages.unknown.unwind."0.0.0";
    profiler_builtins = rustPackages.unknown.profiler_builtins."0.0.0";
    test = rustPackages.unknown.test."0.0.0";
    proc_macro = rustPackages.unknown.proc_macro."0.0.0";
    term = rustPackages.unknown.term."0.0.0";
    cargotest2 = rustPackages.unknown.cargotest2."0.1.0";
    clippy = rustPackages.unknown.clippy."0.0.212";
    clippy_lints = rustPackages.unknown.clippy_lints."0.0.212";
    rustc_tools_util = rustPackages.unknown.rustc_tools_util."0.2.0";
    clippy-mini-macro-test = rustPackages.unknown.clippy-mini-macro-test."0.2.0";
    compiletest = rustPackages.unknown.compiletest."0.0.0";
    error_index_generator = rustPackages.unknown.error_index_generator."0.0.0";
    rustdoc = rustPackages.unknown.rustdoc."0.0.0";
    linkchecker = rustPackages.unknown.linkchecker."0.1.0";
    rustbook = rustPackages.unknown.rustbook."0.1.0";
    unstable-book-gen = rustPackages.unknown.unstable-book-gen."0.1.0";
    tidy = rustPackages.unknown.tidy."0.1.0";
    build-manifest = rustPackages.unknown.build-manifest."0.1.0";
    remote-test-client = rustPackages.unknown.remote-test-client."0.1.0";
    remote-test-server = rustPackages.unknown.remote-test-server."0.1.0";
    installer = rustPackages.unknown.installer."0.0.0";
    cargo = rustPackages.unknown.cargo."0.44.0";
    cargo-platform = rustPackages.unknown.cargo-platform."0.1.1";
    crates-io = rustPackages.unknown.crates-io."0.31.0";
    cargo-test-macro = rustPackages.unknown.cargo-test-macro."0.1.0";
    cargo-test-support = rustPackages.unknown.cargo-test-support."0.1.0";
    rustdoc-tool = rustPackages.unknown.rustdoc-tool."0.0.0";
    rls = rustPackages.unknown.rls."1.41.0";
    rls-ipc = rustPackages.unknown.rls-ipc."0.1.0";
    rls-rustc = rustPackages.unknown.rls-rustc."0.6.0";
    rustfmt-nightly = rustPackages.unknown.rustfmt-nightly."1.4.12";
    rustfmt-config_proc_macro = rustPackages.unknown.rustfmt-config_proc_macro."0.2.0";
    miri = rustPackages.unknown.miri."0.1.0";
    rustdoc-themes = rustPackages.unknown.rustdoc-themes."0.1.0";
    unicode-bdd = rustPackages.unknown.unicode-bdd."0.1.0";
  };
  "registry+https://github.com/rust-lang/crates.io-index".adler32."1.0.3" = overridableMkRustCrate (profileName: rec {
    name = "adler32";
    version = "1.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7e522997b529f05601e05166c07ed17789691f562762c7f3b987263d2dedee5c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.3" = overridableMkRustCrate (profileName: rec {
    name = "aho-corasick";
    version = "0.7.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e6f484ae0c99fec2e858eb6134949117399f222608d84cadb3f58c1f97c2364c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.2" { inherit profileName; };
    };
  });
  
  "unknown".alloc."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "alloc";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/liballoc");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "alloc/compiler-builtins-c" || rootFeatures' ? "std/compiler-builtins-c" || rootFeatures' ? "test/compiler-builtins-c") "compiler-builtins-c")
      (lib.optional (rootFeatures' ? "alloc/compiler-builtins-mem") "compiler-builtins-mem")
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      rand_xorshift = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ammonia."3.0.0" = overridableMkRustCrate (profileName: rec {
    name = "ammonia";
    version = "3.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9e266e1f4be5ffa05309f650e2586fe1d3ae6034eb24025a7ae1dfecc330823a"; };
    dependencies = {
      html5ever = rustPackages."registry+https://github.com/rust-lang/crates.io-index".html5ever."0.24.1" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      maplit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maplit."1.0.1" { inherit profileName; };
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      tendril = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.0" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".annotate-snippets."0.6.1" = overridableMkRustCrate (profileName: rec {
    name = "annotate-snippets";
    version = "0.6.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c7021ce4924a3f25f802b2cccd1af585e39ea1a363a1aa2e72afe54b67a3a7a7"; };
    features = builtins.concatLists [
      [ "ansi_term" ]
      [ "default" ]
    ];
    dependencies = {
      ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "ansi_term";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.26" = overridableMkRustCrate (profileName: rec {
    name = "anyhow";
    version = "1.0.26";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7825f6833612eb2414095684fcf6c635becf3ce97fe48cf6421321e93bfbd53c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arc-swap."0.3.7" = overridableMkRustCrate (profileName: rec {
    name = "arc-swap";
    version = "0.3.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1025aeae2b664ca0ea726a89d574fe8f4e77dd712d443236ad1de00379450cf6"; };
  });
  
  "unknown".arena."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "arena";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libarena");
    dependencies = {
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".argon2rs."0.2.5" = overridableMkRustCrate (profileName: rec {
    name = "argon2rs";
    version = "0.2.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3f67b0b6a86dae6e67ff4ca2b6201396074996379fba2b92ff649126f37cb392"; };
    dependencies = {
      blake2_rfc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".blake2-rfc."0.2.18" { inherit profileName; };
      scoped_threadpool = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped_threadpool."0.1.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "arrayref";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0d382e583f07208808f6b1249e60848879ba3543f57c32277bf52d69c2f0f0ee"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.4.7" = overridableMkRustCrate (profileName: rec {
    name = "arrayvec";
    version = "0.4.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a1e964f9e24d588183fcb43503abda40d288c8657dfc27311516ce2f05675aef"; };
    dependencies = {
      nodrop = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nodrop."0.1.12" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" = overridableMkRustCrate (profileName: rec {
    name = "atty";
    version = "0.2.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "termion" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termion."1.5.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".autocfg."0.1.7" = overridableMkRustCrate (profileName: rec {
    name = "autocfg";
    version = "0.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1d49d90015b3c36167a20fe2810c5cd875ad504b39cff3d4eae7977e6b7c1cb2"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.44" = overridableMkRustCrate (profileName: rec {
    name = "backtrace";
    version = "0.3.44";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e4036b9bf40f3cf16aba72a3d65e8a520fc4bafcdc7079aea8f848c58c5b5536"; };
    features = builtins.concatLists [
      [ "backtrace-sys" ]
      [ "compiler_builtins" ]
      [ "core" ]
      [ "dbghelp" ]
      [ "default" ]
      [ "dladdr" ]
      [ "libbacktrace" ]
      [ "libunwind" ]
      [ "rustc-dep-of-std" ]
      [ "std" ]
    ];
    dependencies = {
      backtrace_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace-sys."0.1.32" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".backtrace-sys."0.1.32" = overridableMkRustCrate (profileName: rec {
    name = "backtrace-sys";
    version = "0.1.32";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5d6575f128516de27e3ce99689419835fce9643a9b215a14d2b5b685be018491"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".base64."0.10.1" = overridableMkRustCrate (profileName: rec {
    name = "base64";
    version = "0.10.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0b25d992356d2eb0ed82172f5248873db5560c4721f564b13cb5193bda5e668e"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "byteorder" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" = overridableMkRustCrate (profileName: rec {
    name = "bitflags";
    version = "1.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bitmaps."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "bitmaps";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "81e039a80914325b37fde728ef7693c212f0ac913d5599607d7b95a9484aae0b"; };
    dependencies = {
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.10.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".blake2-rfc."0.2.18" = overridableMkRustCrate (profileName: rec {
    name = "blake2-rfc";
    version = "0.2.18";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5d6d530bdd2d52966a6d03b7a964add7ae1a288d25214066fd4b600f0f796400"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.4.7" { inherit profileName; };
      constant_time_eq = rustPackages."registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "block-buffer";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a076c298b9ecdb530ed9d967e74a6027d6a7478924520acddcddc24c1c8ab3ab"; };
    dependencies = {
      arrayref = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.5" { inherit profileName; };
      byte_tools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byte-tools."0.2.0" { inherit profileName; };
    };
  });
  
  "unknown".bootstrap."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "bootstrap";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/bootstrap");
    dependencies = {
      build_helper = rustPackages."unknown".build_helper."0.1.0" { inherit profileName; };
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { inherit profileName; };
      cmake = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.42" { inherit profileName; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.8" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      ignore = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ignore."0.4.11" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.42" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
    devDependencies = {
      pretty_assertions = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pretty_assertions."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bstr."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "bstr";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "853b090ce0f45d0265902666bf88039ea3da825e33796716c511a1ec9c170036"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.2" { inherit profileName; };
    };
  });
  
  "unknown".build-manifest."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "build-manifest";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/build-manifest");
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.3" { inherit profileName; };
    };
  });
  
  "unknown".build_helper."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "build_helper";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/build_helper");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".byte-tools."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "byte-tools";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "560c32574a12a89ecd91f5e742165893f86e3ab98d21f8ea548658eb9eef5f40"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytecount."0.6.0" = overridableMkRustCrate (profileName: rec {
    name = "bytecount";
    version = "0.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b0017894339f586ccb943b01b9555de56770c11cda818e7e3d8bd93f4ed7f46e"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "generic-simd")
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "packed_simd")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustfmt-nightly/generic-simd" then "packed_simd" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".packed_simd."0.3.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.2" = overridableMkRustCrate (profileName: rec {
    name = "byteorder";
    version = "1.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a7c3dd8985a7111efc5c80b44e23ecdd8c007de8ade3b96595387e812b957cf5"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" = overridableMkRustCrate (profileName: rec {
    name = "bytes";
    version = "0.4.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "40ade3d27603c2cb345eb0912aec461a6dec7e06a4ae48589904e808335c7afa"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "either")
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "either" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
      iovec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytesize."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "bytesize";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "716960a18f978640f25101b5cbf1c6f6b0d3192fab36a2d98ca96f0ecbe41010"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".c2-chacha."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "c2-chacha";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "214238caa1bf3a496ec3392968969cab8549f96ff30652c9e56885329315f6bb"; };
    features = builtins.concatLists [
      [ "simd" ]
      [ "std" ]
    ];
    dependencies = {
      ppv_lite86 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.6" { inherit profileName; };
    };
  });
  
  "unknown".cargo."0.44.0" = overridableMkRustCrate (profileName: rec {
    name = "cargo";
    version = "0.44.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "cargo/deny-warnings") "deny-warnings")
      (lib.optional (rootFeatures' ? "cargo/openssl" || rootFeatures' ? "cargo/vendored-openssl") "openssl")
      (lib.optional (rootFeatures' ? "cargo/pretty-env-logger") "pretty-env-logger")
      (lib.optional (rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger") "pretty_env_logger")
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "vendored-openssl")
    ];
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.26" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      bytesize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytesize."1.0.0" { inherit profileName; };
      cargo_platform = rustPackages."unknown".cargo-platform."0.1.1" { inherit profileName; };
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.0" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "darwin" then "core_foundation" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.7.0" { inherit profileName; };
      crates_io = rustPackages."unknown".crates-io."0.31.0" { inherit profileName; };
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.0" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.0" { inherit profileName; };
      crypto_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crypto-hash."0.3.1" { inherit profileName; };
      curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl."0.4.25" { inherit profileName; };
      curl_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl-sys."0.4.25" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.8" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.12" { inherit profileName; };
      fs2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fs2."0.4.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "fwdansi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fwdansi."1.0.1" { inherit profileName; };
      git2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2."0.13.0" { inherit profileName; };
      git2_curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2-curl."0.14.0" { inherit profileName; };
      glob = rustPackages."registry+https://github.com/rust-lang/crates.io-index".glob."0.3.0" { inherit profileName; };
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.0" { inherit profileName; };
      home = rustPackages."registry+https://github.com/rust-lang/crates.io-index".home."0.5.1" { inherit profileName; };
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."2.0.0" { inherit profileName; };
      ignore = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ignore."0.4.11" { inherit profileName; };
      im_rc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".im-rc."14.0.0" { inherit profileName; };
      jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      lazycell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazycell."1.2.1" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      libgit2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.12.0+0.99.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.2" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.3" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
      opener = rustPackages."registry+https://github.com/rust-lang/crates.io-index".opener."0.4.0" { inherit profileName; };
      ${ if rootFeatures' ? "cargo/openssl" || rootFeatures' ? "cargo/vendored-openssl" then "openssl" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.25" { inherit profileName; };
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger" then "pretty_env_logger" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pretty_env_logger."0.4.0" { inherit profileName; };
      remove_dir_all = rustPackages."registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.2" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      rustfix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustfix."0.5.0" { inherit profileName; };
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.4" { inherit profileName; };
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_ignored = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_ignored."0.1.0" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      shell_escape = rustPackages."registry+https://github.com/rust-lang/crates.io-index".shell-escape."0.1.4" { inherit profileName; };
      strip_ansi_escapes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strip-ansi-escapes."0.1.0" { inherit profileName; };
      tar = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.26" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.4" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.3" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.6" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.7" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
    devDependencies = {
      cargo_test_macro = buildRustPackages."unknown".cargo-test-macro."0.1.0" { profileName = "__noProfile"; };
      cargo_test_support = rustPackages."unknown".cargo-test-support."0.1.0" { inherit profileName; };
    };
  });
  
  "unknown".cargo-platform."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "cargo-platform";
    version = "0.1.1";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo/crates/cargo-platform");
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "unknown".cargo-test-macro."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "cargo-test-macro";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo/crates/cargo-test-macro");
  });
  
  "unknown".cargo-test-support."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "cargo-test-support";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo/crates/cargo-test-support");
    dependencies = {
      cargo = rustPackages."unknown".cargo."0.44.0" { inherit profileName; };
      cargo_test_macro = buildRustPackages."unknown".cargo-test-macro."0.1.0" { profileName = "__noProfile"; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.8" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.12" { inherit profileName; };
      git2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2."0.13.0" { inherit profileName; };
      glob = rustPackages."registry+https://github.com/rust-lang/crates.io-index".glob."0.3.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      remove_dir_all = rustPackages."registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.2" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      tar = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.26" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "cargo_metadata";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "929766d993a2fde7a0ae962ee82429069cd7b68839cd9375b98efd719df65d3a"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" { inherit profileName; };
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "cargo_metadata";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8d2d1617e838936c0d2323a65cc151e03ae19a7678dd24f72bccf27119b90a5d"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
    };
  });
  
  "unknown".cargotest2."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "cargotest2";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargotest");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" = overridableMkRustCrate (profileName: rec {
    name = "cc";
    version = "1.0.50";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "95e28fa049fda1c330bcf9d723be7663a899c4679724b34c81e9f5a326aab8cd"; };
    features = builtins.concatLists [
      [ "jobserver" ]
      [ "parallel" ]
    ];
    dependencies = {
      jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "cfg-if";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.6" = overridableMkRustCrate (profileName: rec {
    name = "chrono";
    version = "0.4.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "45912881121cb26fad7c38c17ba7daa18764771836b34fab7d3fbd93ed633878"; };
    features = builtins.concatLists [
      [ "clock" ]
      [ "default" ]
      [ "time" ]
    ];
    dependencies = {
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.39" { inherit profileName; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.6" { inherit profileName; };
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.42" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".clap."2.33.0" = overridableMkRustCrate (profileName: rec {
    name = "clap";
    version = "2.33.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5067f5bb2d80ef5d68b4c87db81601f0b75bca627bc2ef76b141d7b846a3c6d9"; };
    features = builtins.concatLists [
      [ "ansi_term" ]
      [ "atty" ]
      [ "color" ]
      [ "default" ]
      [ "strsim" ]
      [ "suggestions" ]
      [ "vec_map" ]
      [ "yaml" ]
      [ "yaml-rust" ]
    ];
    dependencies = {
      ${ if !hostPlatform.isWindows then "ansi_term" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      strsim = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.8.0" { inherit profileName; };
      textwrap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".textwrap."0.11.0" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.6" { inherit profileName; };
      vec_map = rustPackages."registry+https://github.com/rust-lang/crates.io-index".vec_map."0.8.1" { inherit profileName; };
      yaml_rust = rustPackages."registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.3.5" { inherit profileName; };
    };
  });
  
  "unknown".clippy."0.0.212" = overridableMkRustCrate (profileName: rec {
    name = "clippy";
    version = "0.0.212";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "clippy/deny-warnings") "deny-warnings")
      (lib.optional (rootFeatures' ? "clippy/integration") "integration")
      (lib.optional (rootFeatures' ? "clippy/integration" || rootFeatures' ? "clippy/tempfile") "tempfile")
    ];
    dependencies = {
      clippy_lints = rustPackages."unknown".clippy_lints."0.0.212" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      rustc_tools_util = rustPackages."unknown".rustc_tools_util."0.2.0" { inherit profileName; };
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
      ${ if rootFeatures' ? "clippy/integration" || rootFeatures' ? "clippy/tempfile" then "tempfile" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
    };
    devDependencies = {
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.9.0" { inherit profileName; };
      clippy_mini_macro_test = buildRustPackages."unknown".clippy-mini-macro-test."0.2.0" { profileName = "__noProfile"; };
      compiletest_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiletest_rs."0.4.0" { inherit profileName; };
      derive_new = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.6" { profileName = "__noProfile"; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      tester = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tester."0.7.0" { inherit profileName; };
    };
    buildDependencies = {
      rustc_tools_util = buildRustPackages."unknown".rustc_tools_util."0.2.0" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".clippy-mini-macro-test."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "clippy-mini-macro-test";
    version = "0.2.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy/mini-macro");
  });
  
  "unknown".clippy_lints."0.0.212" = overridableMkRustCrate (profileName: rec {
    name = "clippy_lints";
    version = "0.0.212";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy/clippy_lints");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "clippy_lints/deny-warnings") "deny-warnings")
    ];
    dependencies = {
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.9.0" { inherit profileName; };
      if_chain = rustPackages."registry+https://github.com/rust-lang/crates.io-index".if_chain."1.0.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      pulldown_cmark = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.7.0" { inherit profileName; };
      quine_mc_cluskey = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quine-mc_cluskey."0.2.4" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.6" { inherit profileName; };
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.3" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.11" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" = overridableMkRustCrate (profileName: rec {
    name = "cloudabi";
    version = "0.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f"; };
    features = builtins.concatLists [
      [ "bitflags" ]
      [ "default" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.42" = overridableMkRustCrate (profileName: rec {
    name = "cmake";
    version = "0.1.42";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "81fb25b677f8bf1eb325017cb6bb8452f87969db0fedb4f757b297bee78a7c62"; };
    dependencies = {
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".codespan."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "codespan";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "de67bdcd653002a6dba3eb53850ce3a485547225d81cb6c2bbdbc5a0cba5d15d"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/codespan" || rootFeatures' ? "rustbook/codespan-reporting" || rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "unicode_segmentation" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".codespan-reporting."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "codespan-reporting";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "efd1d915d9e2b2ad696b2cd73215a84823ef3f0e3084d90304204415921b62c6"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/codespan-reporting" || rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "codespan" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".codespan."0.5.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/codespan-reporting" || rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "termcolor" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.4" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/codespan-reporting" || rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "unicode_width" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".colored."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "colored";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b0aa3473e85a3161b59845d6096b289bb577874cafeaf75ea1b1beaa6572c7fc"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."0.2.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".commoncrypto."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "commoncrypto";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d056a8586ba25a1e4d61cb090900e495952c7886786fc55f909ab2f819b69007"; };
    dependencies = {
      commoncrypto_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".commoncrypto-sys."0.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".commoncrypto-sys."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "commoncrypto-sys";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1fed34f46747aa73dfaa578069fd8279d2818ade2b55f38f22a9401c7f4083e2"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" = overridableMkRustCrate (profileName: rec {
    name = "compiler_builtins";
    version = "0.1.25";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "438ac08ddc5efe81452f984a9e33ba425b00b31d1f48e6acd9e2210aa28cc52e"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "alloc/compiler-builtins-c" || rootFeatures' ? "std/compiler-builtins-c" || rootFeatures' ? "test/compiler-builtins-c") "c")
      (lib.optional (rootFeatures' ? "alloc/compiler-builtins-c" || rootFeatures' ? "std/compiler-builtins-c" || rootFeatures' ? "test/compiler-builtins-c") "cc")
      [ "compiler-builtins" ]
      [ "core" ]
      [ "default" ]
      (lib.optional (rootFeatures' ? "alloc/compiler-builtins-mem") "mem")
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "alloc/compiler-builtins-c" || rootFeatures' ? "std/compiler-builtins-c" || rootFeatures' ? "test/compiler-builtins-c" then "cc" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".compiletest."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "compiletest";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/compiletest");
    dependencies = {
      diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diff."0.1.11" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.3" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      rustfix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustfix."0.5.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.7" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".compiletest_rs."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "compiletest_rs";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d7b678957210a00ba0fbeacc23d38cbfbf29895564da1616564634351e1dac5e"; };
    features = builtins.concatLists [
      [ "tempfile" ]
      [ "tmp" ]
    ];
    dependencies = {
      diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diff."0.1.11" { inherit profileName; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.8" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.3" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      rustfix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustfix."0.4.6" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      tester = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tester."0.7.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "constant_time_eq";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8ff012e225ce166d4422e0e78419d901719760f62ae2b7969ca6b564d1b54a9e"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cookie."0.12.0" = overridableMkRustCrate (profileName: rec {
    name = "cookie";
    version = "0.12.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "888604f00b3db336d2af898ec3c1d5d0ddf5e6d462220f2ededc33a87ac4bbd5"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "percent-encode")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "url")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "time" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.42" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "url" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cookie_store."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "cookie_store";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "46750b3f362965f197996c4448e4a0935e791bf7d6631bfce9ee0af3d24c919c"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "cookie" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cookie."0.12.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "failure" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "idna" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.1.5" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "publicsuffix" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".publicsuffix."1.5.3" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "serde" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "serde_json" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "time" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.42" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "try_from" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".try_from."0.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "url" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.2" { inherit profileName; };
    };
  });
  
  "unknown".core."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "core";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libcore");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "core/panic_immediate_abort" || rootFeatures' ? "std/panic_immediate_abort" || rootFeatures' ? "test/panic_immediate_abort") "panic_immediate_abort")
    ];
    devDependencies = {
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.6.3" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation";
    version = "0.6.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4e2640d6d0bf22e82bed1b73c6aef8d5dd31e5abe6666c57e6d45e2649f4f887"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "core_foundation_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.6.2" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "57d24c7a13c43e870e37c1556b74555437870a04514f7685f5b354e090567171"; };
    features = builtins.concatLists [
      [ "mac_os_10_7_support" ]
    ];
    dependencies = {
      core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.7.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation-sys";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e7ca8a5221364ef15ce201e8ed2f609fc312682a8f4e0e3d4aa5879764e0fa3b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation-sys";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b3a71ab494c0b5b860bdc8407ae08978052417070c2ced38573a9157ad75b8ac"; };
    features = builtins.concatLists [
      [ "mac_os_10_7_support" ]
    ];
  });
  
  "unknown".crates-io."0.31.0" = overridableMkRustCrate (profileName: rec {
    name = "crates-io";
    version = "0.31.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo/crates/crates-io");
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.26" { inherit profileName; };
      curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl."0.4.25" { inherit profileName; };
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.1.2" = overridableMkRustCrate (profileName: rec {
    name = "crc32fast";
    version = "1.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e91d5240c6975ef33aeb5f148f35275c25eda8e8a5f95abe421978b05b8bf192"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-channel";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "acec9a3b0b3559f15aee4f90746c4e5e293b701c0f7d3925d24e01645267b68c"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-deque";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b18cd2e169ad86297e6bc0ad9aa679aee9daa4f19e8163860faf7c164e4f5a71"; };
    dependencies = {
      crossbeam_epoch = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.7.2" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-epoch";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fedcd6772e37f3da2a9af9bf12ebe046c0dfe657992377b4df982a2b54cd37a9"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "std" ]
    ];
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.4.7" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      memoffset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.5.1" { inherit profileName; };
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-queue";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7c979cd6cfe72335896575c6b5688da489e420d36a27a0b9eb0c73db574b4a4b"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-utils";
    version = "0.6.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f8306fcef4a7b563b76b7dd949ca48f52bc1141aa067d2ea09565f3e2652aa5c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "nightly" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-utils";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ce446db02cdc3165b94ae73111e570793400d0794e46125cc4056c81cbb039f4"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."0.1.7" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crypto-hash."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "crypto-hash";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "09de9ee0fc255ace04c7fa0763c9395a945c37c8292bb554f8d48361d1dcf1b4"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "darwin" then "commoncrypto" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".commoncrypto."0.2.0" { inherit profileName; };
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.3.2" { inherit profileName; };
      ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin") then "openssl" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.25" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".curl."0.4.25" = overridableMkRustCrate (profileName: rec {
    name = "curl";
    version = "0.4.25";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "06aa71e9208a54def20792d877bc663d6aae0732b9852e612c4a933177c31283"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "http2" ]
      [ "openssl-probe" ]
      [ "openssl-sys" ]
      [ "ssl" ]
    ];
    dependencies = {
      curl_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl-sys."0.4.25" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_probe" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.53" { inherit profileName; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "schannel" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.16" { inherit profileName; };
      socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.11" { inherit profileName; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".curl-sys."0.4.25" = overridableMkRustCrate (profileName: rec {
    name = "curl-sys";
    version = "0.4.25";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0c38ca47d60b86d0cc9d42caa90a0885669c2abc9791f871c81f58cdf39e979b"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "http2" ]
      [ "libnghttp2-sys" ]
      [ "openssl-sys" ]
      [ "ssl" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      libnghttp2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libnghttp2-sys."0.1.2" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.0.25" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.53" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.17" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.8" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".darling."0.8.6" = overridableMkRustCrate (profileName: rec {
    name = "darling";
    version = "0.8.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9158d690bc62a3a57c3e45b85e4d50de2008b39345592c64efd79345c7e24be0"; };
    dependencies = {
      darling_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_core."0.8.6" { inherit profileName; };
      darling_macro = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_macro."0.8.6" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".darling_core."0.8.6" = overridableMkRustCrate (profileName: rec {
    name = "darling_core";
    version = "0.8.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d2a368589465391e127e10c9e3a08efc8df66fd49b87dc8524c764bbe7f2ef82"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.6" { inherit profileName; };
      ident_case = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ident_case."1.0.1" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.15.35" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".darling_macro."0.8.6" = overridableMkRustCrate (profileName: rec {
    name = "darling_macro";
    version = "0.8.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "244e8987bd4e174385240cde20a3657f607fb0797563c28255c353b5819a07b1"; };
    dependencies = {
      darling_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_core."0.8.6" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.15.35" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".datafrog."2.0.1" = overridableMkRustCrate (profileName: rec {
    name = "datafrog";
    version = "2.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a0afaad2b26fa326569eb264b1363e8ae3357618c43982b3f285f0774ce76b69"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.6" = overridableMkRustCrate (profileName: rec {
    name = "derive-new";
    version = "0.5.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6ca414e896ae072546f4d789f452daaecf60ddee4c9df5dc6d5936d769e3d87c"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.15.35" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.2" = overridableMkRustCrate (profileName: rec {
    name = "derive_more";
    version = "0.99.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2159be042979966de68315bce7034bb000c775f22e3e834e1c52ff78f041cae8"; };
    features = builtins.concatLists [
      [ "add" ]
      [ "add_assign" ]
      [ "as_mut" ]
      [ "as_ref" ]
      [ "constructor" ]
      [ "default" ]
      [ "deref" ]
      [ "deref_mut" ]
      [ "display" ]
      [ "from" ]
      [ "from_str" ]
      [ "index" ]
      [ "index_mut" ]
      [ "into" ]
      [ "into_iterator" ]
      [ "iterator" ]
      [ "mul" ]
      [ "mul_assign" ]
      [ "not" ]
      [ "sum" ]
      [ "try_into" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".diff."0.1.11" = overridableMkRustCrate (profileName: rec {
    name = "diff";
    version = "0.1.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3c2b69f912779fbb121ceb775d74d51e915af17aaebc38d28a592843a2dd0a3a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "difference";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".digest."0.7.6" = overridableMkRustCrate (profileName: rec {
    name = "digest";
    version = "0.7.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "03b072242a8cbaf9c145665af9d250c59af3b958f83ed6824e13533cf76d5b90"; };
    dependencies = {
      generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.9.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".directories."2.0.1" = overridableMkRustCrate (profileName: rec {
    name = "directories";
    version = "2.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2ccc83e029c3cebb4c8155c644d34e3a070ccdb4ff90d369c74cd73f7cb3c984"; };
    dependencies = {
      ${ if rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/directories" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/directories" then "dirs_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dirs."2.0.1" = overridableMkRustCrate (profileName: rec {
    name = "dirs";
    version = "2.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1c4ef5a8b902d393339e2a2c7fe573af92ce7e0ee5a3ff827b4c9ad7e07e4fa1"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      dirs_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "dirs-sys";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "937756392ec77d1f2dd9dc3ac9d69867d109a2121479d72c364e42f4cab21e2d"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "redox_users" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_users."0.3.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dlmalloc."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "dlmalloc";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f283302e035e61c23f2b86b3093e8c6273a4c3125742d6087e96ade001ca5e63"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.cpu.name == "wasm32") then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dtoa."0.4.4" = overridableMkRustCrate (profileName: rec {
    name = "dtoa";
    version = "0.4.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ea57b42383d091c85abcc2706240b94ab2a8fa1fc81c10ff23c4de06e2a90b5e"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dunce."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "dunce";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d0ad6bf6a88548d1126045c413548df1453d9be094a8ab9fd59bf1fdd338da4f"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" = overridableMkRustCrate (profileName: rec {
    name = "either";
    version = "1.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3be565ca5c557d7f59e7cfcf1844f9e3033650c929c6566f511e8005f205c1d0"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".elasticlunr-rs."2.3.4" = overridableMkRustCrate (profileName: rec {
    name = "elasticlunr-rs";
    version = "2.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a99a310cd1f9770e7bf8e48810c7bcbb0e078c8fb23a8c7bcf0da4c2bf61a455"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      strum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.11.0" { inherit profileName; };
      strum_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.11.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ena."0.13.1" = overridableMkRustCrate (profileName: rec {
    name = "ena";
    version = "0.13.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8944dc8fa28ce4a38f778bd46bf7d923fe73eed5a439398507246c8e017e6f36"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.17" = overridableMkRustCrate (profileName: rec {
    name = "encoding_rs";
    version = "0.8.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4155785c79f2f6701f185eb2e6b4caf0555ec03477cb4c70db67b465311620ed"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".env_logger."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "env_logger";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aafcde04e90a5226a6443b7aabdb016ba2f8307c847d524724bd9b346dd1a2d3"; };
    features = builtins.concatLists [
      [ "atty" ]
      [ "default" ]
      [ "humantime" ]
      [ "regex" ]
      [ "termcolor" ]
    ];
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."1.3.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "env_logger";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "44533bbbb3bb3c1fa17d9f2e4e38bbbaf8396ba82193c4cb1b6445d711445d36"; };
    features = builtins.concatLists [
      [ "atty" ]
      [ "default" ]
      [ "humantime" ]
      [ "regex" ]
      [ "termcolor" ]
    ];
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."1.3.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".error-chain."0.12.0" = overridableMkRustCrate (profileName: rec {
    name = "error-chain";
    version = "0.12.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "07e791d3be96241c77c43846b665ef1384606da2cd2a48730abe606a12906e02"; };
    features = builtins.concatLists [
      [ "backtrace" ]
      [ "default" ]
      [ "example_generated" ]
    ];
    dependencies = {
      backtrace = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.44" { inherit profileName; };
    };
  });
  
  "unknown".error_index_generator."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "error_index_generator";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/error_index_generator");
    dependencies = {
      rustdoc = rustPackages."unknown".rustdoc."0.0.0" { inherit profileName; };
    };
    buildDependencies = {
      walkdir = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.7" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "failure";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "795bd83d3abeb9220f257e597aa0080a508b27533824adf336529648f6abf7e2"; };
    features = builtins.concatLists [
      [ "backtrace" ]
      [ "default" ]
      [ "derive" ]
      [ "failure_derive" ]
      [ "std" ]
    ];
    dependencies = {
      backtrace = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.44" { inherit profileName; };
      failure_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.5" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "failure_derive";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ea1063915fd7ef4309e222a5a07cf9c319fb9c7836b1f89b85458672dbb127e1"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.15.35" { inherit profileName; };
      synstructure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.10.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fake-simd."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "fake-simd";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e88a8acf291dafb59c2d96e8f59828f3838bb1a70398823ade51a84de6a6deed"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.8" = overridableMkRustCrate (profileName: rec {
    name = "filetime";
    version = "0.2.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1ff6d4dab0aa0c8e6346d46052e93b13a16cf847b54ed357087c35011048cc7d"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.12" = overridableMkRustCrate (profileName: rec {
    name = "flate2";
    version = "1.0.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ad3c5233c9a940c8719031b423d7e6c16af66e031cb0420b0896f5245bf181d3"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "libz-sys" ]
      [ "miniz_oxide" ]
      [ "rust_backend" ]
      [ "zlib" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crc32fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.1.2" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.0.25" { inherit profileName; };
      miniz_oxide = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.3.5" { inherit profileName; };
    };
  });
  
  "unknown".fmt_macros."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "fmt_macros";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libfmt_macros");
    dependencies = {
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.6" = overridableMkRustCrate (profileName: rec {
    name = "fnv";
    version = "1.0.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2fad85553e09a6f881f739c29f0b00b0f01357c743266d478b68951ce23285f3"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "foreign-types";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1"; };
    dependencies = {
      foreign_types_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "foreign-types-shared";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fortanix-sgx-abi."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "fortanix-sgx-abi";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3f8cbee5e872cf7db61a999a041f9bc4706ca7bf7df4cb914f53fabb1c1bc550"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fs2."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "fs2";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9564fc758e15025b46aa6643b1b77d047d1a56a1aea6e01002ac0c7026876213"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fs_extra."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "fs_extra";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5f2a4a2034423744d2cc7ca2068453168dcdb82c438419e639a26bd87839c674"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fst."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "fst";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d94485a00b1827b861dd9d1a2cc9764f9044d4c535514c0760a5a2012ef3399f"; };
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-cprng."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "fuchsia-cprng";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "fuchsia-zircon";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      fuchsia_zircon_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "fuchsia-zircon-sys";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".futf."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "futf";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7c9c1ce3fa9336301af935ab852c437817d14cd33690446569392e65170aac3b"; };
    dependencies = {
      mac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; };
      debug_unreachable = rustPackages."registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" = overridableMkRustCrate (profileName: rec {
    name = "futures";
    version = "0.1.28";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "45dc39533a6cae6da2b56da48edae506bb767ec07370f86f70fc062e9d435869"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
      [ "with-deprecated" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".futures-cpupool."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "futures-cpupool";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ab90cde24b3319636588d0c35fe03b1333857621051837ed769faefb4c2162e4"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "default")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "with-deprecated")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "num_cpus" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fwdansi."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "fwdansi";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "34dd4c507af68d37ffef962063dfa1944ce0dd4d5b82043dbab1dabe088610c3"; };
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.2" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".generic-array."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "generic-array";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ef25c5683767570c2bbd7deba372926a55eaae9982d7726ee2a1050239d45b9d"; };
    dependencies = {
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.10.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" = overridableMkRustCrate (profileName: rec {
    name = "getopts";
    version = "0.2.21";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5"; };
    features = builtins.concatLists [
      [ "core" ]
      [ "rustc-dep-of-std" ]
      [ "std" ]
    ];
    dependencies = {
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
      std = rustPackages."unknown".rustc-std-workspace-std."1.99.0" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" = overridableMkRustCrate (profileName: rec {
    name = "getrandom";
    version = "0.1.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7abc8dd8451921606d809ba32e95b6111925cd2906060d2dcc29c070220503eb"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.9.0+wasi-snapshot-preview1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".git2."0.13.0" = overridableMkRustCrate (profileName: rec {
    name = "git2";
    version = "0.13.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b7da16ceafe24cedd9ba02c4463a2b506b6493baf4317c79c5acb553134a3c15"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "https" ]
      [ "openssl-probe" ]
      [ "openssl-sys" ]
      [ "ssh" ]
      [ "ssh_key_from_memory" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      libgit2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.12.0+0.99.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_probe" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.53" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".git2-curl."0.14.0" = overridableMkRustCrate (profileName: rec {
    name = "git2-curl";
    version = "0.14.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "502d532a2d06184beb3bc869d4d90236e60934e3382c921b203fa3c33e212bd7"; };
    dependencies = {
      curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl."0.4.25" { inherit profileName; };
      git2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2."0.13.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".glob."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "glob";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9b919933a397b79c37e33b77bb2aa3dc8eb6e165ad809e58ff75bc7db2e34574"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".globset."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "globset";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ef4feaabe24a0a658fd9cf4a9acf6ed284f045c77df0f49020ba3245cfb7b454"; };
    dependencies = {
      aho_corasick = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.3" { inherit profileName; };
      bstr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bstr."0.1.3" { inherit profileName; };
      fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.6" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
    };
  });
  
  "unknown".graphviz."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "graphviz";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libgraphviz");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".h2."0.1.25" = overridableMkRustCrate (profileName: rec {
    name = "h2";
    version = "0.1.25";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a539b63339fbbb00e081e84b6e11bd1d9634a82d91da2984a18ac74a8823f392"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "byteorder" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "fnv" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.6" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.1.19" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "indexmap" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.0.2" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "slab" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "string" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".string."0.2.1" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_io" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".handlebars."2.0.1" = overridableMkRustCrate (profileName: rec {
    name = "handlebars";
    version = "2.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "df044dd42cdb7e32f28557b661406fc0f2494be75199779998810dbc35030e0d"; };
    features = builtins.concatLists [
      [ "log" ]
      [ "logging" ]
      [ "no_dir_source" ]
    ];
    dependencies = {
      hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.5.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.1.0" { inherit profileName; };
      pest_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pest_derive."2.1.0" { profileName = "__noProfile"; };
      quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.2" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "hashbrown";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e1de41fb8dba9714efd92241565cdff73f78508c95697dd56787d3cba27e2353"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "serde" ]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "hashbrown";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3cd9867f119b19fecb08cd5c326ad4488d7a1da4bf75b4d95d71db742525aaab"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "compiler_builtins" ]
      [ "core" ]
      [ "nightly" ]
      [ "rustc-dep-of-std" ]
      [ "rustc-internal-api" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      alloc = rustPackages."unknown".rustc-std-workspace-alloc."1.99.0" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."0.1.7" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".heck."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "heck";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ea04fa3ead4e05e51a7c806fc07271fdbde4e246a6c6d1efd52e72230b771b82"; };
    dependencies = {
      unicode_segmentation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "hermit-abi";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f22b8f315b98f415780ddbe9163c7dbbc5a07225b6d102ace1d8aeef85775140"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hex."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "hex";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "805026a5d0141ffc30abb3be3173848ad46a1b1664fe632428479619a3644d77"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hex."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "hex";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "023b39be39e3a2da62a94feb433e91e8bcd37676fbc8bea371daf52b7a769a3e"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".home."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "home";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a3753954f7bd71f0e671afb8b5a992d1724cf43b7f95a563cd4a0bde94659ca8"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "scopeguard" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.0.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".html5ever."0.24.1" = overridableMkRustCrate (profileName: rec {
    name = "html5ever";
    version = "0.24.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "025483b0a1e4577bb28578318c886ee5f817dda6eb62473269349044406644cb"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      mac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; };
      markup5ever = rustPackages."registry+https://github.com/rust-lang/crates.io-index".markup5ever."0.9.0" { inherit profileName; };
    };
    buildDependencies = {
      proc_macro2 = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { profileName = "__noProfile"; };
      quote = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" { profileName = "__noProfile"; };
      syn = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.11" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".http."0.1.19" = overridableMkRustCrate (profileName: rec {
    name = "http";
    version = "0.1.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d7e06e336150b178206af098a055e3621e8336027e2b4d126bda0bc64824baaf"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "fnv" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.6" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "itoa" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".http-body."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "http-body";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6741c859c1b2463a423a1dbce98d418e6c3c3fc720fb0d45528657320920292d"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.1.19" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_buf" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-buf."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".httparse."1.3.4" = overridableMkRustCrate (profileName: rec {
    name = "httparse";
    version = "1.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cd179ae861f0c2e53da70d892f5f3029f9594be0c41dc5269cd371691b1dc2f9"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "default")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".humantime."1.3.0" = overridableMkRustCrate (profileName: rec {
    name = "humantime";
    version = "1.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "df004cfca50ef23c36850aaaa59ad52cc70d0e90243c3c7737a4dd32dc7a3c4f"; };
    dependencies = {
      quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".humantime."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "humantime";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b9b6c53306532d3c8e8087b44e6580e10db51a023cf9b433cea2ac38066b92da"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hyper."0.12.31" = overridableMkRustCrate (profileName: rec {
    name = "hyper";
    version = "0.12.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6481fff8269772d4463253ca83c788104a7305cb3fb9136bc651a6211e46e03f"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "__internal_flaky_tests")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "default")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "futures-cpupool")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "net2")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "runtime")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "tokio")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "tokio-executor")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "tokio-reactor")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "tokio-tcp")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "tokio-threadpool")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "tokio-timer")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "futures_cpupool" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-cpupool."0.1.8" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "h2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.1.25" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.1.19" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "http_body" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "httparse" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.3.4" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "iovec" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "itoa" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.4" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "net2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".net2."0.2.33" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "time" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.42" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_buf" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-buf."0.1.1" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_executor" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.9" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_io" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_reactor" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.11" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_tcp" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-tcp."0.1.3" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_threadpool" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-threadpool."0.1.17" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_timer" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-timer."0.2.12" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "want" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".want."0.2.0" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "rustc_version" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hyper-tls."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "hyper-tls";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3a800d6aa50af4b5850b2b0f659625ce9504df908e9733b635720483be26174f"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "hyper" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.12.31" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "native_tls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.3" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_io" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ident_case."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "ident_case";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".idna."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "idna";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "38f09e0f0b1fb55fdee1f17470ad800da77af5186a1a76c026b679358b7e844e"; };
    dependencies = {
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      unicode_bidi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".idna."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "idna";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "02e2673c30ee86b5b96a9cb52ad15718aa1f966f5ab9ad54a8b95d5ca33120a9"; };
    dependencies = {
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      unicode_bidi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".if_chain."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "if_chain";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c3360c7b59e5ffa2653671fb74b4741a5d343c03f331c0a4aeda42b5c2b0ec7d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ignore."0.4.11" = overridableMkRustCrate (profileName: rec {
    name = "ignore";
    version = "0.4.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "522daefc3b69036f80c7d2990b28ff9e0471c683bad05ca258e0a01dd22c5a1e"; };
    dependencies = {
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.0" { inherit profileName; };
      globset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".globset."0.4.3" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.2" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.4" { inherit profileName; };
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.7" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".im-rc."14.0.0" = overridableMkRustCrate (profileName: rec {
    name = "im-rc";
    version = "14.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e9ad726dce25993be6352b0bff048e4d2647440c0a673d32257c4fac49356d18"; };
    dependencies = {
      bitmaps = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitmaps."2.0.0" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
      rand_xoshiro = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_xoshiro."0.4.0" { inherit profileName; };
      sized_chunks = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sized-chunks."0.5.0" { inherit profileName; };
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.10.0" { inherit profileName; };
    };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".indexmap."1.0.2" = overridableMkRustCrate (profileName: rec {
    name = "indexmap";
    version = "1.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7e81a7c05f79578dbc15793d8b619db9ba32b4577003ef3af1a91c416798c58d"; };
  });
  
  "unknown".installer."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "installer";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rust-installer");
    dependencies = {
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.0" { inherit profileName; };
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.12" { inherit profileName; };
      ${ if hostPlatform.isWindows then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.2.0" { inherit profileName; };
      remove_dir_all = rustPackages."registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.2" { inherit profileName; };
      tar = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.26" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.7" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
      xz2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xz2."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "iovec";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b2b3ea6ff95e175473f8ffe6a7eb7c00d054240321b84c57051175fe3c1e075e"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".is-match."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "is-match";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7e5b386aef33a1c677be65237cb9d32c3f3ef56bd035949710c4bb13083eb053"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.7.8" = overridableMkRustCrate (profileName: rec {
    name = "itertools";
    version = "0.7.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f58856976b776fedd95533137617a02fb25719f40e7d9b01c7043cd65474f450"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "itertools";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5b8467d9c1cebe26feb08c640139247fac215782d35371ade9a2136ed6085358"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.4" = overridableMkRustCrate (profileName: rec {
    name = "itoa";
    version = "0.4.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "501266b7edd0174f8530248f87f99c88fbe60ca4ef3dd486835b8d8d53136f7f"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jemalloc-sys."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "jemalloc-sys";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7bef0d4ce37578dfd80b466e3d8324bd9de788e249f1accebb0c472ea4b52bdc"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys") "background_threads_runtime_support")
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys") "default")
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys") "unprefixed_malloc_on_supported_platforms")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys" then "cc" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys" then "fs_extra" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".fs_extra."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" = overridableMkRustCrate (profileName: rec {
    name = "jobserver";
    version = "0.1.21";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5c71313ebb9439f74b00d9d2dcec36440beaf57a6aa0623068441dd7cd81a7f2"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".json."0.11.13" = overridableMkRustCrate (profileName: rec {
    name = "json";
    version = "0.11.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9ad0485404155f45cce53a40d4b2d6ac356418300daed05273d9e26f91c390be"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-client-transports."14.0.5" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-client-transports";
    version = "14.0.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0a9ae166c4d1f702d297cd76d4b55758ace80272ffc6dbb139fdc1bf810de40b"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "ipc")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "jsonrpc-server-utils")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "parity-tokio-ipc")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "tokio")
    ];
    dependencies = {
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      jsonrpc_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.0.5" { inherit profileName; };
      jsonrpc_pubsub = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-pubsub."14.0.6" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc" then "jsonrpc_server_utils" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-server-utils."14.0.5" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc" then "parity_tokio_ipc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parity-tokio-ipc."0.2.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.0.5" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-core";
    version = "14.0.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fe3b688648f1ef5d5072229e2d672ecb92cbff7d1c79bcf3fd5898f3f3df0970"; };
    dependencies = {
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core-client."14.0.5" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-core-client";
    version = "14.0.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "080dc110be17701097df238fad3c816d4a478a1899dfbcf8ec8957dd40ec7304"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "ipc")
    ];
    dependencies = {
      jsonrpc_client_transports = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-client-transports."14.0.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-derive."14.0.5" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-derive";
    version = "14.0.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8609af8f63b626e8e211f52441fcdb6ec54f1a446606b10d5c89ae9bf8a20058"; };
    dependencies = {
      proc_macro_crate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."0.1.4" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-ipc-server."14.0.3" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-ipc-server";
    version = "14.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b579cd0840d7db3ebaadf52f6f31ec601a260e78d610e44f68634f919e34497a"; };
    dependencies = {
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "jsonrpc_core" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.0.5" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "jsonrpc_server_utils" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-server-utils."14.0.5" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "parity_tokio_ipc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parity-tokio-ipc."0.2.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "parking_lot" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.9.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "tokio_service" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-service."0.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-pubsub."14.0.6" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-pubsub";
    version = "14.0.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5b31c9b90731276fdd24d896f31bb10aecf2e5151733364ae81123186643d939"; };
    dependencies = {
      jsonrpc_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.0.5" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.10.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-server-utils."14.0.5" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-server-utils";
    version = "14.0.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "95b7635e618a0edbbe0d2a2bbbc69874277c49383fcf6c3c0414491cfb517d22"; };
    dependencies = {
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "globset" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".globset."0.4.3" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "jsonrpc_core" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.0.5" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio_codec" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.1" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "unicase" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "kernel32-sys";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d"; };
    dependencies = {
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
    };
    buildDependencies = {
      build = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lazy_static."0.2.11" = overridableMkRustCrate (profileName: rec {
    name = "lazy_static";
    version = "0.2.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "76f033c7ad61445c5b347c7382dd1237847eb1bce590fe50365dcb33d546be73"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" = overridableMkRustCrate (profileName: rec {
    name = "lazy_static";
    version = "1.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lazycell."1.2.1" = overridableMkRustCrate (profileName: rec {
    name = "lazycell";
    version = "1.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b294d6fa9ee409a054354afc4352b0b9ef7ca222c69b8812cbea9e7d2bf3783f"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" = overridableMkRustCrate (profileName: rec {
    name = "libc";
    version = "0.2.66";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d515b1f41455adea1313a4a2ac8a8a477634fbae63cc6100e3aebb207ce61558"; };
    features = builtins.concatLists [
      [ "align" ]
      [ "default" ]
      [ "rustc-dep-of-std" ]
      [ "rustc-std-workspace-core" ]
      [ "std" ]
    ];
    dependencies = {
      rustc_std_workspace_core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.12.0+0.99.0" = overridableMkRustCrate (profileName: rec {
    name = "libgit2-sys";
    version = "0.12.0+0.99.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "05dff41ac39e7b653f5f1550886cf00ba52f8e7f57210b633cdeedb3de5b236c"; };
    features = builtins.concatLists [
      [ "https" ]
      [ "libssh2-sys" ]
      [ "openssl-sys" ]
      [ "ssh" ]
      [ "ssh_key_from_memory" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      libssh2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libssh2-sys."0.2.14" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.0.25" { inherit profileName; };
      ${ if hostPlatform.isUnix then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.53" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.17" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libnghttp2-sys."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "libnghttp2-sys";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "02254d44f4435dd79e695f2c2b83cd06a47919adea30216ceaf0c57ca0a72463"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libssh2-sys."0.2.14" = overridableMkRustCrate (profileName: rec {
    name = "libssh2-sys";
    version = "0.2.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "36aa6e813339d3a063292b77091dfbbb6152ff9006a459895fa5bebed7d34f10"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.0.25" { inherit profileName; };
      ${ if hostPlatform.isUnix then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.53" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.17" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.8" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.0.25" = overridableMkRustCrate (profileName: rec {
    name = "libz-sys";
    version = "1.0.25";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2eb5e43362e38e2bca2fd5f5134c4d4564a23a5c28e9b95411652021a8675ebe"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.17" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.8" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".linkchecker."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "linkchecker";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/linkchecker");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "lock_api";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f8912e782533a93a167888781b836336a6ca5da6175c05944c86cf28c31104dc"; };
    features = builtins.concatLists [
      [ "nightly" ]
    ];
    dependencies = {
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" = overridableMkRustCrate (profileName: rec {
    name = "log";
    version = "0.4.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "14b6052be84e6b71ab17edffc2eeabf5c2c3ae1fdb464aae35ac50c67a44e1f7"; };
    features = builtins.concatLists [
      [ "release_max_level_info" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".log_settings."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "log_settings";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "19af41f0565d7c19b2058153ad0b42d4d5ce89ec4dbf06ed6741114a8b63e7cd"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lsp-codec."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "lsp-codec";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "169d737ad89cf8ddd82d1804d9122f54568c49377665157277cc90d747b1d31a"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      tokio_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lsp-types."0.60.0" = overridableMkRustCrate (profileName: rec {
    name = "lsp-types";
    version = "0.60.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fe3edefcd66dde1f7f1df706f46520a3c93adc5ca4bc5747da6621195e894efd"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proposed" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      serde_repr = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_repr."0.1.5" { profileName = "__noProfile"; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lzma-sys."0.1.14" = overridableMkRustCrate (profileName: rec {
    name = "lzma-sys";
    version = "0.1.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "16b5c59c57cc4d39e7999f50431aa312ea78af7c93b23fbb0c3567bd672e7f35"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.17" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "mac";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c41e0c4fef86961ac6d6f8a82609f55f31b05e4fce149ac5710e439df7619ba4"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".macro-utils."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "macro-utils";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f2c4deaccc2ead6a28c16c0ba82f07d52b6475397415ce40876e559b0b0ea510"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".maplit."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "maplit";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "08cbb6b4fef96b6d77bfc40ec491b1690c779e77b05cd9f07f787ed376fd4c43"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".markup5ever."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "markup5ever";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "65381d9d47506b8592b97c4efd936afcf673b09b059f2bef39c7211ee78b9d03"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      phf = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf."0.7.24" { inherit profileName; };
      string_cache = rustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache."0.7.3" { inherit profileName; };
      tendril = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.0" { inherit profileName; };
    };
    buildDependencies = {
      phf_codegen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_codegen."0.7.24" { profileName = "__noProfile"; };
      serde = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { profileName = "__noProfile"; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" { profileName = "__noProfile"; };
      serde_json = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { profileName = "__noProfile"; };
      string_cache_codegen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache_codegen."0.4.2" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "matches";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mdbook."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "mdbook";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "031bdd9d4893c983e2f69ebc4b59070feee8276a584c4aabdcb351235ea28016"; };
    features = builtins.concatLists [
      [ "ammonia" ]
      [ "elasticlunr-rs" ]
      [ "search" ]
    ];
    dependencies = {
      ammonia = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ammonia."3.0.0" { inherit profileName; };
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.6" { inherit profileName; };
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.0" { inherit profileName; };
      elasticlunr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".elasticlunr-rs."2.3.4" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.6.2" { inherit profileName; };
      error_chain = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-chain."0.12.0" { inherit profileName; };
      handlebars = rustPackages."registry+https://github.com/rust-lang/crates.io-index".handlebars."2.0.1" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.2" { inherit profileName; };
      open = rustPackages."registry+https://github.com/rust-lang/crates.io-index".open."1.2.1" { inherit profileName; };
      pulldown_cmark = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.6.1" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      shlex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".shlex."0.1.1" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.3" { inherit profileName; };
      toml_query = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml-query."0.9.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mdbook-linkcheck."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "mdbook-linkcheck";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c0a04db564ca37c47771f8455c825dc941ea851ff0deffcf55a04c512406b409"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "codespan" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".codespan."0.5.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "codespan_reporting" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".codespan-reporting."0.5.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "dunce" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dunce."1.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "either" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "env_logger" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "failure" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.1.19" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "mdbook" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mdbook."0.3.5" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "percent_encoding" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "pulldown_cmark" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.6.1" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "rayon" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.2.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "regex" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "reqwest" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".reqwest."0.9.22" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "semver" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "serde" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "serde_derive" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "serde_json" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "structopt" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".structopt."0.3.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".measureme."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "measureme";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fef709d3257013bba7cff14fc504e07e80631d3fe0f6d38ce63b8f6510ccb932"; };
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.2" { inherit profileName; };
      ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "memmap" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap."0.7.0" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.9.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.2" = overridableMkRustCrate (profileName: rec {
    name = "memchr";
    version = "2.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "53445de381a1f436797497c61d851644d0e8e88e6140f22872ad33a704933978"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
      [ "use_std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memmap."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "memmap";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6585fd95e7bb50d6cc31e20d4cf9afb4e2ba16c5846fc76793f11218da9c475b"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memoffset."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "memoffset";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ce6075db033bbbb7ee5a0bbd3a3186bbae616f57fb001c485c7ff77955f8177f"; };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mime."0.3.13" = overridableMkRustCrate (profileName: rec {
    name = "mime";
    version = "0.3.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3e27ca21f40a310bd06d9031785f4801710d566c184a6e15bad4f1d9b65f9425"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "unicase" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mime_guess."2.0.1" = overridableMkRustCrate (profileName: rec {
    name = "mime_guess";
    version = "2.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1a0ed03949aef72dbdf3116a383d7b38b4768e6f960528cd6a6044aa9ed68599"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "default")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "rev-mappings")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "mime" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.13" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "unicase" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "unicase" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".minifier."0.0.33" = overridableMkRustCrate (profileName: rec {
    name = "minifier";
    version = "0.0.33";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "70bf0db2475f5e627787da77ca52fe33c294063f49f4134b8bc662eedb5e7332"; };
    dependencies = {
      macro_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".macro-utils."0.1.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "miniz_oxide";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6f3f74f726ae935c3f514300cc6773a0c9492abc5e972d42ba0c0ebb88757625"; };
    dependencies = {
      adler32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler32."1.0.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mio."0.6.16" = overridableMkRustCrate (profileName: rec {
    name = "mio";
    version = "0.6.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "71646331f2619b1026cc302f87a2b8b648d5c6dd6937846a16cc8ce0f347f432"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "with-deprecated" ]
    ];
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_zircon" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_zircon_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" { inherit profileName; };
      iovec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
      ${ if hostPlatform.isWindows then "kernel32" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" { inherit profileName; };
      lazycell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazycell."1.2.1" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.2.1" { inherit profileName; };
      net2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".net2."0.2.33" { inherit profileName; };
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mio-named-pipes."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "mio-named-pipes";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f5e374eff525ce1c5b7687c4cef63943e7686524a387933ad27ca7ec43779cb3"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if hostPlatform.isWindows then "mio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.16" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mio-uds."0.6.7" = overridableMkRustCrate (profileName: rec {
    name = "mio-uds";
    version = "0.6.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "966257a94e196b11bb43aca423754d87429960a768de9414f3691d6957abf125"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "iovec" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.isUnix then "mio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.16" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".miow."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "miow";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8c1f2f3b1cf331de6896aabf6e9d55dca90356cc9960cca7eaaf408a355ae919"; };
    dependencies = {
      kernel32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" { inherit profileName; };
      net2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".net2."0.2.33" { inherit profileName; };
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
      ws2_32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ws2_32-sys."0.2.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".miow."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "miow";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "396aa0f2003d7df8395cb93e09871561ccc3e785f0acb369170e8cc74ddf9226"; };
    dependencies = {
      socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.11" { inherit profileName; };
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "unknown".miri."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "miri";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/miri");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "miri/cargo_metadata" || rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default") "cargo_metadata")
      (lib.optional (rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default") "cargo_miri")
      (lib.optional (rootFeatures' ? "miri/default") "default")
      (lib.optional (rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/directories") "directories")
      (lib.optional (rootFeatures' ? "miri/rustc_tests") "rustc_tests")
      (lib.optional (rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/rustc_version") "rustc_version")
      (lib.optional (rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/serde_json") "serde_json")
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "miri/cargo_metadata" || rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" then "cargo_metadata" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.9.0" { inherit profileName; };
      ${ if rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/directories" then "directories" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".directories."2.0.1" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" { inherit profileName; };
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.6" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/rustc_version" then "rustc_version" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      ${ if rootFeatures' ? "miri/cargo_miri" || rootFeatures' ? "miri/default" || rootFeatures' ? "miri/serde_json" then "serde_json" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      shell_escape = rustPackages."registry+https://github.com/rust-lang/crates.io-index".shell-escape."0.1.4" { inherit profileName; };
    };
    devDependencies = {
      colored = rustPackages."registry+https://github.com/rust-lang/crates.io-index".colored."1.6.0" { inherit profileName; };
      compiletest_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiletest_rs."0.4.0" { inherit profileName; };
    };
    buildDependencies = {
      vergen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vergen."3.0.4" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "native-tls";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4b2df1a4c22fd44a62147fd8f13dd0f95c9d8ca7b2610299b2a2f9cf8964274e"; };
    dependencies = {
      ${ if (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") && (hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") && (hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") && !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") && !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "openssl" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.25" { inherit profileName; };
      ${ if (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") && !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "openssl_probe" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" { inherit profileName; };
      ${ if (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") && !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.53" { inherit profileName; };
      ${ if (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") && hostPlatform.parsed.kernel.name == "windows" then "schannel" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.16" { inherit profileName; };
      ${ if (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") && (hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "security_framework" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework."0.3.1" { inherit profileName; };
      ${ if (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") && (hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "security_framework_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."0.3.1" { inherit profileName; };
      ${ if (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") && (hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "tempfile" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".net2."0.2.33" = overridableMkRustCrate (profileName: rec {
    name = "net2";
    version = "0.2.33";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "42550d9fb7b6684a6d404d9fa7250c2eb2646df731d1c06afc06dcee9e1bcf88"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "duration" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" || hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.3" = overridableMkRustCrate (profileName: rec {
    name = "new_debug_unreachable";
    version = "1.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f40f005c60db6e03bae699e414c58bf9aa7ea02a2d0b9bfbcf19286cc4c82b30"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".nodrop."0.1.12" = overridableMkRustCrate (profileName: rec {
    name = "nodrop";
    version = "0.1.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9a2228dca57108069a5262f2ed8bd2e82496d2e074a06d1ccc7ce1687b6ae0a2"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.39" = overridableMkRustCrate (profileName: rec {
    name = "num-integer";
    version = "0.1.39";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e83d528d2677f0518c570baf2b7abdcf0cd2d248860b68507bdcb3e91d4c0cea"; };
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.6" = overridableMkRustCrate (profileName: rec {
    name = "num-traits";
    version = "0.2.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0b3a5d7cc97d6d30d8b9bc8fa19bf45349ffe46241e8816f50f62f6d6aaabee1"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" = overridableMkRustCrate (profileName: rec {
    name = "num_cpus";
    version = "1.10.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bcef43580c035376c0705c42792c294b66974abbfd2789b511784023f71f3273"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "once_cell";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d6a04cb71e910d0034815600180f62a95bf6e67942d7ab52a166a68c7d7e9cd0"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".open."1.2.1" = overridableMkRustCrate (profileName: rec {
    name = "open";
    version = "1.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c281318d992e4432cfa799969467003d05921582a7489a8325e37f8a450d5113"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".opener."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "opener";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "998c59e83d9474c01127a96e023b7a04bb061dd286bf8bb939d31dc8d31a7448"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.25" = overridableMkRustCrate (profileName: rec {
    name = "openssl";
    version = "0.10.25";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2f372b2b53ce10fb823a337aaa674e3a7d072b957c6264d0f4ff0bd86e657449"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "vendored")
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      foreign_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      openssl_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.53" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "openssl-probe";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "77af24da69f9d9341038eba93a073b1fdaaa1b788221b00a69bce9e762cb32de"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl-src."111.6.1+1.1.1d" = overridableMkRustCrate (profileName: rec {
    name = "openssl-src";
    version = "111.6.1+1.1.1d";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c91b04cb43c1a8a90e934e0cd612e2a5715d976d2d6cff4490278a0cddf35005"; };
    dependencies = {
      ${ if rootFeatures' ? "cargo/vendored-openssl" then "cc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.53" = overridableMkRustCrate (profileName: rec {
    name = "openssl-sys";
    version = "0.9.53";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "465d16ae7fc0e313318f7de5cecf57b2fbe7511fd213978b457e1c96ff46736f"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "openssl-src")
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "vendored")
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."0.1.7" { profileName = "__noProfile"; };
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "cargo/vendored-openssl" then "openssl_src" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-src."111.6.1+1.1.1d" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.17" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.8" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ordslice."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "ordslice";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dd20eec3dbe4376829cb7d80ae6ac45e0a766831dca50202ff2d40db46a8a024"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".packed_simd."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "packed_simd";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "25d36de864f7218ec5633572a800109bbe5a1cc8d9d95a967f3daf93ea7e6ddc"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "default")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustfmt-nightly/generic-simd" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
    };
  });
  
  "unknown".panic_abort."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "panic_abort";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libpanic_abort");
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
  });
  
  "unknown".panic_unwind."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "panic_unwind";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libpanic_unwind");
    dependencies = {
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      unwind = rustPackages."unknown".unwind."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parity-tokio-ipc."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "parity-tokio-ipc";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8281bf4f1d6429573f89589bf68d89451c46750977a8264f8ea3edbabeba7947"; };
    dependencies = {
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "mio_named_pipes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-named-pipes."0.1.6" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.3" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "rand" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio_named_pipes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-named-pipes."0.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio_uds" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-uds."0.2.5" { inherit profileName; };
      ${ if (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc") && hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f842b1982eb6c2fe34036a4fbfb06dd185a3f5c8edfaacdf7d1ea10b07de6252"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "nightly" ]
    ];
    dependencies = {
      lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.3.1" { inherit profileName; };
      parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.6.2" { inherit profileName; };
    };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.10.0" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot";
    version = "0.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "92e98c49ab0b7ce5b222f2cc9193fc4efe11c6d0bd4f648e374684a6857b1cfc"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.3.1" { inherit profileName; };
      parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.7.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot_core";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b876b1b9e7ac6e1a74a6da34d25c42e17e8862aa409cbbbdcfc8d86c6f3bc62b"; };
    features = builtins.concatLists [
      [ "nightly" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.10" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot_core";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7582838484df45743c8434fbff785e8edf260c28748353d44bc0da32e0ceabf1"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "percent-encoding";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "31010dd2e1ac33d5b46a5b413495239882813e0369f8ed8a5e266f173602f831"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "percent-encoding";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d4fd5641d01c8f18a23da7b6fe29298ff4b55afcccdf78973b24cf3175fee32e"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pest."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "pest";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "54f0c72a98d8ab3c99560bfd16df8059cc10e1f9a8e83e6e3b97718dd766e9c3"; };
    dependencies = {
      ucd_trie = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ucd-trie."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pest_derive."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "pest_derive";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "833d1ae558dc601e9a60366421196a8d94bc0ac980476d0b67e1d0988d72b2d0"; };
    dependencies = {
      pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.1.0" { inherit profileName; };
      pest_generator = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest_generator."2.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pest_generator."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "pest_generator";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "63120576c4efd69615b5537d3d052257328a4ca82876771d6944424ccfd9f646"; };
    dependencies = {
      pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.1.0" { inherit profileName; };
      pest_meta = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest_meta."2.1.0" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.15.35" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pest_meta."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "pest_meta";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f5a3492a4ed208ffc247adcdcc7ba2a95be3104f58877d0d02f0df39bf3efb5e"; };
    dependencies = {
      maplit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maplit."1.0.1" { inherit profileName; };
      pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.1.0" { inherit profileName; };
    };
    buildDependencies = {
      sha1 = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".sha-1."0.7.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf."0.7.24" = overridableMkRustCrate (profileName: rec {
    name = "phf";
    version = "0.7.24";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b3da44b85f8e8dfaec21adae67f95d93244b2ecf6ad2a692320598dcc8e6dd18"; };
    dependencies = {
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.24" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf_codegen."0.7.24" = overridableMkRustCrate (profileName: rec {
    name = "phf_codegen";
    version = "0.7.24";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b03e85129e324ad4166b06b2c7491ae27fe3ec353af72e72cd1654c7225d517e"; };
    dependencies = {
      phf_generator = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.7.24" { inherit profileName; };
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.24" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.7.24" = overridableMkRustCrate (profileName: rec {
    name = "phf_generator";
    version = "0.7.24";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "09364cc93c159b8b06b1f4dd8a4398984503483891b0c26b867cf431fb132662"; };
    dependencies = {
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.24" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.6.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.24" = overridableMkRustCrate (profileName: rec {
    name = "phf_shared";
    version = "0.7.24";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "234f71a15de2288bcb7e3b6515828d22af7ec8598ee6d24c3b526fa0a80b67a0"; };
    dependencies = {
      siphasher = rustPackages."registry+https://github.com/rust-lang/crates.io-index".siphasher."0.2.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.17" = overridableMkRustCrate (profileName: rec {
    name = "pkg-config";
    version = "0.3.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "05da548ad6865900e60eaba7f589cc0783590a92e940c26953ff81ddbab2d677"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".polonius-engine."0.12.0" = overridableMkRustCrate (profileName: rec {
    name = "polonius-engine";
    version = "0.12.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "04d8ef65e3f89ecaec9ca7cb0e0911b4617352d4494018bcf934992f03f2024c"; };
    dependencies = {
      datafrog = rustPackages."registry+https://github.com/rust-lang/crates.io-index".datafrog."2.0.1" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.6" = overridableMkRustCrate (profileName: rec {
    name = "ppv-lite86";
    version = "0.2.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "74490b50b9fbe561ac330df47c08f3f33073d2d00c150f719147d7c54522fa1b"; };
    features = builtins.concatLists [
      [ "simd" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".precomputed-hash."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "precomputed-hash";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pretty_assertions."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "pretty_assertions";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3a029430f0d744bc3d15dd474d591bed2402b645d024583082b9f63bb936dac6"; };
    dependencies = {
      ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" { inherit profileName; };
      difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pretty_env_logger."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "pretty_env_logger";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "926d36b9553851b8b0005f1275891b392ee4d2d833852c417ed025477350fb9d"; };
    dependencies = {
      ${ if rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger" then "env_logger" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      ${ if rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro-crate";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e10d4b51f154c8a7fb96fd6dad097cb74b863943ec010ac94b9fd1be8861fe1e"; };
    dependencies = {
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."0.2.6" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro-error";
    version = "0.2.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aeccfe4d5d8ea175d5f0e4a2ad0637e0f4121d63bd99d356fb1f39ab2e7c6097"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro2";
    version = "0.4.30";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cf3d2011ab5c909338f7887f4fc896d35932e29146c12c8d01da6b22a80ba759"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro2";
    version = "1.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e98a83a9f9b331f54b924e68a66acb1bb35cb01fb0a23645139967abefb697e8"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.0" { inherit profileName; };
    };
  });
  
  "unknown".proc_macro."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "proc_macro";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libproc_macro");
    dependencies = {
      std = rustPackages."unknown".std."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".profiler_builtins."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "profiler_builtins";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libprofiler_builtins");
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".publicsuffix."1.5.3" = overridableMkRustCrate (profileName: rec {
    name = "publicsuffix";
    version = "1.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9bf259a81de2b2eb9850ec990ec78e6a25319715584fd7652b9b26f96fcb1510"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "error_chain" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-chain."0.12.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "idna" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.2.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "regex" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "url" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.6.1" = overridableMkRustCrate (profileName: rec {
    name = "pulldown-cmark";
    version = "0.6.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1c205cc82214f3594e2d50686730314f817c67ffa80fe800cf0db78c3c2b9d9e"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "getopts" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.2" { inherit profileName; };
      unicase = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "pulldown-cmark";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2c2d7fd131800e0d63df52aff46201acaab70b431a4a1ec6f0343fe8e64f35a4"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.2" { inherit profileName; };
      unicase = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".punycode."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "punycode";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6ddd112cca70a4d30883b2d21568a1d376ff8be4758649f64f973c6845128ad3"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.2" = overridableMkRustCrate (profileName: rec {
    name = "quick-error";
    version = "1.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9274b940887ce9addde99c4eee6b5c44cc494b182b97e73dc8ffdcb3397fd3f0"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quine-mc_cluskey."0.2.4" = overridableMkRustCrate (profileName: rec {
    name = "quine-mc_cluskey";
    version = "0.2.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "07589615d719a60c8dd8a4622e7946465dfef20d1a428f969e3443e7386d5f45"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" = overridableMkRustCrate (profileName: rec {
    name = "quote";
    version = "0.6.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "faf4799c5d274f3868a4aae320a0a182cbd2baee377b378f080e16a23e9d80db"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" = overridableMkRustCrate (profileName: rec {
    name = "quote";
    version = "1.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "053a8c8bcc71fcce321828dc897a98ab9760bef03a4fc36693c231e5b3216cfe"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".racer."2.1.31" = overridableMkRustCrate (profileName: rec {
    name = "racer";
    version = "2.1.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0ff33fa15ac0384376741d16ddb05a65263dde4e2c5d0f7a9f3747db788764aa"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.0" { inherit profileName; };
      derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.2" { profileName = "__noProfile"; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."2.0.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.1" { inherit profileName; };
      rustc_ast_pretty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."642.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."642.0.0" { inherit profileName; };
      rustc_parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_parse."642.0.0" { inherit profileName; };
      rustc_session = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."642.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."642.0.0" { inherit profileName; };
      syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax."642.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand."0.6.1" = overridableMkRustCrate (profileName: rec {
    name = "rand";
    version = "0.6.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ae9d223d52ae411a33cf7e54ec6034ec165df296ccd23533d671a28252b6f66a"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "cloudabi" ]
      [ "default" ]
      [ "fuchsia-zircon" ]
      [ "libc" ]
      [ "std" ]
      [ "winapi" ]
    ];
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_zircon" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      rand_chacha = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.1.0" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.0" { inherit profileName; };
      rand_hc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.1.0" { inherit profileName; };
      rand_isaac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_isaac."0.1.1" { inherit profileName; };
      rand_pcg = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_pcg."0.1.1" { inherit profileName; };
      rand_xorshift = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.1.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" = overridableMkRustCrate (profileName: rec {
    name = "rand";
    version = "0.7.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6a6b1679d49b24bbfe0c803429aa1874472f50d9b363131f0e89fc356b544d03"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "getrandom" ]
      [ "getrandom_package" ]
      [ "libc" ]
      [ "std" ]
    ];
    dependencies = {
      getrandom_package = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if !(hostPlatform.parsed.kernel.name == "emscripten") then "rand_chacha" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.2.1" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "emscripten" then "rand_hc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_chacha";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "771b009e3a508cb67e8823dda454aaa5368c7bc1c16829fb77d3e980440dd34a"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.0" { inherit profileName; };
    };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "rand_chacha";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "03a2a90da8c7523f554344f921aa97283eadf6ac484a6d2a7d0212fa7f8d6853"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      c2_chacha = rustPackages."registry+https://github.com/rust-lang/crates.io-index".c2-chacha."0.2.3" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_core";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0905b6b7079ec73b314d4c748701f6931eb79fd97c668caa3f1899b22b32c6db"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_core";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d0e7a549d590831370895ab7ba4ea0c1b6b011d106b5ff2da6eee112615e6dc0"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "rand_core";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "90bde5296fc891b0cef12a6d03ddccc162ce7b2aff54160af9338f8d40df6d19"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "getrandom" ]
      [ "std" ]
    ];
    dependencies = {
      getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_hc";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7b40677c7be09ae76218dc623efbf7b18e34bced3f38883af07bb75630a21bc4"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_hc";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca3129af7b92a17112d59ad498c6f81eaf463253766b90396d39ea7a39d6613c"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_isaac."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "rand_isaac";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ded997c9d5f13925be2a6fd7e66bf1872597f759fd9dd93513dd7e92e5a5ee08"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_os."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "rand_os";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7b75f676a1e053fc562eafbb47838d67c84801e38fc1ba459e8f180deabd5071"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_cprng" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-cprng."0.1.1" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.4.0" { inherit profileName; };
      ${ if hostPlatform.parsed.abi.name == "sgx" then "rdrand" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rdrand."0.4.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_pcg."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "rand_pcg";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "086bd09a33c7044e56bb44d5bdde5a60e7f119a9e95b0775f545de759a32fe05"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.0" { inherit profileName; };
    };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_xorshift";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "effa3fcaa47e18db002bdde6060944b6d2f9cfd8db471c30e873448ad9187be3"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_xorshift";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "77d416b86801d23dde1aa643023b775c3a462efc0ed96443add11546cdf1dca8"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_xoshiro."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_xoshiro";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a9fcdd2e881d02f1d9390ae47ad8e5696a9e4be7b547a1da2afbc61973217004"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rayon."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "rayon";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "83a27732a533a1be0a0035a111fe76db89ad312f6f0347004c220c57f209a123"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.1" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
      rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "rayon-core";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "98dcf634205083b17d0861252431eb2acbfb698ab7478a2d20de07954f47ec7b"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.1" { inherit profileName; };
      crossbeam_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.1.2" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rdrand."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "rdrand";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" = overridableMkRustCrate (profileName: rec {
    name = "redox_syscall";
    version = "0.1.56";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2439c63f3f6139d1b57529d16bc3b8bb855230c8efcc5d3a896c8bea7c3b1e84"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".redox_termios."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "redox_termios";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76"; };
    dependencies = {
      syscall = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".redox_users."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "redox_users";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3fe5204c3a17e97dde73f285d49be585df59ed84b50a872baf416e73b62c3828"; };
    dependencies = {
      argon2rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".argon2rs."0.2.5" { inherit profileName; };
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" { inherit profileName; };
      rand_os = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_os."0.1.3" { inherit profileName; };
      syscall = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" = overridableMkRustCrate (profileName: rec {
    name = "regex";
    version = "1.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8f0a0bcab2fd7d1d7c54fa9eae6f43eddeb9ce2e7352f8518a814a4f65d60c58"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
    dependencies = {
      aho_corasick = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.3" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.2" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.6" { inherit profileName; };
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."0.3.6" { inherit profileName; };
      utf8_ranges = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8-ranges."1.0.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.6" = overridableMkRustCrate (profileName: rec {
    name = "regex-syntax";
    version = "0.6.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dcfd8681eebe297b81d98498869d4aae052137651ad7b96822f09ceb690d0a96"; };
    dependencies = {
      ucd_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ucd-util."0.1.3" { inherit profileName; };
    };
  });
  
  "unknown".remote-test-client."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "remote-test-client";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/remote-test-client");
  });
  
  "unknown".remote-test-server."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "remote-test-server";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/remote-test-server");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.2" = overridableMkRustCrate (profileName: rec {
    name = "remove_dir_all";
    version = "0.5.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4a83fa3702a688b9359eccba92d153ac33fd2e8462f9e0e3fdf155239ea7792e"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".reqwest."0.9.22" = overridableMkRustCrate (profileName: rec {
    name = "reqwest";
    version = "0.9.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2c2064233e442ce85c77231ebd67d9eca395207dec2127fe0bbedde4bd29a650"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "default")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "default-tls")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "hyper-tls")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "native-tls")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "tls")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "base64" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.10.1" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "cookie" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cookie."0.12.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "cookie_store" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cookie_store."0.7.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "encoding_rs" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.17" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "flate2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.12" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.1.19" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "hyper" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.12.31" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "hyper_tls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-tls."0.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "mime" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.13" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "mime_guess" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime_guess."2.0.1" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "native_tls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.3" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "serde" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "serde_json" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "serde_urlencoded" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.5.5" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "time" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.42" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_executor" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.9" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_io" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_threadpool" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-threadpool."0.1.17" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "tokio_timer" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-timer."0.2.12" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "url" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.2" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "uuid" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."0.7.4" { inherit profileName; };
      ${ if (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") && hostPlatform.isWindows then "winreg" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winreg."0.6.2" { inherit profileName; };
    };
  });
  
  "unknown".rls."1.41.0" = overridableMkRustCrate (profileName: rec {
    name = "rls";
    version = "1.41.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rls");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/clippy") "clippy")
      (lib.optional (rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls/clippy_lints") "clippy_lints")
      (lib.optional (rootFeatures' ? "rls/default") "default")
      (lib.optional (rootFeatures' ? "rls/futures" || rootFeatures' ? "rls/ipc") "futures")
      (lib.optional (rootFeatures' ? "rls/ipc") "ipc")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls/rls-ipc") "rls-ipc")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls/tokio") "tokio")
    ];
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.26" { inherit profileName; };
      cargo = rustPackages."unknown".cargo."0.44.0" { inherit profileName; };
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.8.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls/clippy_lints" then "clippy_lints" else null } = rustPackages."unknown".clippy_lints."0.0.212" { inherit profileName; };
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.0" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.3.0" { inherit profileName; };
      home = rustPackages."registry+https://github.com/rust-lang/crates.io-index".home."0.5.1" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.0" { inherit profileName; };
      jsonrpc_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.0.5" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      lsp_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lsp-types."0.60.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
      ordslice = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ordslice."0.3.0" { inherit profileName; };
      racer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".racer."2.1.31" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.2.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      rls_analysis = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-analysis."0.18.0" { inherit profileName; };
      rls_data = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls/rls-ipc" then "rls_ipc" else null } = rustPackages."unknown".rls-ipc."0.1.0" { inherit profileName; };
      rls_rustc = rustPackages."unknown".rls-rustc."0.6.0" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.1" { inherit profileName; };
      rls_vfs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-vfs."0.8.0" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      rustc_tools_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_tools_util."0.2.0" { inherit profileName; };
      rustfmt_nightly = rustPackages."unknown".rustfmt-nightly."1.4.12" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" { profileName = "__noProfile"; };
      serde_ignored = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_ignored."0.1.0" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.3" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.7" { inherit profileName; };
    };
    devDependencies = {
      difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      lsp_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lsp-codec."0.1.2" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      tokio_process = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-process."0.2.4" { inherit profileName; };
      tokio_timer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-timer."0.2.12" { inherit profileName; };
    };
    buildDependencies = {
      rustc_tools_util = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_tools_util."0.2.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-analysis."0.18.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-analysis";
    version = "0.18.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4c0d208ad66717501222c74b42d9e823a7612592e85ed78b04074c8f58c0be0a"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      derive_new = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.6" { profileName = "__noProfile"; };
      fst = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fst."0.3.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.7.8" { inherit profileName; };
      json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".json."0.11.13" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rls_data = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-data";
    version = "0.19.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "76c72ea97e045be5f6290bb157ebdc5ee9f2b093831ff72adfaf59025cf5c491"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "unknown".rls-ipc."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-ipc";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rls/rls-ipc");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "client")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server") "jsonrpc-ipc-server")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/server") "server")
    ];
    dependencies = {
      jsonrpc_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.0.5" { inherit profileName; };
      jsonrpc_core_client = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core-client."14.0.5" { inherit profileName; };
      jsonrpc_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-derive."14.0.5" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "jsonrpc_ipc_server" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-ipc-server."14.0.3" { inherit profileName; };
      rls_data = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "unknown".rls-rustc."0.6.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-rustc";
    version = "0.6.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rls/rls-rustc");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls-rustc/clippy") "clippy")
      (lib.optional (rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls-rustc/clippy" || rootFeatures' ? "rls-rustc/clippy_lints") "clippy_lints")
      [ "default" ]
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/futures" || rootFeatures' ? "rls-rustc/ipc") "futures")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc") "ipc")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/rls-data") "rls-data")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/rls-ipc") "rls-ipc")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/serde") "serde")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/tokio") "tokio")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls-rustc/clippy" || rootFeatures' ? "rls-rustc/clippy_lints" then "clippy_lints" else null } = rustPackages."unknown".clippy_lints."0.0.212" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/futures" || rootFeatures' ? "rls-rustc/ipc" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/rls-data" then "rls_data" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/rls-ipc" then "rls_ipc" else null } = rustPackages."unknown".rls-ipc."0.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/serde" then "serde" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/tokio" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "rls-span";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f1cb4694410d8d2ce43ccff3682f1c782158a018d5a9a92185675677f7533eb3"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-vfs."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-vfs";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ce4b57b25b4330ed5ec14028fc02141e083ddafda327e7eb598dc0569c8c83c9"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.1" { inherit profileName; };
    };
  });
  
  "unknown".rustbook."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustbook";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustbook");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustbook/codespan" || rootFeatures' ? "rustbook/linkcheck") "codespan")
      (lib.optional (rootFeatures' ? "rustbook/codespan-reporting" || rootFeatures' ? "rustbook/linkcheck") "codespan-reporting")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck") "linkcheck")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "mdbook-linkcheck")
    ];
    dependencies = {
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/codespan" || rootFeatures' ? "rustbook/linkcheck" then "codespan" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".codespan."0.5.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/codespan-reporting" || rootFeatures' ? "rustbook/linkcheck" then "codespan_reporting" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".codespan-reporting."0.5.0" { inherit profileName; };
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" { inherit profileName; };
      mdbook = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mdbook."0.3.5" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "mdbook_linkcheck" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mdbook-linkcheck."0.5.0" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc");
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      backtrace = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.44" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.2" { inherit profileName; };
      jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      measureme = rustPackages."registry+https://github.com/rust-lang/crates.io-index".measureme."0.7.1" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.9.0" { inherit profileName; };
      polonius_engine = rustPackages."registry+https://github.com/rust-lang/crates.io-index".polonius-engine."0.12.0" { inherit profileName; };
      rustc_rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.3.0" { inherit profileName; };
      rustc_rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.3.0" { inherit profileName; };
      rustc_apfloat = rustPackages."unknown".rustc_apfloat."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-arena."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-arena";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ea82fa3d9a8add7422228ca1a2cbba0784fa8861f56148ff64da08b3c7921b03"; };
    dependencies = {
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-graphviz."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-graphviz";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "638d0b2b3bcf99824e0cb5a25dbc547b61dc20942e11daf6a97e981918aa18e5"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_ast_pretty";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d38bab04dd676dee6d2f9670506a18c31bfce38bf7f8420aa83eb1140ecde049"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."642.0.0" { inherit profileName; };
      syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax."642.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_attr."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_attr";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "10b843ba8b1ed43739133047673b9f6a54d3b3b4d328d69c6ea89ff971395f35"; };
    dependencies = {
      rustc_ast_pretty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."642.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."642.0.0" { inherit profileName; };
      rustc_feature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_feature."642.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."642.0.0" { profileName = "__noProfile"; };
      rustc_session = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."642.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."642.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."642.0.0" { inherit profileName; };
      syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax."642.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_data_structures";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dc3d1c6d0a80ab0c1df76405377cec0f3d5423fb5b0953a8eac70a2ad6c44df2"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
      ena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ena."0.13.1" { inherit profileName; };
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.0.2" { inherit profileName; };
      jobserver_crate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      measureme = rustPackages."registry+https://github.com/rust-lang/crates.io-index".measureme."0.7.1" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.9.0" { inherit profileName; };
      graphviz = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-graphviz."642.0.0" { inherit profileName; };
      rustc_index = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_index."642.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."642.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.0.1" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.3.0" { inherit profileName; };
      rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.3.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
      stable_deref_trait = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.1.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_errors";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4909a1eca29331332257230f29120a8ff68c9e37d868c564fcd599e430cf8914"; };
    dependencies = {
      annotate_snippets = rustPackages."registry+https://github.com/rust-lang/crates.io-index".annotate-snippets."0.6.1" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."642.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."642.0.0" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.4" { inherit profileName; };
      termize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termize."0.1.1" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.6" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_feature."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_feature";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "63ab887a181d795cf5fd3edadf367760deafb90aefb844f168ab5255266e3478"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."642.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_fs_util."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_fs_util";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "70814116df3c5fbec8f06f6a1d013ca481f620fd22a9475754e9bf3ee9ba70d8"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_index."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_index";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ac1bf1d3cf3d119d41353d6fd229ef7272d5097bc0924de021c0294bf86d48bf"; };
    dependencies = {
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."642.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_lexer."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_lexer";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4cda21a32cebdc11ec4f5393aa2fcde5ed1b2f673a8571e5a4dcdf07e4ae9cac"; };
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_macros";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "75c47b48ea51910ecfd853c9248a9bf4c767bc823449ab6a1d864dff65fbae16"; };
    dependencies = {
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.0" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.11" { inherit profileName; };
      synstructure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_parse."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_parse";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "abd88e89cd5b5d28dcd3a347a3d534c08627d9455570dc1a2d402cb8437b9d30"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_ast_pretty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."642.0.0" { inherit profileName; };
      rustc_attr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_attr."642.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."642.0.0" { inherit profileName; };
      rustc_feature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_feature."642.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_lexer."642.0.0" { inherit profileName; };
      rustc_session = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."642.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."642.0.0" { inherit profileName; };
      syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax."642.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_session";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5b8487b4575fbb2d1fc6f1cd61225efd108a4d36817e6fb9b643d57fcae9cb12"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."642.0.0" { inherit profileName; };
      rustc_feature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_feature."642.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_fs_util."642.0.0" { inherit profileName; };
      rustc_index = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_index."642.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."642.0.0" { inherit profileName; };
      rustc_target = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_target."642.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."642.0.0" { inherit profileName; };
      syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax."642.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_span";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f69746c0d4c21bf20a5bb2bd247261a1aa8631f04202d7303352942dde70d987"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      arena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-arena."642.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      rustc_index = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_index."642.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."642.0.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."642.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.0" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_target."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_target";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8bbc6ae09b5d42ec66edd520e8412e0615c53a7c93607fe33dc4abab60ba7c8b"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      rustc_index = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_index."642.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."642.0.0" { profileName = "__noProfile"; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."642.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."642.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-serialize";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e13a1ead0252fc3d96da4c336a95950be6795f2b00c84a67ccadf26142f8cb41"; };
    dependencies = {
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.0.2" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax."642.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-syntax";
    version = "642.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e1f59f48ca3a2ec16a7e82e718ed5aadf9c9e08cf63015d28b4e774767524a6a"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      rustc_index = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_index."642.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_lexer."642.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."642.0.0" { profileName = "__noProfile"; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."642.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-serialize."642.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" = overridableMkRustCrate (profileName: rec {
    name = "rustc-demangle";
    version = "0.1.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4c691c0e608126e00913e33f0ccf3727d5fc84573623b8d65b2df340b5201783"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "rustc-hash";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7540fc8b0c49f096ee9c961cda096467dce8084bec6bdca2fc83895fd9b28cb8"; };
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.2" { inherit profileName; };
    };
  });
  
  "unknown".rustc-main."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-main";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/rustc");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc") "jemalloc")
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys") "jemalloc-sys")
      (lib.optional (rootFeatures' ? "rustc-main/llvm") "llvm")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys" then "jemalloc_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jemalloc-sys."0.3.0" { inherit profileName; };
      rustc_codegen_ssa = rustPackages."unknown".rustc_codegen_ssa."0.0.0" { inherit profileName; };
      rustc_driver = rustPackages."unknown".rustc_driver."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-rayon";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f32767f90d938f1b7199a174ef249ae1924f6e5bbdb9d112fea141e016f25b3a"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.1" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
      rustc_rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.3.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-rayon-core";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ea2427831f0053ea3ea73559c8eabd893133a51b251d142bacee53c62a288cb3"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.1" { inherit profileName; };
      crossbeam_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.1.2" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
    };
  });
  
  "unknown".rustc-std-workspace-alloc."1.99.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-std-workspace-alloc";
    version = "1.99.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustc-std-workspace-alloc");
    dependencies = {
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc-std-workspace-core."1.99.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-std-workspace-core";
    version = "1.99.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustc-std-workspace-core");
    dependencies = {
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc-std-workspace-std."1.99.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-std-workspace-std";
    version = "1.99.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustc-std-workspace-std");
    dependencies = {
      std = rustPackages."unknown".std."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc-workspace-hack."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-workspace-hack";
    version = "1.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustc-workspace-hack");
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      smallvec_0_6 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.10" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.15.35" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "unknown".rustc_apfloat."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_apfloat";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_apfloat");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_ast."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_ast";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_ast");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_ast_lowering."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_ast_lowering";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_ast_lowering");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_ast_passes."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_ast_passes";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_ast_passes");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_ast_pretty."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_ast_pretty";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_ast_pretty");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_attr."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_attr";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_attr");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_builtin_macros."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_builtin_macros";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_builtin_macros");
    dependencies = {
      fmt_macros = rustPackages."unknown".fmt_macros."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_expand = rustPackages."unknown".rustc_expand."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_codegen_llvm."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_codegen_llvm";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_codegen_llvm");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.12" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      measureme = rustPackages."registry+https://github.com/rust-lang/crates.io-index".measureme."0.7.1" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_codegen_ssa = rustPackages."unknown".rustc_codegen_ssa."0.0.0" { inherit profileName; };
      rustc_codegen_utils = rustPackages."unknown".rustc_codegen_utils."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."unknown".rustc_fs_util."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_incremental = rustPackages."unknown".rustc_incremental."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_llvm = rustPackages."unknown".rustc_llvm."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_codegen_ssa."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_codegen_ssa";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_codegen_ssa");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { inherit profileName; };
      jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      memmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap."0.7.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_apfloat = rustPackages."unknown".rustc_apfloat."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_codegen_utils = rustPackages."unknown".rustc_codegen_utils."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."unknown".rustc_fs_util."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_incremental = rustPackages."unknown".rustc_incremental."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_codegen_utils."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_codegen_utils";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_codegen_utils");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      punycode = rustPackages."registry+https://github.com/rust-lang/crates.io-index".punycode."0.4.0" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_data_structures."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_data_structures";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_data_structures");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
      ena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ena."0.13.1" { inherit profileName; };
      graphviz = rustPackages."unknown".graphviz."0.0.0" { inherit profileName; };
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.0.2" { inherit profileName; };
      jobserver_crate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      measureme = rustPackages."registry+https://github.com/rust-lang/crates.io-index".measureme."0.7.1" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.9.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.0.1" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.3.0" { inherit profileName; };
      rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.3.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
      stable_deref_trait = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.1.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "unknown".rustc_driver."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_driver";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_driver");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc-main/llvm" || rootFeatures' ? "rustc_driver/llvm") "llvm")
    ];
    dependencies = {
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_codegen_ssa = rustPackages."unknown".rustc_codegen_ssa."0.0.0" { inherit profileName; };
      rustc_codegen_utils = rustPackages."unknown".rustc_codegen_utils."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_error_codes = rustPackages."unknown".rustc_error_codes."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_interface = rustPackages."unknown".rustc_interface."0.0.0" { inherit profileName; };
      rustc_lint = rustPackages."unknown".rustc_lint."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      rustc_mir = rustPackages."unknown".rustc_mir."0.0.0" { inherit profileName; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_plugin_impl = rustPackages."unknown".rustc_plugin_impl."0.0.0" { inherit profileName; };
      rustc_save_analysis = rustPackages."unknown".rustc_save_analysis."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "unknown".rustc_error_codes."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_error_codes";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_error_codes");
  });
  
  "unknown".rustc_errors."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_errors";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_errors");
    dependencies = {
      annotate_snippets = rustPackages."registry+https://github.com/rust-lang/crates.io-index".annotate-snippets."0.6.1" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.11" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.4" { inherit profileName; };
      termize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termize."0.1.1" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.6" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "unknown".rustc_expand."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_expand";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_expand");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_passes = rustPackages."unknown".rustc_ast_passes."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_feature."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_feature";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_feature");
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_fs_util."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_fs_util";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_fs_util");
  });
  
  "unknown".rustc_hir."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_hir";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_hir");
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_incremental."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_incremental";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_incremental");
    dependencies = {
      graphviz = rustPackages."unknown".graphviz."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."unknown".rustc_fs_util."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_index."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_index";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_index");
    dependencies = {
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_infer."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_infer";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_infer");
    dependencies = {
      fmt_macros = rustPackages."unknown".fmt_macros."0.0.0" { inherit profileName; };
      graphviz = rustPackages."unknown".graphviz."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_error_codes = rustPackages."unknown".rustc_error_codes."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_interface."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_interface";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_interface");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc-main/llvm" || rootFeatures' ? "rustc_driver/llvm" || rootFeatures' ? "rustc_interface/llvm") "llvm")
      (lib.optional (rootFeatures' ? "rustc-main/llvm" || rootFeatures' ? "rustc_driver/llvm" || rootFeatures' ? "rustc_interface/llvm" || rootFeatures' ? "rustc_interface/rustc_codegen_llvm") "rustc_codegen_llvm")
    ];
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.1.0" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.3.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_lowering = rustPackages."unknown".rustc_ast_lowering."0.0.0" { inherit profileName; };
      rustc_ast_passes = rustPackages."unknown".rustc_ast_passes."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_builtin_macros = rustPackages."unknown".rustc_builtin_macros."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustc-main/llvm" || rootFeatures' ? "rustc_driver/llvm" || rootFeatures' ? "rustc_interface/llvm" || rootFeatures' ? "rustc_interface/rustc_codegen_llvm" then "rustc_codegen_llvm" else null } = rustPackages."unknown".rustc_codegen_llvm."0.0.0" { inherit profileName; };
      rustc_codegen_ssa = rustPackages."unknown".rustc_codegen_ssa."0.0.0" { inherit profileName; };
      rustc_codegen_utils = rustPackages."unknown".rustc_codegen_utils."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_expand = rustPackages."unknown".rustc_expand."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_incremental = rustPackages."unknown".rustc_incremental."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_lint = rustPackages."unknown".rustc_lint."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      rustc_mir = rustPackages."unknown".rustc_mir."0.0.0" { inherit profileName; };
      rustc_mir_build = rustPackages."unknown".rustc_mir_build."0.0.0" { inherit profileName; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_passes = rustPackages."unknown".rustc_passes."0.0.0" { inherit profileName; };
      rustc_plugin_impl = rustPackages."unknown".rustc_plugin_impl."0.0.0" { inherit profileName; };
      rustc_privacy = rustPackages."unknown".rustc_privacy."0.0.0" { inherit profileName; };
      rustc_resolve = rustPackages."unknown".rustc_resolve."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_traits = rustPackages."unknown".rustc_traits."0.0.0" { inherit profileName; };
      rustc_ty = rustPackages."unknown".rustc_ty."0.0.0" { inherit profileName; };
      rustc_typeck = rustPackages."unknown".rustc_typeck."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
    devDependencies = {
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_lexer."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_lexer";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_lexer");
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_lint."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_lint";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_lint");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      unicode_security = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-security."0.0.2" { inherit profileName; };
    };
  });
  
  "unknown".rustc_llvm."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_llvm";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_llvm");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc_llvm/emscripten") "emscripten")
      (lib.optional (rootFeatures' ? "rustc_llvm/static-libstdcpp") "static-libstdcpp")
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
    buildDependencies = {
      build_helper = buildRustPackages."unknown".build_helper."0.1.0" { profileName = "__noProfile"; };
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".rustc_macros."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_macros";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_macros");
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.11" { inherit profileName; };
      synstructure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.1" { inherit profileName; };
    };
  });
  
  "unknown".rustc_metadata."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_metadata";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_metadata");
    dependencies = {
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.12" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      memmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap."0.7.0" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_expand = rustPackages."unknown".rustc_expand."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
      stable_deref_trait = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.1.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "unknown".rustc_mir."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_mir";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_mir");
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
      dot = rustPackages."unknown".graphviz."0.0.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      log_settings = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log_settings."0.1.2" { inherit profileName; };
      polonius_engine = rustPackages."registry+https://github.com/rust-lang/crates.io-index".polonius-engine."0.12.0" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_apfloat = rustPackages."unknown".rustc_apfloat."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_mir_build."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_mir_build";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_mir_build");
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_apfloat = rustPackages."unknown".rustc_apfloat."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_parse."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_parse";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_parse");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.11" { inherit profileName; };
    };
  });
  
  "unknown".rustc_passes."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_passes";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_passes");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_plugin_impl."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_plugin_impl";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_plugin_impl");
    dependencies = {
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_lint = rustPackages."unknown".rustc_lint."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_privacy."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_privacy";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_privacy");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_typeck = rustPackages."unknown".rustc_typeck."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_resolve."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_resolve";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_resolve");
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_lowering = rustPackages."unknown".rustc_ast_lowering."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_expand = rustPackages."unknown".rustc_expand."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_save_analysis."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_save_analysis";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_save_analysis");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rls_data = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.1" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_codegen_utils = rustPackages."unknown".rustc_codegen_utils."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
    };
  });
  
  "unknown".rustc_session."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_session";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_session");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."unknown".rustc_fs_util."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_span."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_span";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_span");
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.6" { inherit profileName; };
    };
  });
  
  "unknown".rustc_target."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_target";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_target");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".serialize."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_tools_util."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_tools_util";
    version = "0.2.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy/rustc_tools_util");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc_tools_util/deny-warnings") "deny-warnings")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc_tools_util."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_tools_util";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b725dadae9fabc488df69a287f5a99c5eaf5d10853842a8a3dfac52476f544ee"; };
  });
  
  "unknown".rustc_traits."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_traits";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_traits");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_ty."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_ty";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_ty");
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_typeck."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_typeck";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustc_typeck");
    dependencies = {
      arena = rustPackages."unknown".arena."0.0.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      rustc = rustPackages."unknown".rustc."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "rustc_version";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a"; };
    dependencies = {
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
    };
  });
  
  "unknown".rustdoc."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustdoc";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustdoc");
    dependencies = {
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.0" { inherit profileName; };
      minifier = rustPackages."registry+https://github.com/rust-lang/crates.io-index".minifier."0.0.33" { inherit profileName; };
      pulldown_cmark = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.7.0" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.3.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
    };
  });
  
  "unknown".rustdoc-themes."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustdoc-themes";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustdoc-themes");
  });
  
  "unknown".rustdoc-tool."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustdoc-tool";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustdoc");
    dependencies = {
      rustdoc = rustPackages."unknown".rustdoc."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustfix."0.4.6" = overridableMkRustCrate (profileName: rec {
    name = "rustfix";
    version = "0.4.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7150ac777a2931a53489f5a41eb0937b84e3092a20cd0e73ad436b65b507f607"; };
    dependencies = {
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustfix."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "rustfix";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "804b11883a5ce0ad0378fbf95a8dea59ee6b51c331a73b8f471b6bdaa3bd40c1"; };
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.26" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
    };
  });
  
  "unknown".rustfmt-config_proc_macro."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "rustfmt-config_proc_macro";
    version = "0.2.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustfmt/config_proc_macro");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustfmt-config_proc_macro/debug-with-rustfmt") "debug-with-rustfmt")
      [ "default" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.11" { inherit profileName; };
    };
    devDependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "unknown".rustfmt-nightly."1.4.12" = overridableMkRustCrate (profileName: rec {
    name = "rustfmt-nightly";
    version = "1.4.12";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustfmt");
    features = builtins.concatLists [
      [ "cargo-fmt" ]
      [ "default" ]
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "generic-simd")
      [ "rustfmt-format-diff" ]
    ];
    dependencies = {
      annotate_snippets = rustPackages."registry+https://github.com/rust-lang/crates.io-index".annotate-snippets."0.6.1" { inherit profileName; };
      bytecount = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytecount."0.6.0" { inherit profileName; };
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.8.0" { inherit profileName; };
      derive_new = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.6" { profileName = "__noProfile"; };
      diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diff."0.1.11" { inherit profileName; };
      dirs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs."2.0.1" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.6.2" { inherit profileName; };
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      ignore = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ignore."0.4.11" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      rustc_ast_pretty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."642.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."642.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."642.0.0" { inherit profileName; };
      rustc_parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_parse."642.0.0" { inherit profileName; };
      rustc_session = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."642.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."642.0.0" { inherit profileName; };
      rustc_target = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_target."642.0.0" { inherit profileName; };
      syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-syntax."642.0.0" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      rustfmt_config_proc_macro = buildRustPackages."unknown".rustfmt-config_proc_macro."0.2.0" { profileName = "__noProfile"; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      structopt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".structopt."0.3.1" { inherit profileName; };
      term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".term."0.6.0" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.3" { inherit profileName; };
      unicode_segmentation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.6.0" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.6" { inherit profileName; };
      unicode_categories = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" { inherit profileName; };
    };
    devDependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "ryu";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c92464b447c0ee8c4fb3824ecc8383b81717b9f1e74ba2e72540aef7b9f82997"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.4" = overridableMkRustCrate (profileName: rec {
    name = "same-file";
    version = "1.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8f20c4be53a8a1ff4c1f1b2bd14570d2f634628709752f0702ecdd2b3f9a5267"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.16" = overridableMkRustCrate (profileName: rec {
    name = "schannel";
    version = "0.1.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "87f550b06b6cba9c8b8be3ee73f391990116bf527450d2556e9b9ce263b9a021"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "scoped-tls";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ea6a9290e3c9cf0f18145ef7ffa62d68ee0bf5fcd651017e586dc7fd5da448c2"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".scoped_threadpool."0.1.9" = overridableMkRustCrate (profileName: rec {
    name = "scoped_threadpool";
    version = "0.1.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1d51f5df5af43ab3f1360b429fa5e0152ac5ce8c0bd6485cae490332e96846a8"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "scopeguard";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b42e15e59b18a828bbf5c58ea01debb36b9b096346de35d941dcb89009f24a0d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".security-framework."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "security-framework";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "eee63d0f4a9ec776eeb30e220f0bc1e092c3ad744b2a379e3993070364d3adc2"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "core_foundation" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.6.3" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "core_foundation_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.6.2" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "security_framework_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."0.3.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "security-framework-sys";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9636f8989cbf61385ae4824b98c1aaa54c994d7d8b41f11c601ed799f0549a56"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "core_foundation_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.6.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "semver";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "serde" ]
    ];
    dependencies = {
      semver_parser = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "semver-parser";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" = overridableMkRustCrate (profileName: rec {
    name = "serde";
    version = "1.0.99";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fec2851eb56d010dc9a21b89ca53ee75e6528bab60c11e89d38390904982da9f"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "derive" ]
      [ "serde_derive" ]
      [ "std" ]
    ];
    dependencies = {
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.81" = overridableMkRustCrate (profileName: rec {
    name = "serde_derive";
    version = "1.0.81";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "477b13b646f5b5b56fc95bedfc3b550d12141ce84f466f6c44b9a17589923885"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.15.35" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_ignored."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "serde_ignored";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3c24bbb8f4b81834f618cd3e28698235c2fba06ddf7f4fbe30519dd081364e59"; };
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" = overridableMkRustCrate (profileName: rec {
    name = "serde_json";
    version = "1.0.40";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "051c49229f282f7c6f3813f8286cc1e3323e8051823fce42c7ea80fe13521704"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "raw_value" ]
    ];
    dependencies = {
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.4" { inherit profileName; };
      ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_repr."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "serde_repr";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cd02c7587ec314570041b2754829f84d873ced14a96d1fd1823531e11db40573"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.5.5" = overridableMkRustCrate (profileName: rec {
    name = "serde_urlencoded";
    version = "0.5.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "642dd69105886af2efd227f75a520ec9b44a820d65bc133a9131f7d229fd165a"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "dtoa" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dtoa."0.4.4" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "itoa" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.4" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "serde" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "url" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.2" { inherit profileName; };
    };
  });
  
  "unknown".serialize."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "serialize";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libserialize");
    dependencies = {
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.0.2" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".sha-1."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "sha-1";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "51b9d1f3b5de8a167ab06834a7c883bd197f2191e1dda1a22d9ccfeedbf9aded"; };
    dependencies = {
      block_buffer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.3.3" { inherit profileName; };
      byte_tools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byte-tools."0.2.0" { inherit profileName; };
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.7.6" { inherit profileName; };
      fake_simd = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fake-simd."0.1.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".shell-escape."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "shell-escape";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "170a13e64f2a51b77a45702ba77287f5c6829375b04a69cf2222acd17d0cfab9"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".shlex."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "shlex";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7fdf1b9db47230893d76faad238fd6097fd6d6a9245cd7a4d90dbd639536bbd2"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".signal-hook."0.1.7" = overridableMkRustCrate (profileName: rec {
    name = "signal-hook";
    version = "0.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1f272d1b7586bec132ed427f532dd418d8beca1ca7f2caf7df35569b1415a4b4"; };
    dependencies = {
      arc_swap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arc-swap."0.3.7" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".siphasher."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "siphasher";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0df90a788073e8d0235a67e50441d47db7c8ad9debd91cbf43736a2a92d36537"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".sized-chunks."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "sized-chunks";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "62db64dd92b3b54314b1e216c274634ca2b3fe8da8b3873be670cb1ac4dad30f"; };
    dependencies = {
      bitmaps = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitmaps."2.0.0" { inherit profileName; };
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.10.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" = overridableMkRustCrate (profileName: rec {
    name = "slab";
    version = "0.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c111b5bd5695e56cffe5129854aa230b39c93a305372fdbb2668ca2394eea9f8"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.10" = overridableMkRustCrate (profileName: rec {
    name = "smallvec";
    version = "0.6.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ab606a9c5e214920bb66c458cd7be8ef094f813f20fe77a54cc7dbfff220d4b7"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "may_dangle" ]
      [ "std" ]
      [ "union" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "smallvec";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4ecf3b85f68e8abaa7555aa5abdb1153079387e60b718283d732f03897fcfc86"; };
    features = builtins.concatLists [
      [ "may_dangle" ]
      [ "union" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.11" = overridableMkRustCrate (profileName: rec {
    name = "socket2";
    version = "0.3.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e8b74de517221a2cb01a53349cf54182acdc31a074727d3079068448c0676d85"; };
    dependencies = {
      ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "redox" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "redox" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "stable_deref_trait";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ffbc596e092fe5f598b12ef46cc03754085ac2f4d8c739ad61c4ae266cc3b3fa"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "unknown".std."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "std";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libstd");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "backtrace")
      (lib.optional (rootFeatures' ? "std/compiler-builtins-c" || rootFeatures' ? "test/compiler-builtins-c") "compiler-builtins-c")
      [ "default" ]
      (lib.optional (rootFeatures' ? "std/llvm-libunwind" || rootFeatures' ? "test/llvm-libunwind") "llvm-libunwind")
      (lib.optional (rootFeatures' ? "std/panic-unwind") "panic-unwind")
      (lib.optional (rootFeatures' ? "std/panic_immediate_abort" || rootFeatures' ? "test/panic_immediate_abort") "panic_immediate_abort")
      (lib.optional (rootFeatures' ? "std/panic-unwind" || rootFeatures' ? "std/panic_unwind" || rootFeatures' ? "test/panic-unwind") "panic_unwind")
      (lib.optional (rootFeatures' ? "std/profiler" || rootFeatures' ? "test/profiler") "profiler")
      (lib.optional (rootFeatures' ? "std/profiler" || rootFeatures' ? "std/profiler_builtins" || rootFeatures' ? "test/profiler") "profiler_builtins")
      [ "std_detect_dlsym_getauxval" ]
      [ "std_detect_file_io" ]
    ];
    dependencies = {
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
      backtrace_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.44" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten") || hostPlatform.parsed.vendor.name == "fortanix" && hostPlatform.parsed.abi.name == "sgx" then "dlmalloc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dlmalloc."0.1.3" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-fortanix-unknown-sgx" then "fortanix_sgx_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fortanix-sgx-abi."0.3.2" { inherit profileName; };
      hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.6.2" { inherit profileName; };
      ${ if (hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "aarch64") && hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.1" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      panic_abort = rustPackages."unknown".panic_abort."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/panic-unwind" || rootFeatures' ? "std/panic_unwind" || rootFeatures' ? "test/panic-unwind" then "panic_unwind" else null } = rustPackages."unknown".panic_unwind."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/profiler" || rootFeatures' ? "std/profiler_builtins" || rootFeatures' ? "test/profiler" then "profiler_builtins" else null } = rustPackages."unknown".profiler_builtins."0.0.0" { inherit profileName; };
      unwind = rustPackages."unknown".unwind."0.0.0" { inherit profileName; };
      ${ if hostPlatform.config == "wasm32-wasi" then "wasi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.9.0+wasi-snapshot-preview1" { inherit profileName; };
    };
    devDependencies = {
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".string."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "string";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d24114bfcceb867ca7f71a0d3fe45d45619ec47a6fbfa98cb14e14250bfa5d6d"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "bytes")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "default")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".string_cache."0.7.3" = overridableMkRustCrate (profileName: rec {
    name = "string_cache";
    version = "0.7.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "25d70109977172b127fe834e5449e5ab1740b9ba49fa18a2020f509174f25423"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      debug_unreachable = rustPackages."registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.3" { inherit profileName; };
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.24" { inherit profileName; };
      precomputed_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".precomputed-hash."0.1.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      string_cache_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache_shared."0.3.0" { inherit profileName; };
    };
    buildDependencies = {
      string_cache_codegen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache_codegen."0.4.2" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".string_cache_codegen."0.4.2" = overridableMkRustCrate (profileName: rec {
    name = "string_cache_codegen";
    version = "0.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1eea1eee654ef80933142157fdad9dd8bc43cf7c74e999e369263496f04ff4da"; };
    dependencies = {
      phf_generator = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.7.24" { inherit profileName; };
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.7.24" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" { inherit profileName; };
      string_cache_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache_shared."0.3.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".string_cache_shared."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "string_cache_shared";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b1884d1bc09741d466d9b14e6d37ac89d6909cbcac41dd9ae982d4d063bbedfc"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strip-ansi-escapes."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "strip-ansi-escapes";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9d63676e2abafa709460982ddc02a3bb586b6d15a49b75c212e06edd3933acee"; };
    dependencies = {
      vte = rustPackages."registry+https://github.com/rust-lang/crates.io-index".vte."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strsim."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "strsim";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".structopt."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "structopt";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2ac9d6e93dd792b217bf89cda5c14566e3043960c6f9da890c2ba5d09d07804c"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.0" { inherit profileName; };
      structopt_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".structopt-derive."0.3.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".structopt-derive."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "structopt-derive";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2ae9e5165d463a0dea76967d021f8d0f9316057bf5163aa2a4843790e842ff37"; };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.3.0" { inherit profileName; };
      proc_macro_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."0.2.6" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strum."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "strum";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f6c3a2071519ab6a48f465808c4c1ffdd00dfc8e93111d02b4fc5abab177676e"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "strum_macros";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8baacebd7b7c9b864d83a6ba7a246232983e277b86fa5cdec77f565715a4b136"; };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.3.0" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.15.35" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".syn."0.15.35" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "0.15.35";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "641e117d55514d6d918490e47102f7e08d096fdde360247e4a10f7a91a8478d3"; };
    features = builtins.concatLists [
      [ "clone-impls" ]
      [ "default" ]
      [ "derive" ]
      [ "extra-traits" ]
      [ "full" ]
      [ "parsing" ]
      [ "printing" ]
      [ "proc-macro" ]
      [ "quote" ]
      [ "visit" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.11" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "1.0.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dff0acdb207ae2fe6d5976617f887eb1e35a2ba52c13c7234c790960cdad9238"; };
    features = builtins.concatLists [
      [ "clone-impls" ]
      [ "default" ]
      [ "derive" ]
      [ "extra-traits" ]
      [ "fold" ]
      [ "full" ]
      [ "parsing" ]
      [ "printing" ]
      [ "proc-macro" ]
      [ "quote" ]
      [ "visit" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".synstructure."0.10.2" = overridableMkRustCrate (profileName: rec {
    name = "synstructure";
    version = "0.10.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "02353edf96d6e4dc81aea2d8490a7e9db177bf8acb0e951c24940bf866cb313f"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.15.35" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.1" = overridableMkRustCrate (profileName: rec {
    name = "synstructure";
    version = "0.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3f085a5855930c0441ca1288cf044ea4aecf4f43a91668abdb870b4ba546a203"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.3" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.11" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tar."0.4.26" = overridableMkRustCrate (profileName: rec {
    name = "tar";
    version = "0.4.26";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b3196bfbffbba3e57481b6ea32249fbaf590396a52505a2615adbb79d9d826d3"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "xattr" ]
    ];
    dependencies = {
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.8" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" { inherit profileName; };
      ${ if hostPlatform.isUnix then "xattr" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xattr."0.2.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" = overridableMkRustCrate (profileName: rec {
    name = "tempfile";
    version = "3.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7a6e24d9338a0a5be79593e2fa15a648add6138caa803e2d5bc782c371732ca9"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" { inherit profileName; };
      remove_dir_all = rustPackages."registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.2" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "tendril";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9de21546595a0873061940d994bbbc5c35f024ae4fd61ec5c5b159115684f508"; };
    dependencies = {
      futf = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futf."0.1.4" { inherit profileName; };
      mac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; };
      utf8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf-8."0.7.2" { inherit profileName; };
    };
  });
  
  "unknown".term."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "term";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libterm");
    dependencies = {
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      std = rustPackages."unknown".std."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".term."0.6.0" = overridableMkRustCrate (profileName: rec {
    name = "term";
    version = "0.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0dd90505d5006a4422d3520b30c781d480b3f36768c2fa2187c3e950bc110464"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.2" { inherit profileName; };
      dirs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs."2.0.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.4" = overridableMkRustCrate (profileName: rec {
    name = "termcolor";
    version = "1.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4096add70612622289f2fdcdbd5086dc81c1e2675e6ae58d6c4f62a16c6d7f2f"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "wincolor" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wincolor."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".termion."1.5.1" = overridableMkRustCrate (profileName: rec {
    name = "termion";
    version = "1.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096"; };
    dependencies = {
      ${ if !(hostPlatform.parsed.kernel.name == "redox") then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "redox_termios" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_termios."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".termize."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "termize";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1706be6b564323ce7092f5f7e6b118a14c8ef7ed0e69c8c5329c914a9f101295"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "unknown".test."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "test";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libtest");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "test/backtrace") "backtrace")
      (lib.optional (rootFeatures' ? "test/compiler-builtins-c") "compiler-builtins-c")
      (lib.optional (rootFeatures' ? "test/llvm-libunwind") "llvm-libunwind")
      (lib.optional (rootFeatures' ? "test/panic-unwind") "panic-unwind")
      (lib.optional (rootFeatures' ? "test/panic_immediate_abort") "panic_immediate_abort")
      (lib.optional (rootFeatures' ? "test/profiler") "profiler")
    ];
    dependencies = {
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      panic_abort = rustPackages."unknown".panic_abort."0.0.0" { inherit profileName; };
      panic_unwind = rustPackages."unknown".panic_unwind."0.0.0" { inherit profileName; };
      proc_macro = rustPackages."unknown".proc_macro."0.0.0" { inherit profileName; };
      std = rustPackages."unknown".std."0.0.0" { inherit profileName; };
      term = rustPackages."unknown".term."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tester."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "tester";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ee72ec31009a42b53de9a6b7d8f462b493ab3b1e4767bda1fcdbb52127f13b6c"; };
    dependencies = {
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".term."0.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".textwrap."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "textwrap";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060"; };
    dependencies = {
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thread_local."0.3.6" = overridableMkRustCrate (profileName: rec {
    name = "thread_local";
    version = "0.3.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "thread_local";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d40c6d1b69745a6ec6fb1ca717914848da4b44ae29d9b3080cbee91d72a69b14"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });
  
  "unknown".tidy."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "tidy";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/tidy");
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.7" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".time."0.1.42" = overridableMkRustCrate (profileName: rec {
    name = "time";
    version = "0.1.42";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "db8dcfca086c1143c9270ac42a2bbd8a7ee477b78ac8e45b19abfb0cbede4b6f"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" = overridableMkRustCrate (profileName: rec {
    name = "tokio";
    version = "0.1.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5a09c0b5bb588872ab2f09afa13ee6e9dac11e10a0ec9e8e3ba39a5a5d530af6"; };
    features = builtins.concatLists [
      [ "bytes" ]
      [ "codec" ]
      [ "default" ]
      [ "fs" ]
      [ "io" ]
      [ "mio" ]
      [ "num_cpus" ]
      [ "reactor" ]
      [ "rt-full" ]
      [ "sync" ]
      [ "tcp" ]
      [ "timer" ]
      [ "tokio-codec" ]
      [ "tokio-current-thread" ]
      [ "tokio-executor" ]
      [ "tokio-fs" ]
      [ "tokio-io" ]
      [ "tokio-reactor" ]
      [ "tokio-sync" ]
      [ "tokio-tcp" ]
      [ "tokio-threadpool" ]
      [ "tokio-timer" ]
      [ "tokio-udp" ]
      [ "tokio-uds" ]
      [ "udp" ]
      [ "uds" ]
    ];
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.16" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
      tokio_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.1" { inherit profileName; };
      tokio_current_thread = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-current-thread."0.1.6" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.9" { inherit profileName; };
      tokio_fs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-fs."0.1.6" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.11" { inherit profileName; };
      tokio_sync = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-sync."0.1.7" { inherit profileName; };
      tokio_tcp = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-tcp."0.1.3" { inherit profileName; };
      tokio_threadpool = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-threadpool."0.1.17" { inherit profileName; };
      tokio_timer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-timer."0.2.12" { inherit profileName; };
      tokio_udp = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-udp."0.1.5" { inherit profileName; };
      ${ if hostPlatform.isUnix then "tokio_uds" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-uds."0.2.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-buf."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "tokio-buf";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8fb220f46c53859a4b7ec083e41dec9778ff0b1851c0942b211edb89e0ccdc46"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "default")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "either")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "util")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "either" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.5.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "tokio-codec";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5c501eceaf96f0e1793cf26beb63da3d11c738c4a943fdf3746d81d64684c39f"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-current-thread."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "tokio-current-thread";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d16217cad7f1b840c5a97dfb3c43b0c871fef423a6e8d2118c604e843662a443"; };
    dependencies = {
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.9" = overridableMkRustCrate (profileName: rec {
    name = "tokio-executor";
    version = "0.1.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca6df436c42b0c3330a82d855d2ef017cd793090ad550a6bc2184f4b933532ab"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-fs."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "tokio-fs";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3fe6dc22b08d6993916647d108a1a7d15b9cd29c4f4496c62b92c45b5041b7af"; };
    dependencies = {
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
      tokio_threadpool = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-threadpool."0.1.17" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" = overridableMkRustCrate (profileName: rec {
    name = "tokio-io";
    version = "0.1.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5090db468dad16e1a7a54c8c67280c5e4b544f3d3e018f0b913b400261f85926"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-named-pipes."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "tokio-named-pipes";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9d282d483052288b2308ba5ee795f5673b159c9bdf63c385a05609da782a5eae"; };
    dependencies = {
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "mio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.16" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "mio_named_pipes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-named-pipes."0.1.6" { inherit profileName; };
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-process."0.2.4" = overridableMkRustCrate (profileName: rec {
    name = "tokio-process";
    version = "0.2.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "afbd6ef1b8cc2bd2c2b580d882774d443ebb1c6ceefe35ba9ea4ab586c89dbe8"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "crossbeam_queue" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.1.2" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      ${ if hostPlatform.isUnix then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      ${ if hostPlatform.isUnix then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if hostPlatform.isUnix then "mio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.16" { inherit profileName; };
      ${ if hostPlatform.isWindows then "mio_named_pipes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-named-pipes."0.1.6" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.11" { inherit profileName; };
      ${ if hostPlatform.isUnix then "tokio_signal" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-signal."0.2.7" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.11" = overridableMkRustCrate (profileName: rec {
    name = "tokio-reactor";
    version = "0.1.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6732fe6b53c8d11178dcb77ac6d9682af27fc6d4cb87789449152e5377377146"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.16" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.9.0" { inherit profileName; };
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.9" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
      tokio_sync = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-sync."0.1.7" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-service."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "tokio-service";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "24da22d077e0f15f55162bdbdc661228c1581892f52074fb242678d015b45162"; };
    dependencies = {
      ${ if rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-signal."0.2.7" = overridableMkRustCrate (profileName: rec {
    name = "tokio-signal";
    version = "0.2.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dd6dc5276ea05ce379a16de90083ec80836440d5ef8a6a39545a3207373b8296"; };
    dependencies = {
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.16" { inherit profileName; };
      ${ if hostPlatform.isUnix then "mio_uds" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-uds."0.6.7" { inherit profileName; };
      ${ if hostPlatform.isUnix then "signal_hook" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook."0.1.7" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.9" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.11" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-sync."0.1.7" = overridableMkRustCrate (profileName: rec {
    name = "tokio-sync";
    version = "0.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d06554cce1ae4a50f42fba8023918afa931413aded705b560e29600ccf7c6d76"; };
    dependencies = {
      fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.6" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-tcp."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "tokio-tcp";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1d14b10654be682ac43efee27401d792507e30fd8d26389e1da3b185de2e4119"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      iovec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.16" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-threadpool."0.1.17" = overridableMkRustCrate (profileName: rec {
    name = "tokio-threadpool";
    version = "0.1.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f0c32ffea4827978e9aa392d2f743d973c1dfa3730a2ed3f22ce1e6984da848c"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.1" { inherit profileName; };
      crossbeam_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.1.2" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" { inherit profileName; };
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-timer."0.2.12" = overridableMkRustCrate (profileName: rec {
    name = "tokio-timer";
    version = "0.2.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1739638e364e558128461fc1ad84d997702c8e31c2e6b18fb99842268199e827"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.5" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-udp."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "tokio-udp";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f02298505547f73e60f568359ef0d016d5acd6e830ab9bc7c4a5b3403440121b"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.16" { inherit profileName; };
      tokio_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.1" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-uds."0.2.5" = overridableMkRustCrate (profileName: rec {
    name = "tokio-uds";
    version = "0.2.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "037ffc3ba0e12a0ab4aca92e5234e0dedeb48fddf6ccd260f1f150a36a9f2445"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.11" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      iovec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.16" { inherit profileName; };
      mio_uds = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-uds."0.6.7" { inherit profileName; };
      tokio_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.1" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.12" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".toml."0.5.3" = overridableMkRustCrate (profileName: rec {
    name = "toml";
    version = "0.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c7aabe75941d914b72bf3e5d3932ed92ce0664d49d8432305a8b547c37227724"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".toml-query."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "toml-query";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a24369a1894ac8224efcfd567c3d141aea360292f49888e7ec7dcc316527aebb"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" { inherit profileName; };
      failure_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.5" { profileName = "__noProfile"; };
      is_match = rustPackages."registry+https://github.com/rust-lang/crates.io-index".is-match."0.1.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.3" { inherit profileName; };
      toml_query_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".toml-query_derive."0.9.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".toml-query_derive."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "toml-query_derive";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3c99ca245ec273c7e75c8ee58f47b882d0146f3c2c8495158082c6671e8b5335"; };
    dependencies = {
      darling = rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling."0.8.6" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."0.6.12" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."0.15.35" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".try-lock."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "try-lock";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e604eb7b43c06650e854be16a2a03155743d3752dd1c943f6829e26b7a36e382"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".try_from."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "try_from";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "283d3b89e1368717881a9d51dad843cc435380d8109c9e47d38780a324698d8b"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".typenum."1.10.0" = overridableMkRustCrate (profileName: rec {
    name = "typenum";
    version = "1.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "612d636f949607bdf9b123b4a6f6d966dedf3ff669f7f045890d3a4a73948169"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ucd-parse."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "ucd-parse";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca6b52bf4da6512f0f07785a04769222e50d29639e7ecd016b7806fd2de306b4"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.1.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ucd-trie."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "ucd-trie";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "71a9c5b1fe77426cf144cc30e49e955270f5086e31a6441dfa8b32efc09b9d77"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ucd-util."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "ucd-util";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "535c204ee4d8434478593480b8f86ab45ec9aae0e83c568ca81abf0fd0e88f86"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" = overridableMkRustCrate (profileName: rec {
    name = "unicase";
    version = "2.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "50f37be617794602aabbeee0be4f259dc1778fabe05e2d67ee8f79326d5cb4f6"; };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.1" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".unicode-bdd."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "unicode-bdd";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/unicode-table-generator");
    dependencies = {
      ucd_parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ucd-parse."0.1.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "unicode-bidi";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "49f2bd0c6468a8230e1db229cff8029217cf623c767ea5d60bfbd42729ea54d5"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.11" = overridableMkRustCrate (profileName: rec {
    name = "unicode-normalization";
    version = "0.1.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b561e267b2326bb4cebfc0ef9e68355c7abe6c6f522aeac2f5bf95d56c59bdcf"; };
    dependencies = {
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-script."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "unicode-script";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5b2c5c29e805da6817f5af6a627d65adb045cebf05cccd5a3493d6109454391c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-security."0.0.2" = overridableMkRustCrate (profileName: rec {
    name = "unicode-security";
    version = "0.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c49d35967fa037b881acc34ef717c38c4b5560eba10e3685271b3f530bb19634"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      unicode_script = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-script."0.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "unicode-segmentation";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e83e153d1053cbb5a118eeff7fd5be06ed99153f00dbcd8ae310c5fb2b22edc0"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "unicode-width";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7007dbd421b92cc6e28410fe7362e2e0a2503394908f417b68ec8d1c364c4e20"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "default" ]
      [ "rustc-dep-of-std" ]
      [ "std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
      std = rustPackages."unknown".rustc-std-workspace-std."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "unicode-xid";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "unicode-xid";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "826e7639553986605ec5979c7dd957c7895e93eabed50ab2ffa7f6128a75097c"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "unicode_categories";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e"; };
  });
  
  "unknown".unstable-book-gen."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "unstable-book-gen";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/unstable-book-gen");
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.6" { inherit profileName; };
      tidy = rustPackages."unknown".tidy."0.1.0" { inherit profileName; };
    };
  });
  
  "unknown".unwind."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "unwind";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/libunwind");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "std/llvm-libunwind" || rootFeatures' ? "test/llvm-libunwind" || rootFeatures' ? "unwind/llvm-libunwind") "llvm-libunwind")
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.50" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".url."1.7.2" = overridableMkRustCrate (profileName: rec {
    name = "url";
    version = "1.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dd4e7c0d531266369519a4aa4f399d748bd37043b00bde1e4ff1f60a120b355a"; };
    dependencies = {
      idna = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.1.5" { inherit profileName; };
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".url."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "url";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "75b414f6c464c879d7f9babf951f23bc3743fb7313c081b2e6ca719067ea9d61"; };
    features = builtins.concatLists [
      [ "serde" ]
    ];
    dependencies = {
      idna = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.2.0" { inherit profileName; };
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.99" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".utf-8."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "utf-8";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f1262dfab4c30d5cb7c07026be00ee343a6cf5027fdc0104a9160f354e5db75c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".utf8-ranges."1.0.2" = overridableMkRustCrate (profileName: rec {
    name = "utf8-ranges";
    version = "1.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "796f7e48bef87609f7ade7e06495a87d5cd06c7866e6a5cbfceffc558a243737"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "utf8parse";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8772a4ccbb4e89959023bc5b7cb8623a795caa7092d99f3aa9501b9484d4557d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".uuid."0.7.4" = overridableMkRustCrate (profileName: rec {
    name = "uuid";
    version = "0.7.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "90dbc611eb48397705a6b0f6e917da23ae517e4d127123d2cf7674206627d32a"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "default")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "rand")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "std")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "v4")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "rand" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.6.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.8" = overridableMkRustCrate (profileName: rec {
    name = "vcpkg";
    version = "0.2.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3fc439f2794e98976c88a2a2dafce96b930fe8010b0a256b3c2199a773933168"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".vec_map."0.8.1" = overridableMkRustCrate (profileName: rec {
    name = "vec_map";
    version = "0.8.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "05c78687fb1a80548ae3250346c3db86a80a7cdd77bda190189f2d0a0987c81a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".vergen."3.0.4" = overridableMkRustCrate (profileName: rec {
    name = "vergen";
    version = "3.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6aba5e34f93dc7051dfad05b98a18e9156f27e7b431fe1d2398cb6061c0a1dba"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.6" { inherit profileName; };
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" { inherit profileName; };
    };
    buildDependencies = {
      chrono = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.6" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.1" = overridableMkRustCrate (profileName: rec {
    name = "version_check";
    version = "0.9.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "078775d0255232fb988e6fccf26ddc9d1ac274299aaedcedce21c6f72cc533ce"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".vte."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "vte";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4f42f536e22f7fcbb407639765c8fd78707a33109301f834a594758bedd6e8cf"; };
    dependencies = {
      utf8parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".walkdir."2.2.7" = overridableMkRustCrate (profileName: rec {
    name = "walkdir";
    version = "2.2.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9d9d7ed3431229a144296213105a390676cc49c9b6a72bd19f3176c98e129fa1"; };
    dependencies = {
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.4" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".want."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "want";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b6395efa4784b027708f7451087e647ec73cc74f5d9bc2e418404248d679a230"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.28" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.8" { inherit profileName; };
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "try_lock" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".try-lock."0.2.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasi."0.9.0+wasi-snapshot-preview1" = overridableMkRustCrate (profileName: rec {
    name = "wasi";
    version = "0.9.0+wasi-snapshot-preview1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "default" ]
      [ "rustc-dep-of-std" ]
      [ "rustc-std-workspace-alloc" ]
      [ "std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.25" { inherit profileName; };
      rustc_std_workspace_alloc = rustPackages."unknown".rustc-std-workspace-alloc."1.99.0" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" = overridableMkRustCrate (profileName: rec {
    name = "winapi";
    version = "0.2.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" = overridableMkRustCrate (profileName: rec {
    name = "winapi";
    version = "0.3.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8093091eeb260906a183e6ae1abdba2ef5ef2257a21801128899c3fc699229c6"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc") "accctrl")
      (lib.optional (rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc") "aclapi")
      [ "basetsd" ]
      [ "consoleapi" ]
      [ "debugapi" ]
      [ "errhandlingapi" ]
      [ "fileapi" ]
      [ "handleapi" ]
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "impl-debug")
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "impl-default")
      [ "ioapiset" ]
      [ "jobapi" ]
      [ "jobapi2" ]
      [ "knownfolders" ]
      [ "libloaderapi" ]
      [ "lmcons" ]
      [ "memoryapi" ]
      [ "minschannel" ]
      [ "minwinbase" ]
      [ "minwindef" ]
      [ "namedpipeapi" ]
      [ "ntdef" ]
      [ "ntsecapi" ]
      [ "ntstatus" ]
      [ "objbase" ]
      [ "processenv" ]
      [ "processthreadsapi" ]
      [ "profileapi" ]
      [ "psapi" ]
      [ "schannel" ]
      [ "securitybaseapi" ]
      [ "shellapi" ]
      [ "shlobj" ]
      [ "sspi" ]
      [ "std" ]
      [ "synchapi" ]
      [ "sysinfoapi" ]
      [ "threadpoollegacyapiset" ]
      [ "timezoneapi" ]
      [ "userenv" ]
      [ "winbase" ]
      [ "wincon" ]
      [ "wincrypt" ]
      [ "winerror" ]
      [ "winioctl" ]
      [ "winnt" ]
      (lib.optional (rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck") "winreg")
      [ "winsock2" ]
      [ "ws2def" ]
      [ "ws2ipdef" ]
      [ "ws2tcpip" ]
    ];
    dependencies = {
      ${ if hostPlatform.config == "i686-pc-windows-gnu" then "winapi_i686_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-pc-windows-gnu" then "winapi_x86_64_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "winapi-build";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "winapi-util";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7168bab6e1daee33b4557efd0e95d5ca70a03706d39fa5f3fe7a236f584b03c9"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wincolor."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "wincolor";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "561ed901ae465d6185fa7864d63fbd5720d0ef718366c9a4dc83cf6170d7e9ba"; };
    dependencies = {
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
      winapi_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winreg."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "winreg";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b2986deb581c4fe11b621998a5e53361efe6b48a151178d0cd9eeffa4dc6acc9"; };
    dependencies = {
      ${ if rootFeatures' ? "rustbook/linkcheck" || rootFeatures' ? "rustbook/mdbook-linkcheck" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ws2_32-sys."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "ws2_32-sys";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e"; };
    dependencies = {
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
    };
    buildDependencies = {
      build = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".xattr."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "xattr";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "244c3741f4240ef46274860397c7c74e50eb23624996930e484c16679633a54c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "unsupported" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.66" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".xz2."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "xz2";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "df8bf41d3030c3577c9458fd6640a05afbf43b150d0b531b16bd77d3f794f27a"; };
    dependencies = {
      lzma_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lzma-sys."0.1.14" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "yaml-rust";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e66366e18dc58b46801afbf2ca7661a9f59cc8c5962c29892b6039b4f86fa992"; };
  });
  
}
