# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.

args@{
  release ? true,
  rootFeatures ? [
    "bootstrap/default"
    "build_helper/default"
    "rustc-main/default"
    "rustc_codegen_ssa/default"
    "rustc_apfloat/default"
    "rustc_ast/default"
    "rustc_data_structures/default"
    "rustc_graphviz/default"
    "rustc_index/default"
    "rustc_macros/default"
    "rustc_serialize/default"
    "rustc_lexer/default"
    "rustc_span/default"
    "rustc_arena/default"
    "rustc_attr/default"
    "rustc_ast_pretty/default"
    "rustc_target/default"
    "rustc_errors/default"
    "rustc_feature/default"
    "rustc_session/default"
    "rustc_fs_util/default"
    "rustc_hir/default"
    "rustc_incremental/default"
    "rustc_middle/default"
    "rustc_query_system/default"
    "rustc_symbol_mangling/default"
    "rustc_driver/default"
    "rustc_error_codes/default"
    "rustc_hir_pretty/default"
    "rustc_interface/default"
    "rustc_ast_lowering/default"
    "rustc_ast_passes/default"
    "rustc_parse/default"
    "rustc_builtin_macros/default"
    "rustc_expand/default"
    "rustc_parse_format/default"
    "rustc_codegen_llvm/default"
    "rustc_llvm/default"
    "rustc_lint/default"
    "rustc_trait_selection/default"
    "rustc_infer/default"
    "rustc_metadata/default"
    "rustc_mir/default"
    "rustc_mir_build/default"
    "rustc_passes/default"
    "rustc_plugin_impl/default"
    "rustc_privacy/default"
    "rustc_typeck/default"
    "rustc_resolve/default"
    "rustc_traits/default"
    "rustc_ty/default"
    "rustc_save_analysis/default"
    "std/default"
    "alloc/default"
    "core/default"
    "panic_abort/default"
    "panic_unwind/default"
    "unwind/default"
    "profiler_builtins/default"
    "test/default"
    "proc_macro/default"
    "term/default"
    "cargotest2/default"
    "clippy/default"
    "clippy_lints/default"
    "rustc_tools_util/default"
    "clippy-mini-macro-test/default"
    "compiletest/default"
    "error_index_generator/default"
    "rustdoc/default"
    "linkchecker/default"
    "lint-docs/default"
    "rustbook/default"
    "unstable-book-gen/default"
    "tidy/default"
    "tier-check/default"
    "build-manifest/default"
    "remote-test-client/default"
    "remote-test-server/default"
    "installer/default"
    "rust-demangler/default"
    "cargo/default"
    "cargo-platform/default"
    "crates-io/default"
    "cargo-test-macro/default"
    "cargo-test-support/default"
    "rustdoc-tool/default"
    "rls/default"
    "rls-ipc/default"
    "rls-rustc/default"
    "rustfmt-nightly/default"
    "rustfmt-config_proc_macro/default"
    "miri/default"
    "cargo-miri/default"
    "rustdoc-themes/default"
    "unicode-bdd/default"
    "expand-yaml-anchors/default"
  ],
  rustPackages,
  buildRustPackages,
  hostPlatform,
  hostPlatformCpu ? null,
  hostPlatformFeatures ? [],
  target ? null,
  codegenOpts ? null,
  profileOpts ? null,
  mkRustCrate,
  rustLib,
  lib,
  workspaceSrc,
}:
let
  workspaceSrc = if args.workspaceSrc == null then ./. else args.workspaceSrc;
in let
  inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
  profilesByName = {
    release = builtins.fromTOML "[package.addr2line]\ndebug = 0\n\n[package.adler]\ndebug = 0\n\n[package.compiler_builtins]\ncodegen-units = 10000\ndebug-assertions = false\noverflow-checks = false\n\n[package.gimli]\ndebug = 0\n\n[package.miniz_oxide]\ndebug = 0\n\n[package.object]\ndebug = 0\n";
  };
  rootFeatures' = expandFeatures rootFeatures;
  overridableMkRustCrate = f:
    let
      drvs = genDrvsByProfile profilesByName ({ profile, profileName }: mkRustCrate ({ inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts; } // (f profileName)));
    in { compileMode ? null, profileName ? decideProfile compileMode release }:
      let drv = drvs.${profileName}; in if compileMode == null then drv else drv.override { inherit compileMode; };
in
{
  cargo2nixVersion = "0.11.0";
  workspace = {
    bootstrap = rustPackages.unknown.bootstrap."0.0.0";
    build_helper = rustPackages.unknown.build_helper."0.1.0";
    rustc-main = rustPackages.unknown.rustc-main."0.0.0";
    rustc_codegen_ssa = rustPackages.unknown.rustc_codegen_ssa."0.0.0";
    rustc_apfloat = rustPackages.unknown.rustc_apfloat."0.0.0";
    rustc_ast = rustPackages.unknown.rustc_ast."0.0.0";
    rustc_data_structures = rustPackages.unknown.rustc_data_structures."0.0.0";
    rustc_graphviz = rustPackages.unknown.rustc_graphviz."0.0.0";
    rustc_index = rustPackages.unknown.rustc_index."0.0.0";
    rustc_macros = rustPackages.unknown.rustc_macros."0.1.0";
    rustc_serialize = rustPackages.unknown.rustc_serialize."0.0.0";
    rustc_lexer = rustPackages.unknown.rustc_lexer."0.1.0";
    rustc_span = rustPackages.unknown.rustc_span."0.0.0";
    rustc_arena = rustPackages.unknown.rustc_arena."0.0.0";
    rustc_attr = rustPackages.unknown.rustc_attr."0.0.0";
    rustc_ast_pretty = rustPackages.unknown.rustc_ast_pretty."0.0.0";
    rustc_target = rustPackages.unknown.rustc_target."0.0.0";
    rustc_errors = rustPackages.unknown.rustc_errors."0.0.0";
    rustc_feature = rustPackages.unknown.rustc_feature."0.0.0";
    rustc_session = rustPackages.unknown.rustc_session."0.0.0";
    rustc_fs_util = rustPackages.unknown.rustc_fs_util."0.0.0";
    rustc_hir = rustPackages.unknown.rustc_hir."0.0.0";
    rustc_incremental = rustPackages.unknown.rustc_incremental."0.0.0";
    rustc_middle = rustPackages.unknown.rustc_middle."0.0.0";
    rustc_query_system = rustPackages.unknown.rustc_query_system."0.0.0";
    rustc_symbol_mangling = rustPackages.unknown.rustc_symbol_mangling."0.0.0";
    rustc_driver = rustPackages.unknown.rustc_driver."0.0.0";
    rustc_error_codes = rustPackages.unknown.rustc_error_codes."0.0.0";
    rustc_hir_pretty = rustPackages.unknown.rustc_hir_pretty."0.0.0";
    rustc_interface = rustPackages.unknown.rustc_interface."0.0.0";
    rustc_ast_lowering = rustPackages.unknown.rustc_ast_lowering."0.0.0";
    rustc_ast_passes = rustPackages.unknown.rustc_ast_passes."0.0.0";
    rustc_parse = rustPackages.unknown.rustc_parse."0.0.0";
    rustc_builtin_macros = rustPackages.unknown.rustc_builtin_macros."0.0.0";
    rustc_expand = rustPackages.unknown.rustc_expand."0.0.0";
    rustc_parse_format = rustPackages.unknown.rustc_parse_format."0.0.0";
    rustc_codegen_llvm = rustPackages.unknown.rustc_codegen_llvm."0.0.0";
    rustc_llvm = rustPackages.unknown.rustc_llvm."0.0.0";
    rustc_lint = rustPackages.unknown.rustc_lint."0.0.0";
    rustc_trait_selection = rustPackages.unknown.rustc_trait_selection."0.0.0";
    rustc_infer = rustPackages.unknown.rustc_infer."0.0.0";
    rustc_metadata = rustPackages.unknown.rustc_metadata."0.0.0";
    rustc_mir = rustPackages.unknown.rustc_mir."0.0.0";
    rustc_mir_build = rustPackages.unknown.rustc_mir_build."0.0.0";
    rustc_passes = rustPackages.unknown.rustc_passes."0.0.0";
    rustc_plugin_impl = rustPackages.unknown.rustc_plugin_impl."0.0.0";
    rustc_privacy = rustPackages.unknown.rustc_privacy."0.0.0";
    rustc_typeck = rustPackages.unknown.rustc_typeck."0.0.0";
    rustc_resolve = rustPackages.unknown.rustc_resolve."0.0.0";
    rustc_traits = rustPackages.unknown.rustc_traits."0.0.0";
    rustc_ty = rustPackages.unknown.rustc_ty."0.0.0";
    rustc_save_analysis = rustPackages.unknown.rustc_save_analysis."0.0.0";
    std = rustPackages.unknown.std."0.0.0";
    alloc = rustPackages.unknown.alloc."0.0.0";
    core = rustPackages.unknown.core."0.0.0";
    panic_abort = rustPackages.unknown.panic_abort."0.0.0";
    panic_unwind = rustPackages.unknown.panic_unwind."0.0.0";
    unwind = rustPackages.unknown.unwind."0.0.0";
    profiler_builtins = rustPackages.unknown.profiler_builtins."0.0.0";
    test = rustPackages.unknown.test."0.0.0";
    proc_macro = rustPackages.unknown.proc_macro."0.0.0";
    term = rustPackages.unknown.term."0.0.0";
    cargotest2 = rustPackages.unknown.cargotest2."0.1.0";
    clippy = rustPackages.unknown.clippy."0.0.212";
    clippy_lints = rustPackages.unknown.clippy_lints."0.0.212";
    rustc_tools_util = rustPackages.unknown.rustc_tools_util."0.2.0";
    clippy-mini-macro-test = rustPackages.unknown.clippy-mini-macro-test."0.2.0";
    compiletest = rustPackages.unknown.compiletest."0.0.0";
    error_index_generator = rustPackages.unknown.error_index_generator."0.0.0";
    rustdoc = rustPackages.unknown.rustdoc."0.0.0";
    linkchecker = rustPackages.unknown.linkchecker."0.1.0";
    lint-docs = rustPackages.unknown.lint-docs."0.1.0";
    rustbook = rustPackages.unknown.rustbook."0.1.0";
    unstable-book-gen = rustPackages.unknown.unstable-book-gen."0.1.0";
    tidy = rustPackages.unknown.tidy."0.1.0";
    tier-check = rustPackages.unknown.tier-check."0.1.0";
    build-manifest = rustPackages.unknown.build-manifest."0.1.0";
    remote-test-client = rustPackages.unknown.remote-test-client."0.1.0";
    remote-test-server = rustPackages.unknown.remote-test-server."0.1.0";
    installer = rustPackages.unknown.installer."0.0.0";
    rust-demangler = rustPackages.unknown.rust-demangler."0.0.0";
    cargo = rustPackages.unknown.cargo."0.49.0";
    cargo-platform = rustPackages.unknown.cargo-platform."0.1.1";
    crates-io = rustPackages.unknown.crates-io."0.31.1";
    cargo-test-macro = rustPackages.unknown.cargo-test-macro."0.1.0";
    cargo-test-support = rustPackages.unknown.cargo-test-support."0.1.0";
    rustdoc-tool = rustPackages.unknown.rustdoc-tool."0.0.0";
    rls = rustPackages.unknown.rls."1.41.0";
    rls-ipc = rustPackages.unknown.rls-ipc."0.1.0";
    rls-rustc = rustPackages.unknown.rls-rustc."0.6.0";
    rustfmt-nightly = rustPackages.unknown.rustfmt-nightly."1.4.24";
    rustfmt-config_proc_macro = rustPackages.unknown.rustfmt-config_proc_macro."0.2.0";
    miri = rustPackages.unknown.miri."0.1.0";
    cargo-miri = rustPackages.unknown.cargo-miri."0.1.0";
    rustdoc-themes = rustPackages.unknown.rustdoc-themes."0.1.0";
    unicode-bdd = rustPackages.unknown.unicode-bdd."0.1.0";
    expand-yaml-anchors = rustPackages.unknown.expand-yaml-anchors."0.1.0";
  };
  "registry+https://github.com/rust-lang/crates.io-index".addr2line."0.13.0" = overridableMkRustCrate (profileName: rec {
    name = "addr2line";
    version = "0.13.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1b6a2d3371669ab3ca9797670853d61402b03d0b4b9ebf33d677dfa720203072"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "alloc")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "compiler_builtins")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "core")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "rustc-dep-of-std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "compiler_builtins" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      gimli = rustPackages."registry+https://github.com/rust-lang/crates.io-index".gimli."0.22.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "alloc" else null } = rustPackages."unknown".rustc-std-workspace-alloc."1.99.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "core" else null } = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".adler."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "adler";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ee2a4ec343196209d6594e19543ae87a39f96d5534d7174822a3ad825dd6ed7e"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "compiler_builtins")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "core")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "rustc-dep-of-std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "compiler_builtins" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "core" else null } = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.13" = overridableMkRustCrate (profileName: rec {
    name = "aho-corasick";
    version = "0.7.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "043164d8ba5c4c3035fec9bbee8647c0261d788f3474306f93bb65901cae0e86"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
    };
  });
  
  "unknown".alloc."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "alloc";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/alloc");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "alloc/compiler-builtins-c" || rootFeatures' ? "std/compiler-builtins-c" || rootFeatures' ? "test/compiler-builtins-c") "compiler-builtins-c")
      (lib.optional (rootFeatures' ? "alloc/compiler-builtins-mem" || rootFeatures' ? "std/compiler-builtins-mem" || rootFeatures' ? "test/compiler-builtins-mem") "compiler-builtins-mem")
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
    devDependencies = {
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      rand_xorshift = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ammonia."3.1.0" = overridableMkRustCrate (profileName: rec {
    name = "ammonia";
    version = "3.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "89eac85170f4b3fb3dc5e442c1cfb036cb8eecf9dbbd431a161ffad15d90ea3b"; };
    dependencies = {
      html5ever = rustPackages."registry+https://github.com/rust-lang/crates.io-index".html5ever."0.25.1" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      maplit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maplit."1.0.2" { inherit profileName; };
      markup5ever_rcdom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".markup5ever_rcdom."0.1.0" { inherit profileName; };
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      tendril = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.1" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".annotate-snippets."0.6.1" = overridableMkRustCrate (profileName: rec {
    name = "annotate-snippets";
    version = "0.6.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c7021ce4924a3f25f802b2cccd1af585e39ea1a363a1aa2e72afe54b67a3a7a7"; };
    features = builtins.concatLists [
      [ "ansi_term" ]
      [ "default" ]
    ];
    dependencies = {
      ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".annotate-snippets."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "annotate-snippets";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d78ea013094e5ea606b1c05fe35f1dd7ea1eb1ea259908d040b25bd5ec677ee5"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "ansi_term";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.12.1" = overridableMkRustCrate (profileName: rec {
    name = "ansi_term";
    version = "0.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" = overridableMkRustCrate (profileName: rec {
    name = "anyhow";
    version = "1.0.32";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6b602bfe940d21c130f3895acd65221e8a61270debe89d628b9cb4e3ccb8569b"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arc-swap."0.4.7" = overridableMkRustCrate (profileName: rec {
    name = "arc-swap";
    version = "0.4.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4d25d88fd6b8041580a654f9d0c581a047baee2b3efee13275f2fc392fc75034"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.6" = overridableMkRustCrate (profileName: rec {
    name = "arrayref";
    version = "0.3.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a4c527152e37cf757a3f78aae5a06fbeefdb07ccc535c980a3208ee3060dd544"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "arrayvec";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cff77d8686867eceff3105329d4698d96c2391c176d5d03adc90c7389162b5b8"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" = overridableMkRustCrate (profileName: rec {
    name = "atty";
    version = "0.2.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.15" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "autocfg";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f8aac770f1885fd7e387acedd76065302551364496e46b3dd00860b2f8359b9d"; };
  });
  
  "unknown".backtrace."0.3.50" = overridableMkRustCrate (profileName: rec {
    name = "backtrace";
    version = "0.3.50";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/backtrace");
    features = builtins.concatLists [
      [ "addr2line" ]
      [ "default" ]
      [ "gimli-symbolize" ]
      [ "miniz_oxide" ]
      [ "object" ]
      [ "std" ]
    ];
    dependencies = {
      addr2line = rustPackages."registry+https://github.com/rust-lang/crates.io-index".addr2line."0.13.0" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      miniz_oxide = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.4.0" { inherit profileName; };
      object = rustPackages."registry+https://github.com/rust-lang/crates.io-index".object."0.20.0" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".base64."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "base64";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b41b7ea54a0c9d92199de89e20e58d49f02f8e699814ef3fdf266f6f748d15c7"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" = overridableMkRustCrate (profileName: rec {
    name = "bitflags";
    version = "1.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bitmaps."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "bitmaps";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "031043d04099746d8db04daf1fa424b2bc8bd69d92b25962dcde24da39ab64a2"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.12.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".blake2b_simd."0.5.10" = overridableMkRustCrate (profileName: rec {
    name = "blake2b_simd";
    version = "0.5.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d8fb2d74254a3a0b5cac33ac9f8ed0e44aa50378d9dbb2e5d83bd21ed1dc2c8a"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      arrayref = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.6" { inherit profileName; };
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" { inherit profileName; };
      constant_time_eq = rustPackages."registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.7.3" = overridableMkRustCrate (profileName: rec {
    name = "block-buffer";
    version = "0.7.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c0940dc441f31689269e10ac70eb1002a3a1d3ad1390e030043662eb7fe4688b"; };
    dependencies = {
      block_padding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-padding."0.1.5" { inherit profileName; };
      byte_tools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byte-tools."0.3.1" { inherit profileName; };
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
      generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.12.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "block-buffer";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4152116fd6e9dadb291ae18fc1ec3575ed6d84c29642d97890f4b4a3417297e4"; };
    dependencies = {
      generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".block-padding."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "block-padding";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fa79dedbb091f449f1f39e53edf88d5dbe95f895dae6135a8d7b881fb5af73f5"; };
    dependencies = {
      byte_tools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byte-tools."0.3.1" { inherit profileName; };
    };
  });
  
  "unknown".bootstrap."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "bootstrap";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/bootstrap");
    dependencies = {
      build_helper = rustPackages."unknown".build_helper."0.1.0" { inherit profileName; };
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { inherit profileName; };
      cmake = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.44" { inherit profileName; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.12" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      ignore = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ignore."0.4.16" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      merge = rustPackages."registry+https://github.com/rust-lang/crates.io-index".merge."0.1.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      opener = rustPackages."registry+https://github.com/rust-lang/crates.io-index".opener."0.4.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.43" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.7" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
    devDependencies = {
      pretty_assertions = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pretty_assertions."0.6.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bstr."0.2.13" = overridableMkRustCrate (profileName: rec {
    name = "bstr";
    version = "0.2.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "31accafdb70df7871592c058eca3985b71104e15ac32f64706022c58867da931"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
    };
  });
  
  "unknown".build-manifest."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "build-manifest";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/build-manifest");
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.16" { inherit profileName; };
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.2" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.3.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.9.1" { inherit profileName; };
      tar = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.29" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.7" { inherit profileName; };
    };
  });
  
  "unknown".build_helper."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "build_helper";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/build_helper");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".byte-tools."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "byte-tools";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e3b5ca7a04898ad4bcd41c90c5285445ff5b791899bb1b0abdd2a2aa791211d7"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytecount."0.6.0" = overridableMkRustCrate (profileName: rec {
    name = "bytecount";
    version = "0.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b0017894339f586ccb943b01b9555de56770c11cda818e7e3d8bd93f4ed7f46e"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "generic-simd")
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "packed_simd")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustfmt-nightly/generic-simd" then "packed_simd" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".packed_simd."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" = overridableMkRustCrate (profileName: rec {
    name = "byteorder";
    version = "1.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "08c48aae112d48ed9f069b33538ea9e3e90aa263cfa3d1c24309612b1f7472de"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.12" = overridableMkRustCrate (profileName: rec {
    name = "bytes";
    version = "0.4.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "206fdffcfa2df7cbe15601ef46c813fce0965eb3286db6b56c583b814b51c81c"; };
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
      iovec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytesize."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "bytesize";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "81a18687293a1546b67c246452202bbbf143d239cb43494cc163da14979082da"; };
  });
  
  "unknown".cargo."0.49.0" = overridableMkRustCrate (profileName: rec {
    name = "cargo";
    version = "0.49.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "cargo/deny-warnings") "deny-warnings")
      (lib.optional (rootFeatures' ? "cargo/openssl" || rootFeatures' ? "cargo/vendored-openssl") "openssl")
      (lib.optional (rootFeatures' ? "cargo/pretty-env-logger") "pretty-env-logger")
      (lib.optional (rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger") "pretty_env_logger")
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "vendored-openssl")
    ];
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
      bytesize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytesize."1.0.1" { inherit profileName; };
      cargo_platform = rustPackages."unknown".cargo-platform."0.1.1" { inherit profileName; };
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.3" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "darwin" then "core_foundation" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.0" { inherit profileName; };
      crates_io = rustPackages."unknown".crates-io."0.31.1" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      crypto_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crypto-hash."0.3.4" { inherit profileName; };
      curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl."0.4.31" { inherit profileName; };
      curl_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl-sys."0.4.34+curl-7.71.1" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.12" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.16" { inherit profileName; };
      ${ if hostPlatform.isWindows then "fwdansi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fwdansi."1.1.0" { inherit profileName; };
      git2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2."0.13.12" { inherit profileName; };
      git2_curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2-curl."0.14.0" { inherit profileName; };
      glob = rustPackages."registry+https://github.com/rust-lang/crates.io-index".glob."0.3.0" { inherit profileName; };
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.2" { inherit profileName; };
      home = rustPackages."registry+https://github.com/rust-lang/crates.io-index".home."0.5.3" { inherit profileName; };
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."2.0.1" { inherit profileName; };
      ignore = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ignore."0.4.16" { inherit profileName; };
      im_rc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".im-rc."15.0.0" { inherit profileName; };
      jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      lazycell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazycell."1.3.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      libgit2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.12.14+1.1.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.5" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      opener = rustPackages."registry+https://github.com/rust-lang/crates.io-index".opener."0.4.1" { inherit profileName; };
      ${ if rootFeatures' ? "cargo/openssl" || rootFeatures' ? "cargo/vendored-openssl" then "openssl" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.30" { inherit profileName; };
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger" then "pretty_env_logger" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pretty_env_logger."0.4.0" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      rustfix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustfix."0.5.1" { inherit profileName; };
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" { inherit profileName; };
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.10.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_ignored = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_ignored."0.1.2" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      shell_escape = rustPackages."registry+https://github.com/rust-lang/crates.io-index".shell-escape."0.1.5" { inherit profileName; };
      strip_ansi_escapes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strip-ansi-escapes."0.1.0" { inherit profileName; };
      tar = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.29" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.7" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
    devDependencies = {
      cargo_test_macro = buildRustPackages."unknown".cargo-test-macro."0.1.0" { profileName = "__noProfile"; };
      cargo_test_support = rustPackages."unknown".cargo-test-support."0.1.0" { inherit profileName; };
    };
    buildDependencies = {
      flate2 = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.16" { profileName = "__noProfile"; };
      tar = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.29" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".cargo-miri."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "cargo-miri";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/miri/cargo-miri");
    dependencies = {
      directories = rustPackages."registry+https://github.com/rust-lang/crates.io-index".directories."3.0.1" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      rustc_version = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
    };
    buildDependencies = {
      vergen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vergen."3.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".cargo-platform."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "cargo-platform";
    version = "0.1.1";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo/crates/cargo-platform");
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "unknown".cargo-test-macro."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "cargo-test-macro";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo/crates/cargo-test-macro");
  });
  
  "unknown".cargo-test-support."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "cargo-test-support";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo/crates/cargo-test-support");
    dependencies = {
      cargo = rustPackages."unknown".cargo."0.49.0" { inherit profileName; };
      cargo_test_macro = buildRustPackages."unknown".cargo-test-macro."0.1.0" { profileName = "__noProfile"; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.12" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.16" { inherit profileName; };
      git2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2."0.13.12" { inherit profileName; };
      glob = rustPackages."registry+https://github.com/rust-lang/crates.io-index".glob."0.3.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      remove_dir_all = rustPackages."registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.3" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      tar = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.29" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.8.2" = overridableMkRustCrate (profileName: rec {
    name = "cargo_metadata";
    version = "0.8.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "700b3731fd7d357223d0000f4dbf1808401b694609035c3c411fbc0cd375c426"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.11.1" = overridableMkRustCrate (profileName: rec {
    name = "cargo_metadata";
    version = "0.11.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "89fec17b16f1ac67908af82e47d0a90a7afd0e1827b181cd77504323d3263d35"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.10.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
    };
  });
  
  "unknown".cargotest2."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "cargotest2";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargotest");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" = overridableMkRustCrate (profileName: rec {
    name = "cc";
    version = "1.0.60";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ef611cc68ff783f18535d77ddd080185275713d852c4f5cbb6122c462a7a825c"; };
    features = builtins.concatLists [
      [ "jobserver" ]
      [ "parallel" ]
    ];
    dependencies = {
      jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "cfg-if";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".chalk-derive."0.29.0" = overridableMkRustCrate (profileName: rec {
    name = "chalk-derive";
    version = "0.29.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3a7f257e3bcdc56d8877ae31c012bd69fba0be66929d588e603905f2632c0c59"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      synstructure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".chalk-engine."0.29.0" = overridableMkRustCrate (profileName: rec {
    name = "chalk-engine";
    version = "0.29.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c43fcc7edf4d51b42f44ed50e2337bd90ddc8e088d0cd78a71db92a6f780f782"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      chalk_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-derive."0.29.0" { profileName = "__noProfile"; };
      chalk_ir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-ir."0.29.0" { inherit profileName; };
      chalk_solve = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-solve."0.29.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".chalk-ir."0.29.0" = overridableMkRustCrate (profileName: rec {
    name = "chalk-ir";
    version = "0.29.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "03a4050029ecb2b5a1ff3bfc64c39279179b294821ec2e8891a4a5c6e3a08db0"; };
    dependencies = {
      chalk_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-derive."0.29.0" { profileName = "__noProfile"; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".chalk-solve."0.29.0" = overridableMkRustCrate (profileName: rec {
    name = "chalk-solve";
    version = "0.29.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "828c1f80d4eaf681027cce02050c54a3c97370f81988d31bf2a56df54048746c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "tracing-full" ]
      [ "tracing-subscriber" ]
      [ "tracing-tree" ]
    ];
    dependencies = {
      chalk_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-derive."0.29.0" { profileName = "__noProfile"; };
      chalk_ir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-ir."0.29.0" { inherit profileName; };
      ena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ena."0.14.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      petgraph = rustPackages."registry+https://github.com/rust-lang/crates.io-index".petgraph."0.5.1" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.2.11" { inherit profileName; };
      tracing_tree = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-tree."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.15" = overridableMkRustCrate (profileName: rec {
    name = "chrono";
    version = "0.4.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "942f72db697d8767c22d46a598e01f2d3b475501ea43d0db4f16d90259182d0b"; };
    features = builtins.concatLists [
      [ "clock" ]
      [ "default" ]
      [ "std" ]
      [ "time" ]
    ];
    dependencies = {
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.43" { inherit profileName; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.43" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".clap."2.33.3" = overridableMkRustCrate (profileName: rec {
    name = "clap";
    version = "2.33.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "37e58ac78573c40708d45522f0d80fa2f01cc4f9b4e2bf749807255454312002"; };
    features = builtins.concatLists [
      [ "ansi_term" ]
      [ "atty" ]
      [ "color" ]
      [ "default" ]
      [ "strsim" ]
      [ "suggestions" ]
      [ "vec_map" ]
      [ "yaml" ]
      [ "yaml-rust" ]
    ];
    dependencies = {
      ${ if !hostPlatform.isWindows then "ansi_term" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      strsim = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.8.0" { inherit profileName; };
      textwrap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".textwrap."0.11.0" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
      vec_map = rustPackages."registry+https://github.com/rust-lang/crates.io-index".vec_map."0.8.2" { inherit profileName; };
      yaml_rust = rustPackages."registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.3.5" { inherit profileName; };
    };
  });
  
  "unknown".clippy."0.0.212" = overridableMkRustCrate (profileName: rec {
    name = "clippy";
    version = "0.0.212";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "clippy/deny-warnings") "deny-warnings")
      (lib.optional (rootFeatures' ? "clippy/integration") "integration")
      (lib.optional (rootFeatures' ? "clippy/integration" || rootFeatures' ? "clippy/tempfile") "tempfile")
    ];
    dependencies = {
      clippy_lints = rustPackages."unknown".clippy_lints."0.0.212" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      rustc_tools_util = rustPackages."unknown".rustc_tools_util."0.2.0" { inherit profileName; };
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.10.0" { inherit profileName; };
      ${ if rootFeatures' ? "clippy/integration" || rootFeatures' ? "clippy/tempfile" then "tempfile" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
    };
    devDependencies = {
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.11.1" { inherit profileName; };
      clippy_mini_macro_test = buildRustPackages."unknown".clippy-mini-macro-test."0.2.0" { profileName = "__noProfile"; };
      compiletest_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiletest_rs."0.5.0" { inherit profileName; };
      derive_new = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.8" { profileName = "__noProfile"; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      tester = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tester."0.7.0" { inherit profileName; };
    };
    buildDependencies = {
      rustc_tools_util = buildRustPackages."unknown".rustc_tools_util."0.2.0" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".clippy-mini-macro-test."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "clippy-mini-macro-test";
    version = "0.2.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy/mini-macro");
  });
  
  "unknown".clippy_lints."0.0.212" = overridableMkRustCrate (profileName: rec {
    name = "clippy_lints";
    version = "0.0.212";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy/clippy_lints");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "clippy_lints/deny-warnings") "deny-warnings")
    ];
    dependencies = {
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.11.1" { inherit profileName; };
      if_chain = rustPackages."registry+https://github.com/rust-lang/crates.io-index".if_chain."1.0.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      pulldown_cmark = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.8.0" { inherit profileName; };
      quine_mc_cluskey = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quine-mc_cluskey."0.2.4" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" { inherit profileName; };
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.10.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.7" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.13" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" = overridableMkRustCrate (profileName: rec {
    name = "cloudabi";
    version = "0.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f"; };
    features = builtins.concatLists [
      [ "bitflags" ]
      [ "default" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "cloudabi";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4344512281c643ae7638bbabc3af17a11307803ec8f0fcad9fae512a8bf36467"; };
    features = builtins.concatLists [
      [ "bitflags" ]
      [ "default" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.44" = overridableMkRustCrate (profileName: rec {
    name = "cmake";
    version = "0.1.44";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0e56268c17a6248366d66d4a47a3381369d068cce8409bb1716ed77ea32163bb"; };
    dependencies = {
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".colored."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "colored";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b3616f750b84d8f0de8a58bda93e08e2a81ad3f523089b05f1dffecab48c6cbd"; };
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".commoncrypto."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "commoncrypto";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d056a8586ba25a1e4d61cb090900e495952c7886786fc55f909ab2f819b69007"; };
    dependencies = {
      commoncrypto_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".commoncrypto-sys."0.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".commoncrypto-sys."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "commoncrypto-sys";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1fed34f46747aa73dfaa578069fd8279d2818ade2b55f38f22a9401c7f4083e2"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" = overridableMkRustCrate (profileName: rec {
    name = "compiler_builtins";
    version = "0.1.35";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e3fcd8aba10d17504c87ef12d4f62ef404c6a4703d16682a9eb5543e6cf24455"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "alloc/compiler-builtins-c" || rootFeatures' ? "std/compiler-builtins-c" || rootFeatures' ? "test/compiler-builtins-c") "c")
      (lib.optional (rootFeatures' ? "alloc/compiler-builtins-c" || rootFeatures' ? "std/compiler-builtins-c" || rootFeatures' ? "test/compiler-builtins-c") "cc")
      [ "compiler-builtins" ]
      [ "core" ]
      [ "default" ]
      (lib.optional (rootFeatures' ? "alloc/compiler-builtins-mem" || rootFeatures' ? "std/compiler-builtins-mem" || rootFeatures' ? "test/compiler-builtins-mem") "mem")
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "alloc/compiler-builtins-c" || rootFeatures' ? "std/compiler-builtins-c" || rootFeatures' ? "test/compiler-builtins-c" then "cc" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".compiletest."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "compiletest";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/compiletest");
    dependencies = {
      diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diff."0.1.12" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      glob = rustPackages."registry+https://github.com/rust-lang/crates.io-index".glob."0.3.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.5" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      rustfix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustfix."0.5.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".compiletest_rs."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "compiletest_rs";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9f737835bfbbe29ed1ff82d5137520338d7ed5bf1a1d4b9c1c7c58bb45b8fa29"; };
    features = builtins.concatLists [
      [ "tempfile" ]
      [ "tmp" ]
    ];
    dependencies = {
      diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diff."0.1.12" { inherit profileName; };
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.12" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.5" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      rustfix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustfix."0.5.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      tester = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tester."0.7.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "constant_time_eq";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "245097e9a4535ee1e3e3931fcfcd55a796a44c643e8596ff6566d68f09b87bbc"; };
  });
  
  "unknown".core."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "core";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/core");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "core/panic_immediate_abort" || rootFeatures' ? "std/panic_immediate_abort" || rootFeatures' ? "test/panic_immediate_abort") "panic_immediate_abort")
    ];
    devDependencies = {
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3b5ed8e7e76c45974e15e41bfa8d5b0483cd90191639e01d8f5f1e606299d3fb"; };
    features = builtins.concatLists [
      [ "mac_os_10_7_support" ]
    ];
    dependencies = {
      core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation-sys";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9a21fa21941700a3cd8fcb4091f361a6a712fac632f85d9f487cc892045d55c6"; };
    features = builtins.concatLists [
      [ "mac_os_10_7_support" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cpuid-bool."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "cpuid-bool";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8aebca1129a03dc6dc2b127edd729435bbc4a37e1d5f4d7513165089ceb02634"; };
  });
  
  "unknown".crates-io."0.31.1" = overridableMkRustCrate (profileName: rec {
    name = "crates-io";
    version = "0.31.1";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/cargo/crates/crates-io");
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" { inherit profileName; };
      curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl."0.4.31" { inherit profileName; };
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "crc32fast";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ba125de2af0df55319f41944744ad91c71113bf74a4646efff39afe1f6842db1"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.4" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-channel";
    version = "0.4.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b153fe7cbef478c567df0f972e02e6d736db11affe43dfc9c56a9374d1adfb87"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      maybe_uninit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-deque";
    version = "0.7.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9f02af974daeee82218205558e51ec8768b48cf524bd01d550abe5573a608285"; };
    dependencies = {
      crossbeam_epoch = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.8.2" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      maybe_uninit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.8.2" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-epoch";
    version = "0.8.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "058ed274caafc1f60c4997b5fc07bf7dc7cca454af7c6e81edffe5f33f70dace"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      maybe_uninit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" { inherit profileName; };
      memoffset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.5.5" { inherit profileName; };
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-queue";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7c979cd6cfe72335896575c6b5688da489e420d36a27a0b9eb0c73db574b4a4b"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-queue";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "774ba60a54c213d409d5353bda12d49cd68d14e45036a285234c8d6f91f92570"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      maybe_uninit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.6" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-utils";
    version = "0.6.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "04973fa96e96579258a5091af6003abde64af786b860f18622b82e026cca60e6"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-utils";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c3c7c73a2d1e9fc0886a08b93e98eb643461230d5f1925e4036204d5f2e261a8"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "nightly" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crypto-hash."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "crypto-hash";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8a77162240fd97248d19a564a565eb563a3f592b386e4136fb300909e67dddca"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "commoncrypto" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".commoncrypto."0.2.0" { inherit profileName; };
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.3.2" { inherit profileName; };
      ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "openssl" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.30" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ctor."0.1.15" = overridableMkRustCrate (profileName: rec {
    name = "ctor";
    version = "0.1.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "39858aa5bac06462d4dd4b9164848eb81ffc4aa5c479746393598fd193afa227"; };
    dependencies = {
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".curl."0.4.31" = overridableMkRustCrate (profileName: rec {
    name = "curl";
    version = "0.4.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9447ad28eee2a5cfb031c329d46bef77487244fff6a724b378885b8691a35f78"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "http2" ]
      [ "openssl-probe" ]
      [ "openssl-sys" ]
      [ "ssl" ]
    ];
    dependencies = {
      curl_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl-sys."0.4.34+curl-7.71.1" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_probe" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.58" { inherit profileName; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "schannel" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.19" { inherit profileName; };
      socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.12" { inherit profileName; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".curl-sys."0.4.34+curl-7.71.1" = overridableMkRustCrate (profileName: rec {
    name = "curl-sys";
    version = "0.4.34+curl-7.71.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ad4eff0be6985b7e709f64b5a541f700e9ad1407190a29f4884319eb663ed1d6"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "http2" ]
      [ "libnghttp2-sys" ]
      [ "openssl-sys" ]
      [ "ssl" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      libnghttp2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libnghttp2-sys."0.1.4+1.41.0" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.1.2" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.58" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.18" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.10" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".datafrog."2.0.1" = overridableMkRustCrate (profileName: rec {
    name = "datafrog";
    version = "2.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a0afaad2b26fa326569eb264b1363e8ae3357618c43982b3f285f0774ce76b69"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.8" = overridableMkRustCrate (profileName: rec {
    name = "derive-new";
    version = "0.5.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "71f31892cd5c62e414316f2963c5689242c43d8e7bbcaaeca97e5e28c95d91d9"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" = overridableMkRustCrate (profileName: rec {
    name = "derive_more";
    version = "0.99.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "298998b1cf6b5b2c8a7b023dfd45821825ce3ba8a8af55c921a0e734e4653f76"; };
    features = builtins.concatLists [
      [ "add" ]
      [ "add_assign" ]
      [ "as_mut" ]
      [ "as_ref" ]
      [ "constructor" ]
      [ "default" ]
      [ "deref" ]
      [ "deref_mut" ]
      [ "display" ]
      [ "error" ]
      [ "from" ]
      [ "from_str" ]
      [ "index" ]
      [ "index_mut" ]
      [ "into" ]
      [ "into_iterator" ]
      [ "iterator" ]
      [ "mul" ]
      [ "mul_assign" ]
      [ "not" ]
      [ "sum" ]
      [ "try_into" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".diff."0.1.12" = overridableMkRustCrate (profileName: rec {
    name = "diff";
    version = "0.1.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0e25ea47919b1560c4e3b7fe0aaab9becf5b84a10325ddf7db0f0ba5e1026499"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "difference";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".digest."0.8.1" = overridableMkRustCrate (profileName: rec {
    name = "digest";
    version = "0.8.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f3d0c8c8752312f9713efd397ff63acb9f85585afbf179282e720e7704954dd5"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.12.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".digest."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "digest";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d3dd60d1080a57a05ab032377049e0591415d2b31afd7028356dbf3cc6dcb066"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "std" ]
    ];
    dependencies = {
      generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".directories."3.0.1" = overridableMkRustCrate (profileName: rec {
    name = "directories";
    version = "3.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f8fed639d60b58d0f53498ab13d26f621fd77569cc6edb031f4cc36a2ad9da0f"; };
    dependencies = {
      dirs_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.3.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dirs."2.0.2" = overridableMkRustCrate (profileName: rec {
    name = "dirs";
    version = "2.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "13aea89a5c93364a98e9b37b2fa237effbb694d5cfe01c5b70941f7eb087d5e3"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      dirs_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.3.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "dirs-sys";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8e93d7f5705de3e49895a2b5e0b8855a1c27f080192ae9c32a6432d50741a57a"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "redox_users" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_users."0.3.4" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dlmalloc."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "dlmalloc";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "35055b1021724f4eb5262eb49130eebff23fc59fc5a14160e05faad8eeb36673"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.cpu.name == "wasm32") then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "either";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cd56b59865bce947ac5958779cfa508f6c3b9497cc762b7e24a12d11ccde2c4f"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".elasticlunr-rs."2.3.9" = overridableMkRustCrate (profileName: rec {
    name = "elasticlunr-rs";
    version = "2.3.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "35622eb004c8f0c5e7e2032815f3314a93df0db30a1ce5c94e62c1ecc81e22b9"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      strum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.18.0" { inherit profileName; };
      strum_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.18.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ena."0.14.0" = overridableMkRustCrate (profileName: rec {
    name = "ena";
    version = "0.14.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d7402b94a93c24e742487327a7cd839dc9d36fec9de9fb25b09f2dae459f36c3"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".env_logger."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "env_logger";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aafcde04e90a5226a6443b7aabdb016ba2f8307c847d524724bd9b346dd1a2d3"; };
    features = builtins.concatLists [
      [ "atty" ]
      [ "default" ]
      [ "humantime" ]
      [ "regex" ]
      [ "termcolor" ]
    ];
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."1.3.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "env_logger";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "44533bbbb3bb3c1fa17d9f2e4e38bbbaf8396ba82193c4cb1b6445d711445d36"; };
    features = builtins.concatLists [
      [ "atty" ]
      [ "default" ]
      [ "humantime" ]
      [ "regex" ]
      [ "termcolor" ]
    ];
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."1.3.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" { inherit profileName; };
    };
  });
  
  "unknown".error_index_generator."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "error_index_generator";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/error_index_generator");
    dependencies = {
      rustdoc = rustPackages."unknown".rustdoc."0.0.0" { inherit profileName; };
    };
    buildDependencies = {
      walkdir = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".expand-yaml-anchors."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "expand-yaml-anchors";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/expand-yaml-anchors");
    dependencies = {
      yaml_merge_keys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".yaml-merge-keys."0.4.1" { inherit profileName; };
      yaml_rust = rustPackages."registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.4.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".expect-test."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "expect-test";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ceb96f3eaa0d4e8769c52dacfd4eb60183b817ed2f176171b3c691d5022b0f2e"; };
    dependencies = {
      difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".failure."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "failure";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d32e9bd16cc02eae7db7ef620b392808b89f6a5e16bb3497d159c6b92a0f4f86"; };
    features = builtins.concatLists [
      [ "backtrace" ]
      [ "default" ]
      [ "derive" ]
      [ "failure_derive" ]
      [ "std" ]
    ];
    dependencies = {
      backtrace = rustPackages."unknown".backtrace."0.3.50" { inherit profileName; };
      failure_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.8" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "failure_derive";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aa4da3c766cd7a0db8242e326e9e4e081edd567072893ed320008189715366a4"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      synstructure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fake-simd."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "fake-simd";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e88a8acf291dafb59c2d96e8f59828f3838bb1a70398823ade51a84de6a6deed"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.12" = overridableMkRustCrate (profileName: rec {
    name = "filetime";
    version = "0.2.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3ed85775dcc68644b5c950ac06a2b23768d3bc9390464151aaf27136998dcf9e"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fixedbitset."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "fixedbitset";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "37ab347416e802de484e4d03c7316c48f1ecb56574dfd4a46a80f173ce1de04d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.16" = overridableMkRustCrate (profileName: rec {
    name = "flate2";
    version = "1.0.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "68c90b0fc46cf89d227cc78b40e494ff81287a92dd07631e5af0d06fe3cf885e"; };
    features = builtins.concatLists [
      [ "any_zlib" ]
      [ "default" ]
      [ "libz-sys" ]
      [ "miniz_oxide" ]
      [ "rust_backend" ]
      [ "zlib" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crc32fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.2.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.1.2" { inherit profileName; };
      miniz_oxide = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" = overridableMkRustCrate (profileName: rec {
    name = "fnv";
    version = "1.0.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "foreign-types";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1"; };
    dependencies = {
      foreign_types_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "foreign-types-shared";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fortanix-sgx-abi."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "fortanix-sgx-abi";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c56c422ef86062869b2d57ae87270608dc5929969dd130a6e248979cf4fb6ca6"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fs_extra."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "fs_extra";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5f2a4a2034423744d2cc7ca2068453168dcdb82c438419e639a26bd87839c674"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fst."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "fst";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "927fb434ff9f0115b215dc0efd2e4fbdd7448522a92a1aa37c77d6a2f8f1ebd6"; };
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "fuchsia-zircon";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      fuchsia_zircon_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "fuchsia-zircon-sys";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".futf."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "futf";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7c9c1ce3fa9336301af935ab852c437817d14cd33690446569392e65170aac3b"; };
    dependencies = {
      mac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; };
      debug_unreachable = rustPackages."registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" = overridableMkRustCrate (profileName: rec {
    name = "futures";
    version = "0.1.29";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1b980f2816d6ee8673b6517b52cb0e808a180efc92e5c19d02cdda79066703ef"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
      [ "with-deprecated" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fwdansi."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "fwdansi";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "08c1f5787fe85505d1f7777268db5103d80a7a374d2316a7ce262e57baf8f208"; };
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".generic-array."0.12.3" = overridableMkRustCrate (profileName: rec {
    name = "generic-array";
    version = "0.12.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c68f0274ae0e023facc3c97b2e00f076be70e254bc851d972503b328db79b2ec"; };
    dependencies = {
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.12.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.4" = overridableMkRustCrate (profileName: rec {
    name = "generic-array";
    version = "0.14.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "501466ecc8a30d1d3b7fc9229b122b2ce8ed6e9d9223f1138d4babb253e51817"; };
    dependencies = {
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.12.0" { inherit profileName; };
    };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" = overridableMkRustCrate (profileName: rec {
    name = "getopts";
    version = "0.2.21";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5"; };
    features = builtins.concatLists [
      [ "core" ]
      [ "rustc-dep-of-std" ]
      [ "std" ]
    ];
    dependencies = {
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
      std = rustPackages."unknown".rustc-std-workspace-std."1.99.0" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" = overridableMkRustCrate (profileName: rec {
    name = "getrandom";
    version = "0.1.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7abc8dd8451921606d809ba32e95b6111925cd2906060d2dcc29c070220503eb"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.9.0+wasi-snapshot-preview1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "getrandom";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ee8025cf36f917e6a52cce185b7c7177689b838b7ec138364e50cc2277a56cf4"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.9.0+wasi-snapshot-preview1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".gimli."0.22.0" = overridableMkRustCrate (profileName: rec {
    name = "gimli";
    version = "0.22.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aaf91faf136cb47367fa430cd46e37a788775e7fa104f8b4bcb3861dc389b724"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "alloc")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "compiler_builtins")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "core")
      [ "read" ]
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "rustc-dep-of-std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "compiler_builtins" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "alloc" else null } = rustPackages."unknown".rustc-std-workspace-alloc."1.99.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "core" else null } = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".git2."0.13.12" = overridableMkRustCrate (profileName: rec {
    name = "git2";
    version = "0.13.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca6f1a0238d7f8f8fd5ee642f4ebac4dbc03e03d1f78fbe7a3ede35dcf7e2224"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "https" ]
      [ "openssl-probe" ]
      [ "openssl-sys" ]
      [ "ssh" ]
      [ "ssh_key_from_memory" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      libgit2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.12.14+1.1.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_probe" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" { inherit profileName; };
      ${ if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.58" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".git2-curl."0.14.0" = overridableMkRustCrate (profileName: rec {
    name = "git2-curl";
    version = "0.14.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "502d532a2d06184beb3bc869d4d90236e60934e3382c921b203fa3c33e212bd7"; };
    dependencies = {
      curl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".curl."0.4.31" { inherit profileName; };
      git2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2."0.13.12" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".glob."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "glob";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9b919933a397b79c37e33b77bb2aa3dc8eb6e165ad809e58ff75bc7db2e34574"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".globset."0.4.5" = overridableMkRustCrate (profileName: rec {
    name = "globset";
    version = "0.4.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7ad1da430bd7281dde2576f44c84cc3f0f7b475e7202cd503042dff01a8c8120"; };
    dependencies = {
      aho_corasick = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.13" { inherit profileName; };
      bstr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bstr."0.2.13" { inherit profileName; };
      fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".handlebars."3.4.0" = overridableMkRustCrate (profileName: rec {
    name = "handlebars";
    version = "3.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5deefd4816fb852b1ff3cb48f6c41da67be2d0e1d20b26a7a3b076da11f064b1"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.1.3" { inherit profileName; };
      pest_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pest_derive."2.1.0" { profileName = "__noProfile"; };
      quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."2.0.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "hashbrown";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "00d63df3d41950fb462ed38308eea019113ad1508da725bbedcd0fa5a85ef5f7"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "compiler_builtins" ]
      [ "core" ]
      [ "nightly" ]
      [ "raw" ]
      [ "rustc-dep-of-std" ]
      [ "rustc-internal-api" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      alloc = rustPackages."unknown".rustc-std-workspace-alloc."1.99.0" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".heck."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "heck";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205"; };
    dependencies = {
      unicode_segmentation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.15" = overridableMkRustCrate (profileName: rec {
    name = "hermit-abi";
    version = "0.1.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3deed196b6e7f9e44a2ae8d94225d80302d81208b1bb673fd21fe634645c85a9"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "default" ]
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hex."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "hex";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "805026a5d0141ffc30abb3be3173848ad46a1b1664fe632428479619a3644d77"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hex."0.4.2" = overridableMkRustCrate (profileName: rec {
    name = "hex";
    version = "0.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "644f9158b2f133fd50f5fb3242878846d9eb792e445c893805ff0e3824006e35"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".home."0.5.3" = overridableMkRustCrate (profileName: rec {
    name = "home";
    version = "0.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2456aef2e6b6a9784192ae780c0f15bc57df0e918585282325e8c8ac27737654"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".html5ever."0.25.1" = overridableMkRustCrate (profileName: rec {
    name = "html5ever";
    version = "0.25.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aafcf38a1a36118242d29b92e1b08ef84e67e4a5ed06e0a80be20e6a32bfed6b"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      mac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; };
      markup5ever = rustPackages."registry+https://github.com/rust-lang/crates.io-index".markup5ever."0.10.0" { inherit profileName; };
    };
    buildDependencies = {
      proc_macro2 = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { profileName = "__noProfile"; };
      quote = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { profileName = "__noProfile"; };
      syn = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".humantime."1.3.0" = overridableMkRustCrate (profileName: rec {
    name = "humantime";
    version = "1.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "df004cfca50ef23c36850aaaa59ad52cc70d0e90243c3c7737a4dd32dc7a3c4f"; };
    dependencies = {
      quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".humantime."2.0.1" = overridableMkRustCrate (profileName: rec {
    name = "humantime";
    version = "2.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3c1ad908cc71012b7bea4d0c53ba96a8cba9962f048fa68d143376143d863b7a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".idna."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "idna";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "38f09e0f0b1fb55fdee1f17470ad800da77af5186a1a76c026b679358b7e844e"; };
    dependencies = {
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      unicode_bidi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.13" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".idna."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "idna";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "02e2673c30ee86b5b96a9cb52ad15718aa1f966f5ab9ad54a8b95d5ca33120a9"; };
    dependencies = {
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      unicode_bidi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.13" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".if_chain."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "if_chain";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c3360c7b59e5ffa2653671fb74b4741a5d343c03f331c0a4aeda42b5c2b0ec7d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ignore."0.4.16" = overridableMkRustCrate (profileName: rec {
    name = "ignore";
    version = "0.4.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "22dcbf2a4a289528dbef21686354904e1c694ac642610a9bff9e7df730d9ec72"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      globset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".globset."0.4.5" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" { inherit profileName; };
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".im-rc."15.0.0" = overridableMkRustCrate (profileName: rec {
    name = "im-rc";
    version = "15.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3ca8957e71f04a205cb162508f9326aea04676c8dfd0711220190d6b83664f3f"; };
    dependencies = {
      bitmaps = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitmaps."2.1.0" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
      rand_xoshiro = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_xoshiro."0.4.0" { inherit profileName; };
      sized_chunks = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sized-chunks."0.6.2" { inherit profileName; };
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.12.0" { inherit profileName; };
    };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".indexmap."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "indexmap";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "55e2e4c765aa53a0424761bf9f41aa7a6ac1efa87238f59560640e27fca028f2"; };
    dependencies = {
      hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.9.0" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".installer."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "installer";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rust-installer");
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" { inherit profileName; };
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.3" { inherit profileName; };
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.16" { inherit profileName; };
      ${ if hostPlatform.isWindows then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.3.1" { inherit profileName; };
      remove_dir_all = rustPackages."registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.3" { inherit profileName; };
      tar = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.29" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      xz2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xz2."0.1.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".instant."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "instant";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5b141fdc7836c525d4d594027d318c84161ca17aaf8113ab1f81ab93ae897485"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "iovec";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b2b3ea6ff95e175473f8ffe6a7eb7c00d054240321b84c57051175fe3c1e075e"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.2" = overridableMkRustCrate (profileName: rec {
    name = "itertools";
    version = "0.8.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f56a2d0bc861f9165be4eb3442afd3c236d8a98afd426f65d92324ae1091a484"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "itertools";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "284f18f85651fe11e8a991b2adb42cb078325c996ed026d994719efcfca1d54b"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_std" ]
    ];
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.6" = overridableMkRustCrate (profileName: rec {
    name = "itoa";
    version = "0.4.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dc6f3ad7b9d11a0c00842ff8de1b60ee58661048eb8049ed33c73594f359d7e6"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jemalloc-sys."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "jemalloc-sys";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0d3b9f3f5c9b31aa0f5ed3260385ac205db665baa41d49bb8338008ae94ede45"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys") "background_threads_runtime_support")
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys") "default")
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys") "unprefixed_malloc_on_supported_platforms")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys" then "cc" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys" then "fs_extra" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".fs_extra."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" = overridableMkRustCrate (profileName: rec {
    name = "jobserver";
    version = "0.1.21";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5c71313ebb9439f74b00d9d2dcec36440beaf57a6aa0623068441dd7cd81a7f2"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".json."0.11.15" = overridableMkRustCrate (profileName: rec {
    name = "json";
    version = "0.11.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "92c245af8786f6ac35f95ca14feca9119e71339aaab41e878e7cdd655c97e9e5"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-client-transports."14.2.1" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-client-transports";
    version = "14.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2773fa94a2a1fd51efb89a8f45b8861023dbb415d18d3c9235ae9388d780f9ec"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "ipc")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "jsonrpc-server-utils")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "parity-tokio-ipc")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "tokio")
    ];
    dependencies = {
      failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.8" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      jsonrpc_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.2.0" { inherit profileName; };
      jsonrpc_pubsub = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-pubsub."14.2.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc" then "jsonrpc_server_utils" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-server-utils."14.2.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc" then "parity_tokio_ipc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parity-tokio-ipc."0.2.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."1.7.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.2.0" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-core";
    version = "14.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a0747307121ffb9703afd93afbd0fb4f854c38fb873f2c8b90e0e902f27c7b62"; };
    dependencies = {
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core-client."14.2.0" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-core-client";
    version = "14.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "34221123bc79b66279a3fde2d3363553835b43092d629b34f2e760c44dc94713"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "ipc")
    ];
    dependencies = {
      jsonrpc_client_transports = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-client-transports."14.2.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-derive."14.2.1" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-derive";
    version = "14.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0fadf6945e227246825a583514534d864554e9f23d80b3c77d034b10983db5ef"; };
    dependencies = {
      proc_macro_crate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."0.1.5" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-ipc-server."14.0.3" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-ipc-server";
    version = "14.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b579cd0840d7db3ebaadf52f6f31ec601a260e78d610e44f68634f919e34497a"; };
    dependencies = {
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "jsonrpc_core" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.2.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "jsonrpc_server_utils" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-server-utils."14.2.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "parity_tokio_ipc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parity-tokio-ipc."0.2.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "parking_lot" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.9.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "tokio_service" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-service."0.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-pubsub."14.2.0" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-pubsub";
    version = "14.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2d44f5602a11d657946aac09357956d2841299ed422035edf140c552cb057986"; };
    dependencies = {
      jsonrpc_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.2.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.10.2" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jsonrpc-server-utils."14.2.0" = overridableMkRustCrate (profileName: rec {
    name = "jsonrpc-server-utils";
    version = "14.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "56cbfb462e7f902e21121d9f0d1c2b77b2c5b642e1a4e8f4ebfa2e15b94402bb"; };
    dependencies = {
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.12" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "globset" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".globset."0.4.5" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "jsonrpc_core" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.2.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio_codec" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.2" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "unicase" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "kernel32-sys";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d"; };
    dependencies = {
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
    };
    buildDependencies = {
      build = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" = overridableMkRustCrate (profileName: rec {
    name = "lazy_static";
    version = "1.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lazycell."1.3.0" = overridableMkRustCrate (profileName: rec {
    name = "lazycell";
    version = "1.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" = overridableMkRustCrate (profileName: rec {
    name = "libc";
    version = "0.2.77";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f2f96b10ec2560088a8e76961b00d47107b3a625fecb76dedb29ee7ccbf98235"; };
    features = builtins.concatLists [
      [ "align" ]
      [ "default" ]
      [ "rustc-dep-of-std" ]
      [ "rustc-std-workspace-core" ]
      [ "std" ]
    ];
    dependencies = {
      rustc_std_workspace_core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.12.14+1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "libgit2-sys";
    version = "0.12.14+1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8f25af58e6495f7caf2919d08f212de550cfa3ed2f5e744988938ea292b9f549"; };
    features = builtins.concatLists [
      [ "https" ]
      [ "libssh2-sys" ]
      [ "openssl-sys" ]
      [ "ssh" ]
      [ "ssh_key_from_memory" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      libssh2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libssh2-sys."0.2.19" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.1.2" { inherit profileName; };
      ${ if hostPlatform.isUnix then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.58" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.18" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libnghttp2-sys."0.1.4+1.41.0" = overridableMkRustCrate (profileName: rec {
    name = "libnghttp2-sys";
    version = "0.1.4+1.41.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "03624ec6df166e79e139a2310ca213283d6b3c30810c54844f307086d4488df1"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libssh2-sys."0.2.19" = overridableMkRustCrate (profileName: rec {
    name = "libssh2-sys";
    version = "0.2.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca46220853ba1c512fc82826d0834d87b06bcd3c2a42241b7de72f3d2fe17056"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.1.2" { inherit profileName; };
      ${ if hostPlatform.isUnix then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.58" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.18" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.10" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.1.2" = overridableMkRustCrate (profileName: rec {
    name = "libz-sys";
    version = "1.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "602113192b08db8f38796c4e85c39e960c145965140e918018bcde1952429655"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "libc" ]
      [ "stock-zlib" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.18" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.10" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".linkchecker."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "linkchecker";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/linkchecker");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".linked-hash-map."0.5.3" = overridableMkRustCrate (profileName: rec {
    name = "linked-hash-map";
    version = "0.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8dd5a6d5999d9907cda8ed67bbd137d3af8085216c2ac62de5be860bd41f304a"; };
  });
  
  "unknown".lint-docs."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "lint-docs";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/lint-docs");
    dependencies = {
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "lock_api";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c4da24a77a3d8a6d4862d95f72e6fdb9c09a643ecdb402d754004a557f2bec75"; };
    dependencies = {
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "lock_api";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "28247cc5a5be2f05fbcd76dd0cf2c7d3b5400cb978a28042abcd4fa0b3f8261c"; };
    features = builtins.concatLists [
      [ "nightly" ]
    ];
    dependencies = {
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" = overridableMkRustCrate (profileName: rec {
    name = "log";
    version = "0.4.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4fabed175da42fed1fa0746b0ea71f412aa9d35e76e95e59b192c64b9dc2bf8b"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".log_settings."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "log_settings";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "19af41f0565d7c19b2058153ad0b42d4d5ce89ec4dbf06ed6741114a8b63e7cd"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lsp-codec."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "lsp-codec";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "169d737ad89cf8ddd82d1804d9122f54568c49377665157277cc90d747b1d31a"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.12" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      tokio_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lsp-types."0.60.0" = overridableMkRustCrate (profileName: rec {
    name = "lsp-types";
    version = "0.60.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fe3edefcd66dde1f7f1df706f46520a3c93adc5ca4bc5747da6621195e894efd"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proposed" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      serde_repr = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_repr."0.1.6" { profileName = "__noProfile"; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lzma-sys."0.1.16" = overridableMkRustCrate (profileName: rec {
    name = "lzma-sys";
    version = "0.1.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f24f76ec44a8ac23a31915d6e326bca17ce88da03096f1ff194925dc714dac99"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.18" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "mac";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c41e0c4fef86961ac6d6f8a82609f55f31b05e4fce149ac5710e439df7619ba4"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".macro-utils."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "macro-utils";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0e72f7deb758fea9ea7d290aebfa788763d0bffae12caa6406a25baaf8fa68a8"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".maplit."1.0.2" = overridableMkRustCrate (profileName: rec {
    name = "maplit";
    version = "1.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3e2e65a1a2e43cfcb47a895c4c8b10d1f4a61097f9f254f183aee60cad9c651d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".markup5ever."0.10.0" = overridableMkRustCrate (profileName: rec {
    name = "markup5ever";
    version = "0.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aae38d669396ca9b707bfc3db254bc382ddb94f57cc5c235f34623a669a01dab"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      phf = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf."0.8.0" { inherit profileName; };
      string_cache = rustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache."0.8.0" { inherit profileName; };
      tendril = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.1" { inherit profileName; };
    };
    buildDependencies = {
      phf_codegen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_codegen."0.8.0" { profileName = "__noProfile"; };
      serde = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { profileName = "__noProfile"; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
      serde_json = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { profileName = "__noProfile"; };
      string_cache_codegen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache_codegen."0.5.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".markup5ever_rcdom."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "markup5ever_rcdom";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f015da43bcd8d4f144559a3423f4591d69b8ce0652c905374da7205df336ae2b"; };
    dependencies = {
      html5ever = rustPackages."registry+https://github.com/rust-lang/crates.io-index".html5ever."0.25.1" { inherit profileName; };
      markup5ever = rustPackages."registry+https://github.com/rust-lang/crates.io-index".markup5ever."0.10.0" { inherit profileName; };
      tendril = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.1" { inherit profileName; };
      xml5ever = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xml5ever."0.16.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".matchers."0.0.1" = overridableMkRustCrate (profileName: rec {
    name = "matchers";
    version = "0.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f099785f7595cc4b4553a174ce30dd7589ef93391ff414dbb67f62392b9e0ce1"; };
    dependencies = {
      regex_automata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "matches";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "maybe-uninit";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "60302e4db3a61da70c0cb7991976248362f30319e88850c487b9b95bbf059e00"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".md-5."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "md-5";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a18af3dcaf2b0219366cdb4e2af65a6101457b415c3d1a5c71dd9c2b7c77b9c8"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      block_buffer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.7.3" { inherit profileName; };
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.8.1" { inherit profileName; };
      opaque_debug = rustPackages."registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.2.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mdbook."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "mdbook";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "29be448fcafb00c5a8966c4020c2a5ffbbc333e5b96d0bb5ef54b5bd0524d9ff"; };
    features = builtins.concatLists [
      [ "ammonia" ]
      [ "elasticlunr-rs" ]
      [ "search" ]
    ];
    dependencies = {
      ammonia = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ammonia."3.1.0" { inherit profileName; };
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" { inherit profileName; };
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.15" { inherit profileName; };
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.3" { inherit profileName; };
      elasticlunr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".elasticlunr-rs."2.3.9" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      handlebars = rustPackages."registry+https://github.com/rust-lang/crates.io-index".handlebars."3.4.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
      open = rustPackages."registry+https://github.com/rust-lang/crates.io-index".open."1.4.0" { inherit profileName; };
      pulldown_cmark = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.7.2" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      shlex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".shlex."0.1.1" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.7" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".measureme."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "measureme";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fef709d3257013bba7cff14fc504e07e80631d3fe0f6d38ce63b8f6510ccb932"; };
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
      ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "memmap" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap."0.7.0" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.9.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".measureme."9.0.0" = overridableMkRustCrate (profileName: rec {
    name = "measureme";
    version = "9.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "22bf8d885d073610aee20e7fa205c4341ed32a761dbde96da5fd96301a8d3e82"; };
    dependencies = {
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" = overridableMkRustCrate (profileName: rec {
    name = "memchr";
    version = "2.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3728d817d99e5ac407411fa471ff9800a778d88a24685968b36824eaf4bee400"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
      [ "use_std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memmap."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "memmap";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6585fd95e7bb50d6cc31e20d4cf9afb4e2ba16c5846fc76793f11218da9c475b"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memoffset."0.5.5" = overridableMkRustCrate (profileName: rec {
    name = "memoffset";
    version = "0.5.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c198b026e1bbf08a937e94c6c60f9ec4a2267f5b0d2eec9c1b21b061ce2be55f"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".merge."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "merge";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "10bbef93abb1da61525bbc45eeaff6473a41907d19f8f9aa5168d214e10693e9"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "derive" ]
      [ "merge_derive" ]
      [ "num" ]
      [ "num-traits" ]
      [ "std" ]
    ];
    dependencies = {
      merge_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".merge_derive."0.1.0" { profileName = "__noProfile"; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".merge_derive."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "merge_derive";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "209d075476da2e63b4b29e72a2ef627b840589588e71400a25e3565c4f849d07"; };
    dependencies = {
      proc_macro_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".minifier."0.0.33" = overridableMkRustCrate (profileName: rec {
    name = "minifier";
    version = "0.0.33";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "70bf0db2475f5e627787da77ca52fe33c294063f49f4134b8bc662eedb5e7332"; };
    dependencies = {
      macro_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".macro-utils."0.1.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "miniz_oxide";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "be0f75932c1f6cfae3c04000e40114adf955636e19040f9c0a2c380702aa1c7f"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "alloc")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "compiler_builtins")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "core")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "rustc-dep-of-std")
    ];
    dependencies = {
      adler = rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler."0.2.3" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "compiler_builtins" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "alloc" else null } = rustPackages."unknown".rustc-std-workspace-alloc."1.99.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "core" else null } = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" = overridableMkRustCrate (profileName: rec {
    name = "mio";
    version = "0.6.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fce347092656428bc8eaf6201042cb551b8d67855af7374542a92a0fbfcac430"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "with-deprecated" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_zircon" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_zircon_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" { inherit profileName; };
      iovec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
      ${ if hostPlatform.isWindows then "kernel32" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.2.1" { inherit profileName; };
      net2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".net2."0.2.34" { inherit profileName; };
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mio-named-pipes."0.1.7" = overridableMkRustCrate (profileName: rec {
    name = "mio-named-pipes";
    version = "0.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0840c1c50fd55e521b247f949c241c9997709f23bd7f023b9762cd561e935656"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if hostPlatform.isWindows then "mio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.5" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".mio-uds."0.6.8" = overridableMkRustCrate (profileName: rec {
    name = "mio-uds";
    version = "0.6.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "afcb699eb26d4332647cc848492bbc15eafb26f08d0304550d5aa1f612e066f0"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "iovec" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.isUnix then "mio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".miow."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "miow";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8c1f2f3b1cf331de6896aabf6e9d55dca90356cc9960cca7eaaf408a355ae919"; };
    dependencies = {
      kernel32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" { inherit profileName; };
      net2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".net2."0.2.34" { inherit profileName; };
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
      ws2_32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ws2_32-sys."0.2.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".miow."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "miow";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "07b88fb9795d4d36d62a012dfbf49a8f5cf12751f36d31a9dbe66d528e58979e"; };
    dependencies = {
      socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.12" { inherit profileName; };
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "unknown".miri."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "miri";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/miri");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "miri/rustc_tests") "rustc_tests")
    ];
    dependencies = {
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.0" { inherit profileName; };
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.2" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      shell_escape = rustPackages."registry+https://github.com/rust-lang/crates.io-index".shell-escape."0.1.5" { inherit profileName; };
    };
    devDependencies = {
      colored = rustPackages."registry+https://github.com/rust-lang/crates.io-index".colored."2.0.0" { inherit profileName; };
      compiletest_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiletest_rs."0.5.0" { inherit profileName; };
      rustc_version = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".net2."0.2.34" = overridableMkRustCrate (profileName: rec {
    name = "net2";
    version = "0.2.34";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2ba7c918ac76704fb42afcbbb43891e72731f3dcca3bef2a19786297baf14af7"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "duration" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" || hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.4" = overridableMkRustCrate (profileName: rec {
    name = "new_debug_unreachable";
    version = "1.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e4a24736216ec316047a1fc4252e27dabb04218aa4a3f37c6e7ddbf1f9782b54"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.43" = overridableMkRustCrate (profileName: rec {
    name = "num-integer";
    version = "0.1.43";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8d59457e662d541ba17869cf51cf177c0b5f0cbf476c66bdc90bf1edac4f875b"; };
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" = overridableMkRustCrate (profileName: rec {
    name = "num-traits";
    version = "0.2.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ac267bcc07f48ee5f8935ab0d24f316fb722d7a1292e2913f0cc196b29ffd611"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" = overridableMkRustCrate (profileName: rec {
    name = "num_cpus";
    version = "1.13.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "05499f3756671c15885fee9034446956fff3f243d6077b91e5767df161f766b3"; };
    dependencies = {
      ${ if (hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "aarch64") && hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.15" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".object."0.20.0" = overridableMkRustCrate (profileName: rec {
    name = "object";
    version = "0.20.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1ab52be62400ca80aa00285d25253d7f7c437b7375c4de678f5405d3afe82ca5"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "alloc")
      [ "coff" ]
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "compiler_builtins")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "core")
      [ "elf" ]
      [ "macho" ]
      [ "pe" ]
      [ "read_core" ]
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "rustc-dep-of-std")
      [ "unaligned" ]
    ];
    dependencies = {
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "compiler_builtins" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "alloc" else null } = rustPackages."unknown".rustc-std-workspace-alloc."1.99.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "core" else null } = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.1" = overridableMkRustCrate (profileName: rec {
    name = "once_cell";
    version = "1.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "260e51e7efe62b592207e9e13a68e43692a7a279171d6ba57abd208bf23645ad"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "opaque-debug";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2839e79665f131bdb5782e51f2c6c9599c133c6098982a54c794358bf432529c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "opaque-debug";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "624a8340c38c1b80fd549087862da4ba43e08858af025b236e509b6649fc13d5"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".open."1.4.0" = overridableMkRustCrate (profileName: rec {
    name = "open";
    version = "1.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7c283bf0114efea9e42f1a60edea9859e8c47528eae09d01df4b29c1e489cc48"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".opener."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "opener";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "13117407ca9d0caf3a0e74f97b490a7e64c0ae3aa90a8b7085544d0c37b6f3ae"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.30" = overridableMkRustCrate (profileName: rec {
    name = "openssl";
    version = "0.10.30";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8d575eff3665419f9b83678ff2815858ad9d11567e082f5ac1814baba4e2bcb4"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "vendored")
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      foreign_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      openssl_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.58" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "openssl-probe";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "77af24da69f9d9341038eba93a073b1fdaaa1b788221b00a69bce9e762cb32de"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl-src."111.10.2+1.1.1g" = overridableMkRustCrate (profileName: rec {
    name = "openssl-src";
    version = "111.10.2+1.1.1g";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a287fdb22e32b5b60624d4a5a7a02dbe82777f730ec0dbc42a0554326fef5a70"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "default")
    ];
    dependencies = {
      ${ if rootFeatures' ? "cargo/vendored-openssl" then "cc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.58" = overridableMkRustCrate (profileName: rec {
    name = "openssl-sys";
    version = "0.9.58";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a842db4709b604f0fe5d1170ae3565899be2ad3d9cbc72dedc789ac0511f78de"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "openssl-src")
      (lib.optional (rootFeatures' ? "cargo/vendored-openssl") "vendored")
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "cargo/vendored-openssl" then "openssl_src" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-src."111.10.2+1.1.1g" { profileName = "__noProfile"; };
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.18" { profileName = "__noProfile"; };
      ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.10" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ordslice."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "ordslice";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dd20eec3dbe4376829cb7d80ae6ac45e0a766831dca50202ff2d40db46a8a024"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".output_vt100."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "output_vt100";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "53cdc5b785b7a58c5aad8216b3dfa114df64b0b06ae6e1501cef91df2fbdf8f9"; };
    dependencies = {
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".packed_simd."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "packed_simd";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a85ea9fc0d4ac0deb6fe7911d38786b32fc11119afd9e9d38b84ff691ce64220"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "default")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustfmt-nightly/generic-simd" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
    };
  });
  
  "unknown".panic_abort."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "panic_abort";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/panic_abort");
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
  });
  
  "unknown".panic_unwind."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "panic_unwind";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/panic_unwind");
    dependencies = {
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      unwind = rustPackages."unknown".unwind."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parity-tokio-ipc."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "parity-tokio-ipc";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8281bf4f1d6429573f89589bf68d89451c46750977a8264f8ea3edbabeba7947"; };
    dependencies = {
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.12" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "mio_named_pipes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-named-pipes."0.1.7" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.3.5" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "rand" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio_named_pipes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-named-pipes."0.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio_uds" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-uds."0.2.7" { inherit profileName; };
      ${ if (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc") && hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f842b1982eb6c2fe34036a4fbfb06dd185a3f5c8edfaacdf7d1ea10b07de6252"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.3.4" { inherit profileName; };
      parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.6.2" { inherit profileName; };
    };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.10.2" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot";
    version = "0.10.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d3a704eb390aafdc107b0e392f56a82b668e3a71366993b5340f5833fd62505e"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.3.4" { inherit profileName; };
      parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.7.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a4893845fa2ca272e647da5d0e46660a314ead9c2fdd9a883aabc32e481a8733"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "nightly" ]
    ];
    dependencies = {
      instant = rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.6" { inherit profileName; };
      lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.1" { inherit profileName; };
      parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.8.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot_core";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b876b1b9e7ac6e1a74a6da34d25c42e17e8862aa409cbbbdcfc8d86c6f3bc62b"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.13" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot_core";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d58c7c768d4ba344e3e8d72518ac13e259d7c7ade24167003b8488e10b6740a3"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot_core";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c361aa727dd08437f2f1447be8b59a33b0edd15e0fcee698f935613d9efbca9b"; };
    features = builtins.concatLists [
      [ "nightly" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.1.0" { inherit profileName; };
      instant = rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.6" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pathdiff."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "pathdiff";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "877630b3de15c0b64cc52f659345724fbf6bdad9bd9566699fc53688f3c34a34"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "percent-encoding";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "31010dd2e1ac33d5b46a5b413495239882813e0369f8ed8a5e266f173602f831"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "percent-encoding";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d4fd5641d01c8f18a23da7b6fe29298ff4b55afcccdf78973b24cf3175fee32e"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pest."2.1.3" = overridableMkRustCrate (profileName: rec {
    name = "pest";
    version = "2.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "10f4872ae94d7b90ae48754df22fd42ad52ce740b8f370b03da4835417403e53"; };
    dependencies = {
      ucd_trie = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ucd-trie."0.1.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pest_derive."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "pest_derive";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "833d1ae558dc601e9a60366421196a8d94bc0ac980476d0b67e1d0988d72b2d0"; };
    dependencies = {
      pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.1.3" { inherit profileName; };
      pest_generator = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest_generator."2.1.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pest_generator."2.1.3" = overridableMkRustCrate (profileName: rec {
    name = "pest_generator";
    version = "2.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "99b8db626e31e5b81787b9783425769681b347011cc59471e33ea46d2ea0cf55"; };
    dependencies = {
      pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.1.3" { inherit profileName; };
      pest_meta = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest_meta."2.1.3" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pest_meta."2.1.3" = overridableMkRustCrate (profileName: rec {
    name = "pest_meta";
    version = "2.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "54be6e404f5317079812fc8f9f5279de376d8856929e21c184ecf6bbd692a11d"; };
    dependencies = {
      maplit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maplit."1.0.2" { inherit profileName; };
      pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.1.3" { inherit profileName; };
    };
    buildDependencies = {
      sha1 = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".sha-1."0.8.2" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".petgraph."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "petgraph";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "467d164a6de56270bd7c4d070df81d07beace25012d5103ced4e9ff08d6afdb7"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "graphmap" ]
      [ "matrix_graph" ]
      [ "stable_graph" ]
    ];
    dependencies = {
      fixedbitset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fixedbitset."0.2.0" { inherit profileName; };
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "phf";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3dfb61232e34fcb633f43d12c58f83c1df82962dcdfa565a4e866ffc17dafe12"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.8.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf_codegen."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "phf_codegen";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cbffee61585b0411840d3ece935cce9cb6321f01c45477d30066498cd5e1a815"; };
    dependencies = {
      phf_generator = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.8.0" { inherit profileName; };
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.8.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "phf_generator";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "17367f0cc86f2d25802b2c26ee58a7b23faeccf78a396094c13dced0d0182526"; };
    dependencies = {
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.8.0" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "phf_shared";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c00cf8b9eafe68dde5e9eaa2cef8ee84a9336a47d566ec55ca16589633b65af7"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      siphasher = rustPackages."registry+https://github.com/rust-lang/crates.io-index".siphasher."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.18" = overridableMkRustCrate (profileName: rec {
    name = "pkg-config";
    version = "0.3.18";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d36492546b6af1463394d46f0c834346f31548646f6ba10849802c9c9a27ac33"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".polonius-engine."0.12.1" = overridableMkRustCrate (profileName: rec {
    name = "polonius-engine";
    version = "0.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ef2558a4b464e185b36ee08a2937ebb62ea5464c38856cfb1465c97cb38db52d"; };
    dependencies = {
      datafrog = rustPackages."registry+https://github.com/rust-lang/crates.io-index".datafrog."2.0.1" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.8" = overridableMkRustCrate (profileName: rec {
    name = "ppv-lite86";
    version = "0.2.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "237a5ed80e274dbc66f86bd59c1e25edc039660be53194b5fe0a482e0f2612ea"; };
    features = builtins.concatLists [
      [ "simd" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".precomputed-hash."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "precomputed-hash";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pretty_assertions."0.6.1" = overridableMkRustCrate (profileName: rec {
    name = "pretty_assertions";
    version = "0.6.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3f81e1644e1b54f5a68959a29aa86cde704219254669da328ecfdf6a1f09d427"; };
    dependencies = {
      ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "ctor" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".ctor."0.1.15" { profileName = "__noProfile"; };
      difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "output_vt100" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".output_vt100."0.1.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pretty_env_logger."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "pretty_env_logger";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "926d36b9553851b8b0005f1275891b392ee4d2d833852c417ed025477350fb9d"; };
    dependencies = {
      ${ if rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger" then "env_logger" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      ${ if rootFeatures' ? "cargo/pretty-env-logger" || rootFeatures' ? "cargo/pretty_env_logger" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro-crate";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1d6ea3c4595b96363c13943497db34af4460fb474a95c43f4446ad341b8c9785"; };
    dependencies = {
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.7" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro-error";
    version = "1.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "syn" ]
      [ "syn-error" ]
    ];
    dependencies = {
      proc_macro_error_attr = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" { profileName = "__noProfile"; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro-error-attr";
    version = "1.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
    };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro2";
    version = "1.0.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "04f5f085b5d71e2188cb8271e5da0161ad52c3f227a661a3c135fdf28e258b12"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
    };
  });
  
  "unknown".proc_macro."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "proc_macro";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/proc_macro");
    dependencies = {
      std = rustPackages."unknown".std."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".profiler_builtins."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "profiler_builtins";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/profiler_builtins");
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".psm."0.1.11" = overridableMkRustCrate (profileName: rec {
    name = "psm";
    version = "0.1.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "96e0536f6528466dbbbbe6b986c34175a8d0ff25b794c4bacda22e068cd2f2c5"; };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "pulldown-cmark";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca36dea94d187597e104a5c8e4b07576a8a45aa5db48a65e12940d3eb7461f55"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "getopts" ]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
      unicase = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "pulldown-cmark";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ffade02495f22453cd593159ea2f59827aae7f53fa8323f756799b670881dcf8"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
      unicase = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".punycode."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "punycode";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e9e1dcb320d6839f6edb64f7a4a59d39b30480d4d1765b56873f7c858538a5fe"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" = overridableMkRustCrate (profileName: rec {
    name = "quick-error";
    version = "1.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quick-error."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "quick-error";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3ac73b1112776fc109b2e61909bc46c7e1bf0d7f690ffb1676553acce16d5cda"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quine-mc_cluskey."0.2.4" = overridableMkRustCrate (profileName: rec {
    name = "quine-mc_cluskey";
    version = "0.2.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "07589615d719a60c8dd8a4622e7946465dfef20d1a428f969e3443e7386d5f45"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" = overridableMkRustCrate (profileName: rec {
    name = "quote";
    version = "1.0.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aa563d17ecb180e500da1cfd2b028310ac758de548efdd203e18f283af693f37"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".racer."2.1.40" = overridableMkRustCrate (profileName: rec {
    name = "racer";
    version = "2.1.40";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "68c5fb83bc092c10e12ca863ab8922b1833382d5d248aaafca779886d3396a44"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.3" { inherit profileName; };
      derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" { profileName = "__noProfile"; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."2.0.1" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.2" { inherit profileName; };
      rustc_ast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast."686.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."686.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."686.0.0" { inherit profileName; };
      rustc_parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_parse."686.0.0" { inherit profileName; };
      rustc_session = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" = overridableMkRustCrate (profileName: rec {
    name = "rand";
    version = "0.7.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6a6b1679d49b24bbfe0c803429aa1874472f50d9b363131f0e89fc356b544d03"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "getrandom" ]
      [ "getrandom_package" ]
      [ "libc" ]
      [ "rand_pcg" ]
      [ "small_rng" ]
      [ "std" ]
    ];
    dependencies = {
      getrandom_package = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if !(hostPlatform.parsed.kernel.name == "emscripten") then "rand_chacha" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.2.2" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "emscripten" then "rand_hc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.2.0" { inherit profileName; };
      rand_pcg = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_pcg."0.2.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "rand_chacha";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f4c8ed856279c9737206bf725bf36935d8666ead7aa69b52be55af369d193402"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      ppv_lite86 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.8" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "rand_core";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "90bde5296fc891b0cef12a6d03ddccc162ce7b2aff54160af9338f8d40df6d19"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "getrandom" ]
      [ "std" ]
    ];
    dependencies = {
      getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_hc";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca3129af7b92a17112d59ad498c6f81eaf463253766b90396d39ea7a39d6613c"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_pcg."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "rand_pcg";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "16abd0c1b639e9eb4d7c50c0b8100b0d0f849be2349829c740fe8e6eb4816429"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_xorshift";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "77d416b86801d23dde1aa643023b775c3a462efc0ed96443add11546cdf1dca8"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_xoshiro."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_xoshiro";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a9fcdd2e881d02f1d9390ae47ad8e5696a9e4be7b547a1da2afbc61973217004"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rayon."1.3.1" = overridableMkRustCrate (profileName: rec {
    name = "rayon";
    version = "1.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "62f02856753d04e03e26929f820d0a0a337ebe71f849801eea335d464b349080"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
      rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.7.1" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.7.1" = overridableMkRustCrate (profileName: rec {
    name = "rayon-core";
    version = "1.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e92e15d89083484e11353891f1af602cc661426deb9564c298b270c726973280"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" { inherit profileName; };
      crossbeam_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.2.3" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" = overridableMkRustCrate (profileName: rec {
    name = "redox_syscall";
    version = "0.1.57";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".redox_users."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "redox_users";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "09b23093265f8d200fa7b4c2c76297f47e681c655f6f1285a8780d6a022f7431"; };
    dependencies = {
      getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" { inherit profileName; };
      syscall = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
      argon2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust-argon2."0.7.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" = overridableMkRustCrate (profileName: rec {
    name = "regex";
    version = "1.3.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9c3780fcf44b193bc4d09f36d2a3c87b251da4a046c87795a0d35f4f927ad8e6"; };
    features = builtins.concatLists [
      [ "aho-corasick" ]
      [ "default" ]
      [ "memchr" ]
      [ "perf" ]
      [ "perf-cache" ]
      [ "perf-dfa" ]
      [ "perf-inline" ]
      [ "perf-literal" ]
      [ "std" ]
      [ "thread_local" ]
      [ "unicode" ]
      [ "unicode-age" ]
      [ "unicode-bool" ]
      [ "unicode-case" ]
      [ "unicode-gencat" ]
      [ "unicode-perl" ]
      [ "unicode-script" ]
      [ "unicode-segment" ]
    ];
    dependencies = {
      aho_corasick = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.13" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" { inherit profileName; };
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.9" = overridableMkRustCrate (profileName: rec {
    name = "regex-automata";
    version = "0.1.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ae1ded71d66a4a97f5e961fd0cb25a5f366a42a41570d16a763a69c092c26ae4"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "regex-syntax" ]
      [ "std" ]
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" = overridableMkRustCrate (profileName: rec {
    name = "regex-syntax";
    version = "0.6.18";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "26412eb97c6b088a6997e05f69403a802a92d520de2f8e63c2b65f9e0f47c4e8"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "unicode" ]
      [ "unicode-age" ]
      [ "unicode-bool" ]
      [ "unicode-case" ]
      [ "unicode-gencat" ]
      [ "unicode-perl" ]
      [ "unicode-script" ]
      [ "unicode-segment" ]
    ];
  });
  
  "unknown".remote-test-client."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "remote-test-client";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/remote-test-client");
  });
  
  "unknown".remote-test-server."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "remote-test-server";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/remote-test-server");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.3" = overridableMkRustCrate (profileName: rec {
    name = "remove_dir_all";
    version = "0.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3acd125665422973a33ac9d3dd2df85edad0f4ae9b00dafb1a05e43a9f5ef8e7"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "unknown".rls."1.41.0" = overridableMkRustCrate (profileName: rec {
    name = "rls";
    version = "1.41.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rls");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/clippy") "clippy")
      (lib.optional (rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls/clippy_lints") "clippy_lints")
      (lib.optional (rootFeatures' ? "rls/default") "default")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/futures" || rootFeatures' ? "rls/ipc") "futures")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc") "ipc")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls/rls-ipc") "rls-ipc")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls/tokio") "tokio")
    ];
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" { inherit profileName; };
      cargo = rustPackages."unknown".cargo."0.49.0" { inherit profileName; };
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.8.2" { inherit profileName; };
      ${ if rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls/clippy_lints" then "clippy_lints" else null } = rustPackages."unknown".clippy_lints."0.0.212" { inherit profileName; };
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.4" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.3.1" { inherit profileName; };
      home = rustPackages."registry+https://github.com/rust-lang/crates.io-index".home."0.5.3" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.2" { inherit profileName; };
      jsonrpc_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.2.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      lsp_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lsp-types."0.60.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      ordslice = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ordslice."0.3.0" { inherit profileName; };
      racer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".racer."2.1.40" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.3.1" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      rls_analysis = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-analysis."0.18.1" { inherit profileName; };
      rls_data = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls/rls-ipc" then "rls_ipc" else null } = rustPackages."unknown".rls-ipc."0.1.0" { inherit profileName; };
      rls_rustc = rustPackages."unknown".rls-rustc."0.6.0" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.2" { inherit profileName; };
      rls_vfs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-vfs."0.8.0" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      rustc_tools_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_tools_util."0.2.0" { inherit profileName; };
      rustfmt_nightly = rustPackages."unknown".rustfmt-nightly."1.4.24" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
      serde_ignored = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_ignored."0.1.2" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.7" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
    };
    devDependencies = {
      difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      lsp_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lsp-codec."0.1.2" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
      tokio_process = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-process."0.2.5" { inherit profileName; };
      tokio_timer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-timer."0.2.13" { inherit profileName; };
    };
    buildDependencies = {
      rustc_tools_util = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_tools_util."0.2.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-analysis."0.18.1" = overridableMkRustCrate (profileName: rec {
    name = "rls-analysis";
    version = "0.18.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "534032993e1b60e5db934eab2dde54da7afd1e46c3465fddb2b29eb47cb1ed3a"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      derive_new = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.8" { profileName = "__noProfile"; };
      fst = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fst."0.3.5" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.2" { inherit profileName; };
      json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".json."0.11.15" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      rls_data = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.2" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-data";
    version = "0.19.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "76c72ea97e045be5f6290bb157ebdc5ee9f2b093831ff72adfaf59025cf5c491"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.2" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "unknown".rls-ipc."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-ipc";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rls/rls-ipc");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-rustc/ipc") "client")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server") "jsonrpc-ipc-server")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/server") "server")
    ];
    dependencies = {
      jsonrpc_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core."14.2.0" { inherit profileName; };
      jsonrpc_core_client = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-core-client."14.2.0" { inherit profileName; };
      jsonrpc_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-derive."14.2.1" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "jsonrpc_ipc_server" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonrpc-ipc-server."14.0.3" { inherit profileName; };
      rls_data = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "unknown".rls-rustc."0.6.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-rustc";
    version = "0.6.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rls/rls-rustc");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls-rustc/clippy") "clippy")
      (lib.optional (rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls-rustc/clippy" || rootFeatures' ? "rls-rustc/clippy_lints") "clippy_lints")
      [ "default" ]
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/futures" || rootFeatures' ? "rls-rustc/ipc") "futures")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc") "ipc")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/rls-data") "rls-data")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/rls-ipc") "rls-ipc")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/serde") "serde")
      (lib.optional (rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/tokio") "tokio")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rls/clippy" || rootFeatures' ? "rls-rustc/clippy" || rootFeatures' ? "rls-rustc/clippy_lints" then "clippy_lints" else null } = rustPackages."unknown".clippy_lints."0.0.212" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/futures" || rootFeatures' ? "rls-rustc/ipc" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/rls-data" then "rls_data" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/rls-ipc" then "rls_ipc" else null } = rustPackages."unknown".rls-ipc."0.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/serde" then "serde" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-rustc/ipc" || rootFeatures' ? "rls-rustc/tokio" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.2" = overridableMkRustCrate (profileName: rec {
    name = "rls-span";
    version = "0.5.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f2e9bed56f6272bd85d9d06d1aaeef80c5fddc78a82199eb36dceb5f94e7d934"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rls-vfs."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "rls-vfs";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ce4b57b25b4330ed5ec14028fc02141e083ddafda327e7eb598dc0569c8c83c9"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rust-argon2."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "rust-argon2";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2bc8af4bda8e1ff4932523b94d3dd20ee30a87232323eda55903ffd71d2fb017"; };
    dependencies = {
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.11.0" { inherit profileName; };
      blake2b_simd = rustPackages."registry+https://github.com/rust-lang/crates.io-index".blake2b_simd."0.5.10" { inherit profileName; };
      constant_time_eq = rustPackages."registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.5" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
    };
  });
  
  "unknown".rust-demangler."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rust-demangler";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rust-demangler");
    dependencies = {
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" { inherit profileName; };
    };
  });
  
  "unknown".rustbook."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustbook";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustbook");
    dependencies = {
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.3" { inherit profileName; };
      mdbook = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mdbook."0.4.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_arena."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_arena";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "477085eefed2f12085c68577cc3827c8c39a31a4a750978aacb9af10f7903174"; };
    dependencies = {
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_ast";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4d4ad5ec25f6b3d122354595be0d1b513f37fca3299d9b448b1db28f4a9e4b12"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_index = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_index."686.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_lexer."686.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."686.0.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_serialize."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_passes."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_ast_passes";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0c6d8635298d7736decdb3c6e92e784d3eccde557462a9c10ac11a34fec3d756"; };
    dependencies = {
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      rustc_ast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast."686.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."686.0.0" { inherit profileName; };
      rustc_attr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_attr."686.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."686.0.0" { inherit profileName; };
      rustc_feature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_feature."686.0.0" { inherit profileName; };
      rustc_parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_parse."686.0.0" { inherit profileName; };
      rustc_session = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_ast_pretty";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7a61bdb5252e1a95b7715038949e10f07ce770a436fcd497cdd9bc7255471de9"; };
    dependencies = {
      rustc_ast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
      rustc_target = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_target."686.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_attr."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_attr";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "84520a16cb61bd31e9c27e87eca5d933a9c94ac84f25649bddcc19989275ab2a"; };
    dependencies = {
      rustc_ast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast."686.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."686.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."686.0.0" { inherit profileName; };
      rustc_feature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_feature."686.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_lexer."686.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."686.0.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_serialize."686.0.0" { inherit profileName; };
      rustc_session = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
      version_check = rustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_data_structures";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b1cb2b6a38759cf7c0c1434c8b4cbfcab9cd24970d05f960f2ca01226ddb4d68"; };
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      ena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ena."0.14.0" { inherit profileName; };
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.6.0" { inherit profileName; };
      jobserver_crate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      measureme = rustPackages."registry+https://github.com/rust-lang/crates.io-index".measureme."9.0.0" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" { inherit profileName; };
      rustc_graphviz = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_graphviz."686.0.0" { inherit profileName; };
      rustc_index = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_index."686.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."686.0.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_serialize."686.0.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.3.0" { inherit profileName; };
      rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.3.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      stable_deref_trait = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.2.0" { inherit profileName; };
      stacker = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stacker."0.1.12" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_errors";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "46cfb19536426bf9252827a78552d635be207a4be74f4e92832aad82d7f2135c"; };
    dependencies = {
      annotate_snippets = rustPackages."registry+https://github.com/rust-lang/crates.io-index".annotate-snippets."0.8.0" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."686.0.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_serialize."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" { inherit profileName; };
      termize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termize."0.1.1" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_expand."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_expand";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6273e60042a0ef31f6cfe783c519873993eb426f055be2bc058a48b6ca3934d0"; };
    dependencies = {
      rustc_ast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast."686.0.0" { inherit profileName; };
      rustc_ast_passes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_passes."686.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."686.0.0" { inherit profileName; };
      rustc_attr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_attr."686.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."686.0.0" { inherit profileName; };
      rustc_feature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_feature."686.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_lexer."686.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."686.0.0" { profileName = "__noProfile"; };
      rustc_parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_parse."686.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_serialize."686.0.0" { inherit profileName; };
      rustc_session = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_feature."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_feature";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2936e8346157e2848305e509f38aa3ed4e97697975ef68027587f5db6a38703f"; };
    dependencies = {
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_fs_util."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_fs_util";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9b4c3ae17776b5a5aa441ca510a650f75805e1f5569edd231caa8378552195a4"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_graphviz."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_graphviz";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5611bf0ac0ac49c2a22c959c7d8b17f85f69959293f0e8c4f753eca832fe7ad0"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_index."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_index";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca67cf37c427057192e451c7f912e94ae9a8ca5ad69fd481c011fad3f86982cb"; };
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."686.0.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_serialize."686.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_lexer."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_lexer";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a5b04cd2159495584d976d501c5394498470c2e94e4f0cebb8186562d407a678"; };
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_macros";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "61ec6d623853449acd3c65050d249d3674edab5f6e4d9f074c7bac183269f9c8"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      synstructure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_parse."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_parse";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca524bafce4b04d2b49fee2d40b4b26c3ebab9f1a4f731fdf561f00617862f02"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      rustc_ast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast."686.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."686.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."686.0.0" { inherit profileName; };
      rustc_feature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_feature."686.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_lexer."686.0.0" { inherit profileName; };
      rustc_session = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.13" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_serialize."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_serialize";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c67920561e58f98c4de864407c92b2dd05ace5d5e5301e17444f10f742c005b7"; };
    dependencies = {
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.6.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_session";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0762fd855792e06ef639327237898e4e092ad68150e6a8e19aeb7dc06276ad7a"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      rustc_ast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast."686.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."686.0.0" { inherit profileName; };
      rustc_feature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_feature."686.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_fs_util."686.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."686.0.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_serialize."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
      rustc_target = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_target."686.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_span";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0bf3db7b4ca5d21c14c45475df155e5e020c9a3760346945a662c9a9053b49c8"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      md5 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".md-5."0.8.0" { inherit profileName; };
      rustc_arena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_arena."686.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_index = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_index."686.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."686.0.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_serialize."686.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.0" { inherit profileName; };
      sha1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha-1."0.8.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_target."686.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-ap-rustc_target";
    version = "686.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3aa6560bb9742b276064d67ab9edb5766ecb303f8ae3854835ad3fad4b432188"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_index = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_index."686.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_macros."686.0.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_serialize."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" = overridableMkRustCrate (profileName: rec {
    name = "rustc-demangle";
    version = "0.1.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4c691c0e608126e00913e33f0ccf3727d5fc84573623b8d65b2df340b5201783"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "rustc-dep-of-std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-hash";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "unknown".rustc-main."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-main";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc") "jemalloc")
      (lib.optional (rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys") "jemalloc-sys")
      (lib.optional (rootFeatures' ? "rustc-main/llvm") "llvm")
      (lib.optional (rootFeatures' ? "rustc-main/max_level_info") "max_level_info")
    ];
    dependencies = {
      ${ if rootFeatures' ? "rustc-main/jemalloc" || rootFeatures' ? "rustc-main/jemalloc-sys" then "jemalloc_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jemalloc-sys."0.3.2" { inherit profileName; };
      rustc_codegen_ssa = rustPackages."unknown".rustc_codegen_ssa."0.0.0" { inherit profileName; };
      rustc_driver = rustPackages."unknown".rustc_driver."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-rayon";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f32767f90d938f1b7199a174ef249ae1924f6e5bbdb9d112fea141e016f25b3a"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
      rustc_rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.3.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-rayon-core";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ea2427831f0053ea3ea73559c8eabd893133a51b251d142bacee53c62a288cb3"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" { inherit profileName; };
      crossbeam_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.1.2" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.6" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc-std-workspace-alloc."1.99.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-std-workspace-alloc";
    version = "1.99.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/rustc-std-workspace-alloc");
    dependencies = {
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc-std-workspace-core."1.99.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-std-workspace-core";
    version = "1.99.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/rustc-std-workspace-core");
    dependencies = {
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc-std-workspace-std."1.99.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-std-workspace-std";
    version = "1.99.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/rustc-std-workspace-std");
    dependencies = {
      std = rustPackages."unknown".std."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc-workspace-hack."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc-workspace-hack";
    version = "1.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustc-workspace-hack");
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      smallvec_0_6 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.13" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "unknown".rustc_apfloat."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_apfloat";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_apfloat");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
    };
  });
  
  "unknown".rustc_arena."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_arena";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_arena");
    dependencies = {
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
    };
  });
  
  "unknown".rustc_ast."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_ast";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_ast");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_ast_lowering."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_ast_lowering";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_ast_lowering");
    dependencies = {
      rustc_arena = rustPackages."unknown".rustc_arena."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_ast_passes."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_ast_passes";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_ast_passes");
    dependencies = {
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_ast_pretty."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_ast_pretty";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_ast_pretty");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_attr."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_attr";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_attr");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      version_check = rustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.1" { inherit profileName; };
    };
  });
  
  "unknown".rustc_builtin_macros."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_builtin_macros";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_builtin_macros");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_expand = rustPackages."unknown".rustc_expand."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_parse_format = rustPackages."unknown".rustc_parse_format."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_codegen_llvm."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_codegen_llvm";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_codegen_llvm");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      measureme = rustPackages."registry+https://github.com/rust-lang/crates.io-index".measureme."0.7.1" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_codegen_ssa = rustPackages."unknown".rustc_codegen_ssa."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."unknown".rustc_fs_util."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_incremental = rustPackages."unknown".rustc_incremental."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_llvm = rustPackages."unknown".rustc_llvm."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      snap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".snap."1.0.1" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_codegen_ssa."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_codegen_ssa";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_codegen_ssa");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { inherit profileName; };
      jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      memmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap."0.7.0" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      pathdiff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pathdiff."0.2.0" { inherit profileName; };
      rustc_apfloat = rustPackages."unknown".rustc_apfloat."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."unknown".rustc_fs_util."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_incremental = rustPackages."unknown".rustc_incremental."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_symbol_mangling = rustPackages."unknown".rustc_symbol_mangling."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_data_structures."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_data_structures";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_data_structures");
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      ena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ena."0.14.0" { inherit profileName; };
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.6.0" { inherit profileName; };
      jobserver_crate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.21" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      measureme = rustPackages."registry+https://github.com/rust-lang/crates.io-index".measureme."0.7.1" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" { inherit profileName; };
      rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.3.0" { inherit profileName; };
      rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.3.0" { inherit profileName; };
      rustc_graphviz = rustPackages."unknown".rustc_graphviz."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      stable_deref_trait = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.2.0" { inherit profileName; };
      stacker = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stacker."0.1.12" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "unknown".rustc_driver."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_driver";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_driver");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc-main/llvm" || rootFeatures' ? "rustc_driver/llvm") "llvm")
      (lib.optional (rootFeatures' ? "rustc-main/max_level_info" || rootFeatures' ? "rustc_driver/max_level_info") "max_level_info")
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_codegen_ssa = rustPackages."unknown".rustc_codegen_ssa."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_error_codes = rustPackages."unknown".rustc_error_codes."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_hir_pretty = rustPackages."unknown".rustc_hir_pretty."0.0.0" { inherit profileName; };
      rustc_interface = rustPackages."unknown".rustc_interface."0.0.0" { inherit profileName; };
      rustc_lint = rustPackages."unknown".rustc_lint."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_mir = rustPackages."unknown".rustc_mir."0.0.0" { inherit profileName; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_plugin_impl = rustPackages."unknown".rustc_plugin_impl."0.0.0" { inherit profileName; };
      rustc_save_analysis = rustPackages."unknown".rustc_save_analysis."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.2.11" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "unknown".rustc_error_codes."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_error_codes";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_error_codes");
  });
  
  "unknown".rustc_errors."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_errors";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_errors");
    dependencies = {
      annotate_snippets = rustPackages."registry+https://github.com/rust-lang/crates.io-index".annotate-snippets."0.8.0" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" { inherit profileName; };
      termize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termize."0.1.1" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "unknown".rustc_expand."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_expand";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_expand");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_passes = rustPackages."unknown".rustc_ast_passes."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_feature."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_feature";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_feature");
    dependencies = {
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_fs_util."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_fs_util";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_fs_util");
  });
  
  "unknown".rustc_graphviz."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_graphviz";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_graphviz");
  });
  
  "unknown".rustc_hir."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_hir";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_hir");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_hir_pretty."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_hir_pretty";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_hir_pretty");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_incremental."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_incremental";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_incremental");
    dependencies = {
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."unknown".rustc_fs_util."0.0.0" { inherit profileName; };
      rustc_graphviz = rustPackages."unknown".rustc_graphviz."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_index."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_index";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_index");
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_infer."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_infer";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_infer");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_graphviz = rustPackages."unknown".rustc_graphviz."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_interface."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_interface";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_interface");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc-main/llvm" || rootFeatures' ? "rustc_driver/llvm" || rootFeatures' ? "rustc_interface/llvm") "llvm")
      (lib.optional (rootFeatures' ? "rustc-main/llvm" || rootFeatures' ? "rustc_driver/llvm" || rootFeatures' ? "rustc_interface/llvm" || rootFeatures' ? "rustc_interface/rustc_codegen_llvm") "rustc_codegen_llvm")
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.3.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_lowering = rustPackages."unknown".rustc_ast_lowering."0.0.0" { inherit profileName; };
      rustc_ast_passes = rustPackages."unknown".rustc_ast_passes."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_builtin_macros = rustPackages."unknown".rustc_builtin_macros."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "rustc-main/llvm" || rootFeatures' ? "rustc_driver/llvm" || rootFeatures' ? "rustc_interface/llvm" || rootFeatures' ? "rustc_interface/rustc_codegen_llvm" then "rustc_codegen_llvm" else null } = rustPackages."unknown".rustc_codegen_llvm."0.0.0" { inherit profileName; };
      rustc_codegen_ssa = rustPackages."unknown".rustc_codegen_ssa."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_expand = rustPackages."unknown".rustc_expand."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_incremental = rustPackages."unknown".rustc_incremental."0.0.0" { inherit profileName; };
      rustc_lint = rustPackages."unknown".rustc_lint."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_mir = rustPackages."unknown".rustc_mir."0.0.0" { inherit profileName; };
      rustc_mir_build = rustPackages."unknown".rustc_mir_build."0.0.0" { inherit profileName; };
      rustc_parse = rustPackages."unknown".rustc_parse."0.0.0" { inherit profileName; };
      rustc_passes = rustPackages."unknown".rustc_passes."0.0.0" { inherit profileName; };
      rustc_plugin_impl = rustPackages."unknown".rustc_plugin_impl."0.0.0" { inherit profileName; };
      rustc_privacy = rustPackages."unknown".rustc_privacy."0.0.0" { inherit profileName; };
      rustc_resolve = rustPackages."unknown".rustc_resolve."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_symbol_mangling = rustPackages."unknown".rustc_symbol_mangling."0.0.0" { inherit profileName; };
      rustc_trait_selection = rustPackages."unknown".rustc_trait_selection."0.0.0" { inherit profileName; };
      rustc_traits = rustPackages."unknown".rustc_traits."0.0.0" { inherit profileName; };
      rustc_ty = rustPackages."unknown".rustc_ty."0.0.0" { inherit profileName; };
      rustc_typeck = rustPackages."unknown".rustc_typeck."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
    devDependencies = {
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_lexer."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_lexer";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_lexer");
    dependencies = {
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
    };
    devDependencies = {
      expect_test = rustPackages."registry+https://github.com/rust-lang/crates.io-index".expect-test."1.0.1" { inherit profileName; };
    };
  });
  
  "unknown".rustc_lint."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_lint";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_lint");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_trait_selection = rustPackages."unknown".rustc_trait_selection."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      unicode_security = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-security."0.0.5" { inherit profileName; };
    };
  });
  
  "unknown".rustc_llvm."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_llvm";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_llvm");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc_llvm/emscripten") "emscripten")
      (lib.optional (rootFeatures' ? "rustc_llvm/static-libstdcpp") "static-libstdcpp")
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
    buildDependencies = {
      build_helper = buildRustPackages."unknown".build_helper."0.1.0" { profileName = "__noProfile"; };
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".rustc_macros."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_macros";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_macros");
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      synstructure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.4" { inherit profileName; };
    };
  });
  
  "unknown".rustc_metadata."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_metadata";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_metadata");
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      memmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap."0.7.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_expand = rustPackages."unknown".rustc_expand."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_hir_pretty = rustPackages."unknown".rustc_hir_pretty."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      snap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".snap."1.0.1" { inherit profileName; };
      stable_deref_trait = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.2.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "unknown".rustc_middle."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_middle";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_middle");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      chalk_ir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-ir."0.29.0" { inherit profileName; };
      measureme = rustPackages."registry+https://github.com/rust-lang/crates.io-index".measureme."0.7.1" { inherit profileName; };
      polonius_engine = rustPackages."registry+https://github.com/rust-lang/crates.io-index".polonius-engine."0.12.1" { inherit profileName; };
      rustc_rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.3.0" { inherit profileName; };
      rustc_apfloat = rustPackages."unknown".rustc_apfloat."0.0.0" { inherit profileName; };
      rustc_arena = rustPackages."unknown".rustc_arena."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_query_system = rustPackages."unknown".rustc_query_system."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_mir."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_mir";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_mir");
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      log_settings = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log_settings."0.1.2" { inherit profileName; };
      polonius_engine = rustPackages."registry+https://github.com/rust-lang/crates.io-index".polonius-engine."0.12.1" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      rustc_apfloat = rustPackages."unknown".rustc_apfloat."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_graphviz = rustPackages."unknown".rustc_graphviz."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_trait_selection = rustPackages."unknown".rustc_trait_selection."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_mir_build."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_mir_build";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_mir_build");
    dependencies = {
      rustc_apfloat = rustPackages."unknown".rustc_apfloat."0.0.0" { inherit profileName; };
      rustc_arena = rustPackages."unknown".rustc_arena."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_trait_selection = rustPackages."unknown".rustc_trait_selection."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_parse."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_parse";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_parse");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.13" { inherit profileName; };
    };
  });
  
  "unknown".rustc_parse_format."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_parse_format";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_parse_format");
    dependencies = {
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_passes."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_passes";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_passes");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_trait_selection = rustPackages."unknown".rustc_trait_selection."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_plugin_impl."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_plugin_impl";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_plugin_impl");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_lint = rustPackages."unknown".rustc_lint."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
    };
  });
  
  "unknown".rustc_privacy."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_privacy";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_privacy");
    dependencies = {
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_typeck = rustPackages."unknown".rustc_typeck."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_query_system."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_query_system";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_query_system");
    dependencies = {
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" { inherit profileName; };
      rustc_rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon-core."0.3.0" { inherit profileName; };
      rustc_arena = rustPackages."unknown".rustc_arena."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_resolve."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_resolve";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_resolve");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      rustc_arena = rustPackages."unknown".rustc_arena."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_lowering = rustPackages."unknown".rustc_ast_lowering."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_expand = rustPackages."unknown".rustc_expand."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_metadata = rustPackages."unknown".rustc_metadata."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_save_analysis."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_save_analysis";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_save_analysis");
    dependencies = {
      rls_data = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-data."0.19.0" { inherit profileName; };
      rls_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rls-span."0.5.2" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."unknown".rustc_ast_pretty."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_hir_pretty = rustPackages."unknown".rustc_hir_pretty."0.0.0" { inherit profileName; };
      rustc_lexer = rustPackages."unknown".rustc_lexer."0.1.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_serialize."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_serialize";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_serialize");
    dependencies = {
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.6.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
    };
    devDependencies = {
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".rustc_session."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_session";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_session");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_feature = rustPackages."unknown".rustc_feature."0.0.0" { inherit profileName; };
      rustc_fs_util = rustPackages."unknown".rustc_fs_util."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_span."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_span";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_span");
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      md5 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".md-5."0.8.0" { inherit profileName; };
      rustc_arena = rustPackages."unknown".rustc_arena."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      scoped_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.0" { inherit profileName; };
      sha1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha-1."0.8.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
    };
  });
  
  "unknown".rustc_symbol_mangling."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_symbol_mangling";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_symbol_mangling");
    dependencies = {
      punycode = rustPackages."registry+https://github.com/rust-lang/crates.io-index".punycode."0.4.1" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_target."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_target";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_target");
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_serialize = rustPackages."unknown".rustc_serialize."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_tools_util."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_tools_util";
    version = "0.2.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/clippy/rustc_tools_util");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustc_tools_util/deny-warnings") "deny-warnings")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc_tools_util."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_tools_util";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b725dadae9fabc488df69a287f5a99c5eaf5d10853842a8a3dfac52476f544ee"; };
  });
  
  "unknown".rustc_trait_selection."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_trait_selection";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_trait_selection");
    dependencies = {
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_parse_format = rustPackages."unknown".rustc_parse_format."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_traits."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_traits";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_traits");
    dependencies = {
      chalk_engine = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-engine."0.29.0" { inherit profileName; };
      chalk_ir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-ir."0.29.0" { inherit profileName; };
      chalk_solve = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chalk-solve."0.29.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_trait_selection = rustPackages."unknown".rustc_trait_selection."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_ty."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_ty";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_ty");
    dependencies = {
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_trait_selection = rustPackages."unknown".rustc_trait_selection."0.0.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "unknown".rustc_typeck."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_typeck";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/compiler/rustc_typeck");
    dependencies = {
      rustc_arena = rustPackages."unknown".rustc_arena."0.0.0" { inherit profileName; };
      rustc_ast = rustPackages."unknown".rustc_ast."0.0.0" { inherit profileName; };
      rustc_attr = rustPackages."unknown".rustc_attr."0.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."unknown".rustc_data_structures."0.0.0" { inherit profileName; };
      rustc_errors = rustPackages."unknown".rustc_errors."0.0.0" { inherit profileName; };
      rustc_hir = rustPackages."unknown".rustc_hir."0.0.0" { inherit profileName; };
      rustc_hir_pretty = rustPackages."unknown".rustc_hir_pretty."0.0.0" { inherit profileName; };
      rustc_index = rustPackages."unknown".rustc_index."0.0.0" { inherit profileName; };
      rustc_infer = rustPackages."unknown".rustc_infer."0.0.0" { inherit profileName; };
      rustc_macros = buildRustPackages."unknown".rustc_macros."0.1.0" { profileName = "__noProfile"; };
      rustc_middle = rustPackages."unknown".rustc_middle."0.0.0" { inherit profileName; };
      rustc_session = rustPackages."unknown".rustc_session."0.0.0" { inherit profileName; };
      rustc_span = rustPackages."unknown".rustc_span."0.0.0" { inherit profileName; };
      rustc_target = rustPackages."unknown".rustc_target."0.0.0" { inherit profileName; };
      rustc_trait_selection = rustPackages."unknown".rustc_trait_selection."0.0.0" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "rustc_version";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a"; };
    dependencies = {
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
    };
  });
  
  "unknown".rustdoc."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustdoc";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/librustdoc");
    dependencies = {
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
      minifier = rustPackages."registry+https://github.com/rust-lang/crates.io-index".minifier."0.0.33" { inherit profileName; };
      pulldown_cmark = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pulldown-cmark."0.8.0" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-rayon."0.3.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
    };
    devDependencies = {
      expect_test = rustPackages."registry+https://github.com/rust-lang/crates.io-index".expect-test."1.0.1" { inherit profileName; };
    };
  });
  
  "unknown".rustdoc-themes."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "rustdoc-themes";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustdoc-themes");
  });
  
  "unknown".rustdoc-tool."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "rustdoc-tool";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustdoc");
    dependencies = {
      rustdoc = rustPackages."unknown".rustdoc."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustfix."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "rustfix";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f2c50b74badcddeb8f7652fa8323ce440b95286f8e4b64ebfd871c609672704e"; };
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
    };
  });
  
  "unknown".rustfmt-config_proc_macro."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "rustfmt-config_proc_macro";
    version = "0.2.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustfmt/config_proc_macro");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "rustfmt-config_proc_macro/debug-with-rustfmt") "debug-with-rustfmt")
      [ "default" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
    devDependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "unknown".rustfmt-nightly."1.4.24" = overridableMkRustCrate (profileName: rec {
    name = "rustfmt-nightly";
    version = "1.4.24";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/rustfmt");
    features = builtins.concatLists [
      [ "cargo-fmt" ]
      [ "default" ]
      (lib.optional (rootFeatures' ? "rustfmt-nightly/generic-simd") "generic-simd")
      [ "rustfmt-format-diff" ]
    ];
    dependencies = {
      annotate_snippets = rustPackages."registry+https://github.com/rust-lang/crates.io-index".annotate-snippets."0.6.1" { inherit profileName; };
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.32" { inherit profileName; };
      bytecount = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytecount."0.6.0" { inherit profileName; };
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.8.2" { inherit profileName; };
      derive_new = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive-new."0.5.8" { profileName = "__noProfile"; };
      diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diff."0.1.12" { inherit profileName; };
      dirs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs."2.0.2" { inherit profileName; };
      env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.6.2" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      ignore = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ignore."0.4.16" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.8.2" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      rustc_ast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast."686.0.0" { inherit profileName; };
      rustc_ast_pretty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_ast_pretty."686.0.0" { inherit profileName; };
      rustc_attr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_attr."686.0.0" { inherit profileName; };
      rustc_data_structures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_data_structures."686.0.0" { inherit profileName; };
      rustc_errors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_errors."686.0.0" { inherit profileName; };
      rustc_expand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_expand."686.0.0" { inherit profileName; };
      rustc_parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_parse."686.0.0" { inherit profileName; };
      rustc_session = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_session."686.0.0" { inherit profileName; };
      rustc_span = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-ap-rustc_span."686.0.0" { inherit profileName; };
      rustc_workspace_hack = rustPackages."unknown".rustc-workspace-hack."1.0.0" { inherit profileName; };
      rustfmt_config_proc_macro = buildRustPackages."unknown".rustfmt-config_proc_macro."0.2.0" { profileName = "__noProfile"; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      structopt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".structopt."0.3.16" { inherit profileName; };
      term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".term."0.6.1" { inherit profileName; };
      thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.20" { inherit profileName; };
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.7" { inherit profileName; };
      unicode_segmentation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.6.0" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
      unicode_categories = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.5" = overridableMkRustCrate (profileName: rec {
    name = "ryu";
    version = "1.0.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "71d301d4193d031abdd79ff7e3dd721168a9572ef3fe51a1517aba235bd8f86e"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" = overridableMkRustCrate (profileName: rec {
    name = "same-file";
    version = "1.0.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.19" = overridableMkRustCrate (profileName: rec {
    name = "schannel";
    version = "0.1.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8f05ba609c234e60bee0d547fe94a4c7e9da733d1c962cf6e59efa4cd9c8bc75"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".scoped-tls."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "scoped-tls";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ea6a9290e3c9cf0f18145ef7ffa62d68ee0bf5fcd651017e586dc7fd5da448c2"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "scopeguard";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "semver";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "serde" ]
    ];
    dependencies = {
      semver_parser = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".semver."0.10.0" = overridableMkRustCrate (profileName: rec {
    name = "semver";
    version = "0.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "394cec28fa623e00903caf7ba4fa6fb9a0e260280bb8cdbbba029611108a0190"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "serde" ]
    ];
    dependencies = {
      semver_parser = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "semver-parser";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" = overridableMkRustCrate (profileName: rec {
    name = "serde";
    version = "1.0.115";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e54c9a88f2da7238af84b5101443f0c0d0a3bbdc455e34a5c9497b1903ed55d5"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "derive" ]
      [ "serde_derive" ]
      [ "std" ]
    ];
    dependencies = {
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" = overridableMkRustCrate (profileName: rec {
    name = "serde_derive";
    version = "1.0.115";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "609feed1d0a73cc36a0182a840a9b37b4a82f0b1150369f0536a9e3f2a31dc48"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_ignored."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "serde_ignored";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1c2c7d39d14f2f2ea82239de71594782f186fd03501ac81f0ce08e674819ff2f"; };
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" = overridableMkRustCrate (profileName: rec {
    name = "serde_json";
    version = "1.0.57";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "164eacbdb13512ec2745fb09d51fd5b22b0d65ed294a1dcf7285a360c80a675c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "raw_value" ]
      [ "std" ]
    ];
    dependencies = {
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.6" { inherit profileName; };
      ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.5" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_repr."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "serde_repr";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2dc6b7951b17b051f3210b063f12cc17320e2fe30ae05b0fe2a3abb068551c76"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".sha-1."0.8.2" = overridableMkRustCrate (profileName: rec {
    name = "sha-1";
    version = "0.8.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f7d94d0bede923b3cea61f3f1ff57ff8cdfd77b400fb8f9998949e0cf04163df"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      block_buffer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.7.3" { inherit profileName; };
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.8.1" { inherit profileName; };
      fake_simd = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fake-simd."0.1.2" { inherit profileName; };
      opaque_debug = rustPackages."registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.2.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".sha2."0.9.1" = overridableMkRustCrate (profileName: rec {
    name = "sha2";
    version = "0.9.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2933378ddfeda7ea26f48c555bdad8bb446bf8a3d17832dc83e380d444cfb8c1"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      block_buffer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.9.0" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" then "cpuid_bool" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpuid-bool."0.1.2" { inherit profileName; };
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.9.0" { inherit profileName; };
      opaque_debug = rustPackages."registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.3.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.0.9" = overridableMkRustCrate (profileName: rec {
    name = "sharded-slab";
    version = "0.0.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "06d5a3f5166fb5b42a5439f2eee8b9de149e235961e3eb21c5808fc3ea17ff3e"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".shell-escape."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "shell-escape";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "45bb67a18fa91266cc7807181f62f9178a6873bfad7dc788c42e6430db40184f"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".shlex."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "shlex";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7fdf1b9db47230893d76faad238fd6097fd6d6a9245cd7a4d90dbd639536bbd2"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.2.1" = overridableMkRustCrate (profileName: rec {
    name = "signal-hook-registry";
    version = "1.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a3e12110bc539e657a646068aaf5eb5b63af9d0c1f7b29c97113fad80e15f035"; };
    dependencies = {
      arc_swap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arc-swap."0.4.7" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".siphasher."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "siphasher";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fa8f3741c7372e75519bd9346068370c9cdaabcc1f9599cbcf2a2719352286b7"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".sized-chunks."0.6.2" = overridableMkRustCrate (profileName: rec {
    name = "sized-chunks";
    version = "0.6.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1ec31ceca5644fa6d444cc77548b88b67f46db6f7c71683b0f9336e671830d2f"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      bitmaps = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitmaps."2.1.0" { inherit profileName; };
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.12.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" = overridableMkRustCrate (profileName: rec {
    name = "slab";
    version = "0.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c111b5bd5695e56cffe5129854aa230b39c93a305372fdbb2668ca2394eea9f8"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".smallvec."0.6.13" = overridableMkRustCrate (profileName: rec {
    name = "smallvec";
    version = "0.6.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f7b0758c52e15a8b5e3691eae6cc559f08eee9406e548a4477ba4e67770a82b6"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "may_dangle" ]
      [ "std" ]
      [ "union" ]
    ];
    dependencies = {
      maybe_uninit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" = overridableMkRustCrate (profileName: rec {
    name = "smallvec";
    version = "1.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fbee7696b84bbf3d89a1c2eccff0850e3047ed46bfcd2e92c29a2d074d57e252"; };
    features = builtins.concatLists [
      [ "may_dangle" ]
      [ "union" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".snap."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "snap";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "da73c8f77aebc0e40c300b93f0a5f1bece7a248a36eee287d4e095f35c7b7d6e"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.12" = overridableMkRustCrate (profileName: rec {
    name = "socket2";
    version = "0.3.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "03088793f677dce356f3ccc2edb1b314ad191ab702a5de3faf49304f7e104918"; };
    dependencies = {
      ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "redox" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "redox" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "stable_deref_trait";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".stacker."0.1.12" = overridableMkRustCrate (profileName: rec {
    name = "stacker";
    version = "0.1.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "21ccb4c06ec57bc82d0f610f1a2963d7648700e43a6f513e564b9c89f7991786"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      psm = rustPackages."registry+https://github.com/rust-lang/crates.io-index".psm."0.1.11" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".std."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "std";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/std");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "std/addr2line" || rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "addr2line")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace") "backtrace")
      (lib.optional (rootFeatures' ? "std/compiler-builtins-c" || rootFeatures' ? "test/compiler-builtins-c") "compiler-builtins-c")
      (lib.optional (rootFeatures' ? "std/compiler-builtins-mem" || rootFeatures' ? "test/compiler-builtins-mem") "compiler-builtins-mem")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "std/gimli-symbolize" || rootFeatures' ? "test/backtrace") "gimli-symbolize")
      (lib.optional (rootFeatures' ? "std/llvm-libunwind" || rootFeatures' ? "test/llvm-libunwind") "llvm-libunwind")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "std/miniz_oxide" || rootFeatures' ? "test/backtrace") "miniz_oxide")
      (lib.optional (rootFeatures' ? "std/backtrace" || rootFeatures' ? "std/object" || rootFeatures' ? "test/backtrace") "object")
      (lib.optional (rootFeatures' ? "std/panic-unwind") "panic-unwind")
      (lib.optional (rootFeatures' ? "std/panic_immediate_abort" || rootFeatures' ? "test/panic_immediate_abort") "panic_immediate_abort")
      (lib.optional (rootFeatures' ? "std/panic-unwind" || rootFeatures' ? "std/panic_unwind" || rootFeatures' ? "test/default" || rootFeatures' ? "test/panic-unwind") "panic_unwind")
      (lib.optional (rootFeatures' ? "std/profiler" || rootFeatures' ? "test/profiler") "profiler")
      (lib.optional (rootFeatures' ? "std/profiler" || rootFeatures' ? "std/profiler_builtins" || rootFeatures' ? "test/profiler") "profiler_builtins")
      (lib.optional (rootFeatures' ? "std/std_detect_dlsym_getauxval" || rootFeatures' ? "test/default" || rootFeatures' ? "test/std_detect_dlsym_getauxval") "std_detect_dlsym_getauxval")
      (lib.optional (rootFeatures' ? "std/std_detect_file_io" || rootFeatures' ? "test/default" || rootFeatures' ? "test/std_detect_file_io") "std_detect_file_io")
    ];
    dependencies = {
      ${ if rootFeatures' ? "std/addr2line" || rootFeatures' ? "std/backtrace" || rootFeatures' ? "test/backtrace" then "addr2line" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".addr2line."0.13.0" { inherit profileName; };
      alloc = rustPackages."unknown".alloc."0.0.0" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten") || hostPlatform.parsed.vendor.name == "fortanix" && hostPlatform.parsed.abi.name == "sgx" then "dlmalloc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dlmalloc."0.1.4" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-fortanix-unknown-sgx" then "fortanix_sgx_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fortanix-sgx-abi."0.3.3" { inherit profileName; };
      hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.9.0" { inherit profileName; };
      ${ if (hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "aarch64") && hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.15" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "std/miniz_oxide" || rootFeatures' ? "test/backtrace" then "miniz_oxide" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.4.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/backtrace" || rootFeatures' ? "std/object" || rootFeatures' ? "test/backtrace" then "object" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".object."0.20.0" { inherit profileName; };
      panic_abort = rustPackages."unknown".panic_abort."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/panic-unwind" || rootFeatures' ? "std/panic_unwind" || rootFeatures' ? "test/default" || rootFeatures' ? "test/panic-unwind" then "panic_unwind" else null } = rustPackages."unknown".panic_unwind."0.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "std/profiler" || rootFeatures' ? "std/profiler_builtins" || rootFeatures' ? "test/profiler" then "profiler_builtins" else null } = rustPackages."unknown".profiler_builtins."0.0.0" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" { inherit profileName; };
      unwind = rustPackages."unknown".unwind."0.0.0" { inherit profileName; };
      ${ if hostPlatform.config == "wasm32-wasi" then "wasi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.9.0+wasi-snapshot-preview1" { inherit profileName; };
    };
    devDependencies = {
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".string_cache."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "string_cache";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2940c75beb4e3bf3a494cef919a747a2cb81e52571e212bfbd185074add7208a"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      debug_unreachable = rustPackages."registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.4" { inherit profileName; };
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.8.0" { inherit profileName; };
      precomputed_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".precomputed-hash."0.1.1" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".string_cache_codegen."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "string_cache_codegen";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f24c8e5e19d22a726626f1a5e16fe15b132dcf21d10177fa5a45ce7962996b97"; };
    dependencies = {
      phf_generator = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.8.0" { inherit profileName; };
      phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.8.0" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strip-ansi-escapes."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "strip-ansi-escapes";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9d63676e2abafa709460982ddc02a3bb586b6d15a49b75c212e06edd3933acee"; };
    dependencies = {
      vte = rustPackages."registry+https://github.com/rust-lang/crates.io-index".vte."0.3.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strsim."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "strsim";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".structopt."0.3.16" = overridableMkRustCrate (profileName: rec {
    name = "structopt";
    version = "0.3.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "de5472fb24d7e80ae84a7801b7978f95a19ec32cb1876faea59ab711eb901976"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.3" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      structopt_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".structopt-derive."0.4.9" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".structopt-derive."0.4.9" = overridableMkRustCrate (profileName: rec {
    name = "structopt-derive";
    version = "0.4.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1e0eb37335aeeebe51be42e2dc07f031163fbabfa6ac67d7ea68b5c2f68d5f99"; };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.3.1" { inherit profileName; };
      proc_macro_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strum."0.18.0" = overridableMkRustCrate (profileName: rec {
    name = "strum";
    version = "0.18.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "57bd81eb48f4c437cadc685403cad539345bf703d78e63707418431cecd4522b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.18.0" = overridableMkRustCrate (profileName: rec {
    name = "strum_macros";
    version = "0.18.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "87c85aa3f8ea653bfd3ddf25f7ee357ee4d204731f6aa9ad04002306f6e2774c"; };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.3.1" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "1.0.38";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e69abc24912995b3038597a7a593be5053eb0fb44f3cc5beec0deb421790c1f4"; };
    features = builtins.concatLists [
      [ "clone-impls" ]
      [ "default" ]
      [ "derive" ]
      [ "extra-traits" ]
      [ "fold" ]
      [ "full" ]
      [ "parsing" ]
      [ "printing" ]
      [ "proc-macro" ]
      [ "quote" ]
      [ "visit" ]
      [ "visit-mut" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.4" = overridableMkRustCrate (profileName: rec {
    name = "synstructure";
    version = "0.12.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b834f2d66f734cb897113e34aaff2f1ab4719ca946f9a7358dba8f8064148701"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tar."0.4.29" = overridableMkRustCrate (profileName: rec {
    name = "tar";
    version = "0.4.29";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c8a4c1d0bee3230179544336c15eefb563cf0302955d962e456542323e8c2e8a"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "xattr" ]
    ];
    dependencies = {
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.12" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
      ${ if hostPlatform.isUnix then "xattr" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xattr."0.2.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" = overridableMkRustCrate (profileName: rec {
    name = "tempfile";
    version = "3.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7a6e24d9338a0a5be79593e2fa15a648add6138caa803e2d5bc782c371732ca9"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
      remove_dir_all = rustPackages."registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tendril."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "tendril";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "707feda9f2582d5d680d733e38755547a3e8fb471e7ba11452ecfd9ce93a5d3b"; };
    dependencies = {
      futf = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futf."0.1.4" { inherit profileName; };
      mac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; };
      utf8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf-8."0.7.5" { inherit profileName; };
    };
  });
  
  "unknown".term."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "term";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/term");
    dependencies = {
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      std = rustPackages."unknown".std."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".term."0.6.1" = overridableMkRustCrate (profileName: rec {
    name = "term";
    version = "0.6.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c0863a3345e70f61d613eab32ee046ccd1bcc5f9105fe402c61fcd0c13eeb8b5"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      dirs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs."2.0.2" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "termcolor";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bb6bfa289a4d7c5766392812c0a1f4c1ba45afa1ad47803c11e1f407d846d75f"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".termize."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "termize";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1706be6b564323ce7092f5f7e6b118a14c8ef7ed0e69c8c5329c914a9f101295"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "unknown".test."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "test";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/test");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "test/backtrace") "backtrace")
      (lib.optional (rootFeatures' ? "test/compiler-builtins-c") "compiler-builtins-c")
      (lib.optional (rootFeatures' ? "test/compiler-builtins-mem") "compiler-builtins-mem")
      (lib.optional (rootFeatures' ? "test/default") "default")
      (lib.optional (rootFeatures' ? "test/llvm-libunwind") "llvm-libunwind")
      (lib.optional (rootFeatures' ? "test/default" || rootFeatures' ? "test/panic-unwind") "panic-unwind")
      (lib.optional (rootFeatures' ? "test/panic_immediate_abort") "panic_immediate_abort")
      (lib.optional (rootFeatures' ? "test/profiler") "profiler")
      (lib.optional (rootFeatures' ? "test/default" || rootFeatures' ? "test/std_detect_dlsym_getauxval") "std_detect_dlsym_getauxval")
      (lib.optional (rootFeatures' ? "test/default" || rootFeatures' ? "test/std_detect_file_io") "std_detect_file_io")
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      panic_abort = rustPackages."unknown".panic_abort."0.0.0" { inherit profileName; };
      panic_unwind = rustPackages."unknown".panic_unwind."0.0.0" { inherit profileName; };
      proc_macro = rustPackages."unknown".proc_macro."0.0.0" { inherit profileName; };
      std = rustPackages."unknown".std."0.0.0" { inherit profileName; };
      term = rustPackages."unknown".term."0.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tester."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "tester";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ee72ec31009a42b53de9a6b7d8f462b493ab3b1e4767bda1fcdbb52127f13b6c"; };
    dependencies = {
      getopts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getopts."0.2.21" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".term."0.6.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".textwrap."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "textwrap";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060"; };
    dependencies = {
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.20" = overridableMkRustCrate (profileName: rec {
    name = "thiserror";
    version = "1.0.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7dfdd070ccd8ccb78f4ad66bf1982dc37f620ef696c6b5028fe2ed83dd3d0d08"; };
    dependencies = {
      thiserror_impl = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.20" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.20" = overridableMkRustCrate (profileName: rec {
    name = "thiserror-impl";
    version = "1.0.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bd80fc12f73063ac132ac92aceea36734f04a1d93c1240c6944e23a3b8841793"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "thread_local";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d40c6d1b69745a6ec6fb1ca717914848da4b44ae29d9b3080cbee91d72a69b14"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });
  
  "unknown".tidy."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "tidy";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/tidy");
    dependencies = {
      cargo_metadata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cargo_metadata."0.11.1" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
    };
  });
  
  "unknown".tier-check."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "tier-check";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/tier-check");
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".time."0.1.43" = overridableMkRustCrate (profileName: rec {
    name = "time";
    version = "0.1.43";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca8a50ef2360fbd1eeb0ecd46795a87a19024eb4b53c5dc916ca1fd95fe62438"; };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tinyvec."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "tinyvec";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "238ce071d267c5710f9d31451efec16c5ee22de34df17cc05e56cbc92e967117"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" = overridableMkRustCrate (profileName: rec {
    name = "tokio";
    version = "0.1.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5a09c0b5bb588872ab2f09afa13ee6e9dac11e10a0ec9e8e3ba39a5a5d530af6"; };
    features = builtins.concatLists [
      [ "bytes" ]
      [ "codec" ]
      [ "default" ]
      [ "fs" ]
      [ "io" ]
      [ "mio" ]
      [ "num_cpus" ]
      [ "reactor" ]
      [ "rt-full" ]
      [ "sync" ]
      [ "tcp" ]
      [ "timer" ]
      [ "tokio-codec" ]
      [ "tokio-current-thread" ]
      [ "tokio-executor" ]
      [ "tokio-fs" ]
      [ "tokio-io" ]
      [ "tokio-reactor" ]
      [ "tokio-sync" ]
      [ "tokio-tcp" ]
      [ "tokio-threadpool" ]
      [ "tokio-timer" ]
      [ "tokio-udp" ]
      [ "tokio-uds" ]
      [ "udp" ]
      [ "uds" ]
    ];
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.12" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      tokio_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.2" { inherit profileName; };
      tokio_current_thread = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-current-thread."0.1.7" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.10" { inherit profileName; };
      tokio_fs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-fs."0.1.7" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.13" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.12" { inherit profileName; };
      tokio_sync = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-sync."0.1.8" { inherit profileName; };
      tokio_tcp = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-tcp."0.1.4" { inherit profileName; };
      tokio_threadpool = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-threadpool."0.1.18" { inherit profileName; };
      tokio_timer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-timer."0.2.13" { inherit profileName; };
      tokio_udp = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-udp."0.1.6" { inherit profileName; };
      ${ if hostPlatform.isUnix then "tokio_uds" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-uds."0.2.7" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "tokio-codec";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "25b2998660ba0e70d18684de5d06b70b70a3a747469af9dea7618cc59e75976b"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.12" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.13" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-current-thread."0.1.7" = overridableMkRustCrate (profileName: rec {
    name = "tokio-current-thread";
    version = "0.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b1de0e32a83f131e002238d7ccde18211c0a5397f60cbfffcb112868c2e0e20e"; };
    dependencies = {
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.10" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "tokio-executor";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fb2d1b8f4548dbf5e1f7818512e9c406860678f29c300cdf0ebac72d1a3a1671"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-fs."0.1.7" = overridableMkRustCrate (profileName: rec {
    name = "tokio-fs";
    version = "0.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "297a1206e0ca6302a0eed35b700d292b275256f596e2f3fea7729d5e629b6ff4"; };
    dependencies = {
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.13" { inherit profileName; };
      tokio_threadpool = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-threadpool."0.1.18" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.13" = overridableMkRustCrate (profileName: rec {
    name = "tokio-io";
    version = "0.1.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "57fc868aae093479e3131e3d165c93b1c7474109d13c90ec0dda2a1bbfff0674"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.12" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-named-pipes."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "tokio-named-pipes";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9d282d483052288b2308ba5ee795f5673b159c9bdf63c385a05609da782a5eae"; };
    dependencies = {
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.12" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "mio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "mio_named_pipes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-named-pipes."0.1.7" { inherit profileName; };
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/client" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" || rootFeatures' ? "rls-rustc/ipc" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.1.22" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-process."0.2.5" = overridableMkRustCrate (profileName: rec {
    name = "tokio-process";
    version = "0.2.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "382d90f43fa31caebe5d3bc6cfd854963394fff3b8cb59d5146607aaae7e7e43"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "crossbeam_queue" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.1.2" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      ${ if hostPlatform.isUnix then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      ${ if hostPlatform.isUnix then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      ${ if hostPlatform.isUnix then "mio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      ${ if hostPlatform.isWindows then "mio_named_pipes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-named-pipes."0.1.7" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.13" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.12" { inherit profileName; };
      ${ if hostPlatform.isUnix then "tokio_signal" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-signal."0.2.9" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.12" = overridableMkRustCrate (profileName: rec {
    name = "tokio-reactor";
    version = "0.1.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "09bc590ec4ba8ba87652da2068d150dcada2cfa2e07faae270a5e0409aa51351"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.9.0" { inherit profileName; };
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.10" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.13" { inherit profileName; };
      tokio_sync = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-sync."0.1.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-service."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "tokio-service";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "24da22d077e0f15f55162bdbdc661228c1581892f52074fb242678d015b45162"; };
    dependencies = {
      ${ if rootFeatures' ? "rls/default" || rootFeatures' ? "rls/ipc" || rootFeatures' ? "rls-ipc/jsonrpc-ipc-server" || rootFeatures' ? "rls-ipc/server" then "futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-signal."0.2.9" = overridableMkRustCrate (profileName: rec {
    name = "tokio-signal";
    version = "0.2.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d0c34c6e548f101053321cba3da7cbb87a610b85555884c41b07da2eb91aff12"; };
    dependencies = {
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      ${ if hostPlatform.isUnix then "mio_uds" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-uds."0.6.8" { inherit profileName; };
      ${ if hostPlatform.isUnix then "signal_hook_registry" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.2.1" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.10" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.13" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.12" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-sync."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "tokio-sync";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "edfe50152bc8164fcc456dab7891fa9bf8beaf01c5ee7e1dd43a397c3cf87dee"; };
    dependencies = {
      fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-tcp."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "tokio-tcp";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "98df18ed66e3b72e742f185882a9e201892407957e45fbff8da17ae7a7c51f72"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.12" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      iovec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.13" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.12" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-threadpool."0.1.18" = overridableMkRustCrate (profileName: rec {
    name = "tokio-threadpool";
    version = "0.1.18";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "df720b6581784c118f0eb4310796b12b1d242a7eb95f716a8367855325c25f89"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" { inherit profileName; };
      crossbeam_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.2.3" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.10" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-timer."0.2.13" = overridableMkRustCrate (profileName: rec {
    name = "tokio-timer";
    version = "0.2.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "93044f2d313c95ff1cb7809ce9a7a05735b012288a888b62d4434fd58c94f296"; };
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      tokio_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-executor."0.1.10" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-udp."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "tokio-udp";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e2a0b10e610b39c38b031a2fcab08e4b82f16ece36504988dcbd81dbba650d82"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.12" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      tokio_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.2" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.13" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.12" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-uds."0.2.7" = overridableMkRustCrate (profileName: rec {
    name = "tokio-uds";
    version = "0.2.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ab57a4ac4111c8c9dbcf70779f6fc8bc35ae4b2454809febac840ad19bd7e4e0"; };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.4.12" { inherit profileName; };
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.1.29" { inherit profileName; };
      iovec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      mio_uds = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-uds."0.6.8" { inherit profileName; };
      tokio_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-codec."0.1.2" { inherit profileName; };
      tokio_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io."0.1.13" { inherit profileName; };
      tokio_reactor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-reactor."0.1.12" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".toml."0.5.7" = overridableMkRustCrate (profileName: rec {
    name = "toml";
    version = "0.5.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "75cf45bb0bef80604d001caaec0d09da99611b3c0fd39d3080468875cdb65645"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" = overridableMkRustCrate (profileName: rec {
    name = "tracing";
    version = "0.1.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6d79ca061b032d6ce30c660fded31189ca0b9922bf483cd70759f13a2d86786c"; };
    features = builtins.concatLists [
      [ "attributes" ]
      [ "default" ]
      (lib.optional (rootFeatures' ? "rustc-main/max_level_info" || rootFeatures' ? "rustc_driver/max_level_info") "max_level_info")
      [ "std" ]
      [ "tracing-attributes" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      tracing_attributes = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.11" { profileName = "__noProfile"; };
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.15" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.11" = overridableMkRustCrate (profileName: rec {
    name = "tracing-attributes";
    version = "0.1.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "80e0ccfc3378da0cce270c946b676a376943f5cd16aeba64568e7939806f4ada"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.15" = overridableMkRustCrate (profileName: rec {
    name = "tracing-core";
    version = "0.1.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4f0e00789804e99b20f12bc7003ca416309d28a6f495d6af58d1e2c2842461b5"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "std" ]
    ];
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "tracing-log";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5e0f8c7178e13481ff6765bd169b33e8d554c5d2bbede5e32c356194be02b9b9"; };
    features = builtins.concatLists [
      [ "log-tracer" ]
      [ "std" ]
    ];
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.15" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tracing-serde."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "tracing-serde";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b6ccba2f8f16e0ed268fc765d9b7ff22e965e7185d32f8f1ec8294fe17d86e79"; };
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.15" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.2.11" = overridableMkRustCrate (profileName: rec {
    name = "tracing-subscriber";
    version = "0.2.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "abd165311cc4d7a555ad11cc77a37756df836182db0d81aac908c8184c584f40"; };
    features = builtins.concatLists [
      [ "ansi" ]
      [ "ansi_term" ]
      [ "chrono" ]
      [ "default" ]
      [ "env-filter" ]
      [ "fmt" ]
      [ "json" ]
      [ "lazy_static" ]
      [ "matchers" ]
      [ "parking_lot" ]
      [ "regex" ]
      [ "registry" ]
      [ "serde" ]
      [ "serde_json" ]
      [ "sharded-slab" ]
      [ "smallvec" ]
      [ "thread_local" ]
      [ "tracing-log" ]
      [ "tracing-serde" ]
    ];
    dependencies = {
      ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.12.1" { inherit profileName; };
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.15" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      matchers = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matchers."0.0.1" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      sharded_slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.0.9" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" { inherit profileName; };
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.15" { inherit profileName; };
      tracing_log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.1.1" { inherit profileName; };
      tracing_serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-serde."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tracing-tree."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "tracing-tree";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e1a3dc4774db3a6b2d66a4f8d8de670e874ec3ed55615860c994927419b32c5f"; };
    dependencies = {
      ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.12.1" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.15" { inherit profileName; };
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" { inherit profileName; };
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.2.11" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".typenum."1.12.0" = overridableMkRustCrate (profileName: rec {
    name = "typenum";
    version = "1.12.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "373c8a200f9e67a0c95e62a4f52fbf80c23b4381c05a17845531982fa99e6b33"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ucd-parse."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "ucd-parse";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5269f8d35df6b8b60758343a6d742ecf09e4bca13faee32af5503aebd1e11b7c"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ucd-trie."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "ucd-trie";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "56dee185309b50d1f11bfedef0fe6d036842e3fb77413abef29f8f8d1c5d4c1c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" = overridableMkRustCrate (profileName: rec {
    name = "unicase";
    version = "2.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "50f37be617794602aabbeee0be4f259dc1778fabe05e2d67ee8f79326d5cb4f6"; };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.1" { profileName = "__noProfile"; };
    };
  });
  
  "unknown".unicode-bdd."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "unicode-bdd";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/unicode-table-generator");
    dependencies = {
      ucd_parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ucd-parse."0.1.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "unicode-bidi";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "49f2bd0c6468a8230e1db229cff8029217cf623c767ea5d60bfbd42729ea54d5"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.13" = overridableMkRustCrate (profileName: rec {
    name = "unicode-normalization";
    version = "0.1.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6fb19cf769fa8c6a80a162df694621ebeb4dafb606470b2b2fce0be40a98a977"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      tinyvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec."0.3.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-script."0.5.2" = overridableMkRustCrate (profileName: rec {
    name = "unicode-script";
    version = "0.5.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "79bf4d5fc96546fdb73f9827097810bbda93b11a6770ff3a54e1f445d4135787"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-security."0.0.5" = overridableMkRustCrate (profileName: rec {
    name = "unicode-security";
    version = "0.0.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5d87c28edc5b263377e448d6cdcb935c06b95413d8013ba6fae470558ccab18f"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.13" { inherit profileName; };
      unicode_script = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-script."0.5.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "unicode-segmentation";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e83e153d1053cbb5a118eeff7fd5be06ed99153f00dbcd8ae310c5fb2b22edc0"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "unicode-width";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9337591893a19b88d8d87f2cec1e73fad5cdfd10e5a6f349f498ad6ea2ffb1e3"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "default" ]
      [ "rustc-dep-of-std" ]
      [ "std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
      std = rustPackages."unknown".rustc-std-workspace-std."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "unicode-xid";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f7fe0bb3479651439c9112f72b6c505038574c9fbb575ed1bf3b797fa39dd564"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "unicode_categories";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e"; };
  });
  
  "unknown".unstable-book-gen."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "unstable-book-gen";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/src/tools/unstable-book-gen");
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
      tidy = rustPackages."unknown".tidy."0.1.0" { inherit profileName; };
    };
  });
  
  "unknown".unwind."0.0.0" = overridableMkRustCrate (profileName: rec {
    name = "unwind";
    version = "0.0.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/library/unwind");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "std/llvm-libunwind" || rootFeatures' ? "test/llvm-libunwind" || rootFeatures' ? "unwind/llvm-libunwind") "llvm-libunwind")
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      core = rustPackages."unknown".core."0.0.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.60" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".url."1.7.2" = overridableMkRustCrate (profileName: rec {
    name = "url";
    version = "1.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dd4e7c0d531266369519a4aa4f399d748bd37043b00bde1e4ff1f60a120b355a"; };
    dependencies = {
      idna = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.1.5" { inherit profileName; };
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" = overridableMkRustCrate (profileName: rec {
    name = "url";
    version = "2.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "829d4a8476c35c9bf0bbce5a3b23f4106f79728039b726d292bb93bc106787cb"; };
    features = builtins.concatLists [
      [ "serde" ]
    ];
    dependencies = {
      idna = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.2.0" { inherit profileName; };
      matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".utf-8."0.7.5" = overridableMkRustCrate (profileName: rec {
    name = "utf-8";
    version = "0.7.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "05e42f7c18b8f902290b009cde6d651262f956c98bc51bca4cd1d511c9cd85c7"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "utf8parse";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8772a4ccbb4e89959023bc5b7cb8623a795caa7092d99f3aa9501b9484d4557d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.10" = overridableMkRustCrate (profileName: rec {
    name = "vcpkg";
    version = "0.2.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6454029bf181f092ad1b853286f23e2c507d8e8194d01d92da4a55c274a5508c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".vec_map."0.8.2" = overridableMkRustCrate (profileName: rec {
    name = "vec_map";
    version = "0.8.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".vergen."3.1.0" = overridableMkRustCrate (profileName: rec {
    name = "vergen";
    version = "3.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4ce50d8996df1f85af15f2cd8d33daae6e479575123ef4314a51a70a230739cb"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.15" { inherit profileName; };
    };
    buildDependencies = {
      chrono = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.15" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.1" = overridableMkRustCrate (profileName: rec {
    name = "version_check";
    version = "0.9.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "078775d0255232fb988e6fccf26ddc9d1ac274299aaedcedce21c6f72cc533ce"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".vte."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "vte";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4f42f536e22f7fcbb407639765c8fd78707a33109301f834a594758bedd6e8cf"; };
    dependencies = {
      utf8parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" = overridableMkRustCrate (profileName: rec {
    name = "walkdir";
    version = "2.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "777182bc735b6424e1a57516d35ed72cb8019d85c8c9bf536dccb3445c1a2f7d"; };
    dependencies = {
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasi."0.9.0+wasi-snapshot-preview1" = overridableMkRustCrate (profileName: rec {
    name = "wasi";
    version = "0.9.0+wasi-snapshot-preview1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519"; };
    features = builtins.concatLists [
      [ "compiler_builtins" ]
      [ "core" ]
      [ "default" ]
      [ "rustc-dep-of-std" ]
      [ "rustc-std-workspace-alloc" ]
      [ "std" ]
    ];
    dependencies = {
      compiler_builtins = rustPackages."registry+https://github.com/rust-lang/crates.io-index".compiler_builtins."0.1.35" { inherit profileName; };
      rustc_std_workspace_alloc = rustPackages."unknown".rustc-std-workspace-alloc."1.99.0" { inherit profileName; };
      core = rustPackages."unknown".rustc-std-workspace-core."1.99.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" = overridableMkRustCrate (profileName: rec {
    name = "winapi";
    version = "0.2.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" = overridableMkRustCrate (profileName: rec {
    name = "winapi";
    version = "0.3.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419"; };
    features = builtins.concatLists [
      [ "accctrl" ]
      [ "aclapi" ]
      [ "basetsd" ]
      [ "consoleapi" ]
      [ "debugapi" ]
      [ "errhandlingapi" ]
      [ "fibersapi" ]
      [ "fileapi" ]
      [ "handleapi" ]
      [ "ioapiset" ]
      [ "jobapi" ]
      [ "jobapi2" ]
      [ "knownfolders" ]
      [ "libloaderapi" ]
      [ "lmcons" ]
      [ "memoryapi" ]
      [ "minschannel" ]
      [ "minwinbase" ]
      [ "minwindef" ]
      [ "namedpipeapi" ]
      [ "ntdef" ]
      [ "ntsecapi" ]
      [ "ntstatus" ]
      [ "objbase" ]
      [ "processenv" ]
      [ "processthreadsapi" ]
      [ "profileapi" ]
      [ "psapi" ]
      [ "schannel" ]
      [ "securitybaseapi" ]
      [ "shellapi" ]
      [ "shlobj" ]
      [ "sspi" ]
      [ "std" ]
      [ "synchapi" ]
      [ "sysinfoapi" ]
      [ "threadpoollegacyapiset" ]
      [ "timezoneapi" ]
      [ "userenv" ]
      [ "winbase" ]
      [ "wincon" ]
      [ "wincrypt" ]
      [ "winerror" ]
      [ "winioctl" ]
      [ "winnt" ]
      [ "winsock2" ]
      [ "winuser" ]
      [ "ws2def" ]
      [ "ws2ipdef" ]
      [ "ws2tcpip" ]
    ];
    dependencies = {
      ${ if hostPlatform.config == "i686-pc-windows-gnu" then "winapi_i686_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-pc-windows-gnu" then "winapi_x86_64_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "winapi-build";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "winapi-util";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ws2_32-sys."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "ws2_32-sys";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e"; };
    dependencies = {
      winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
    };
    buildDependencies = {
      build = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".xattr."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "xattr";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "244c3741f4240ef46274860397c7c74e50eb23624996930e484c16679633a54c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "unsupported" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.77" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".xml5ever."0.16.1" = overridableMkRustCrate (profileName: rec {
    name = "xml5ever";
    version = "0.16.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0b1b52e6e8614d4a58b8e70cf51ec0cc21b256ad8206708bcff8139b5bbd6a59"; };
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      mac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mac."0.1.1" { inherit profileName; };
      markup5ever = rustPackages."registry+https://github.com/rust-lang/crates.io-index".markup5ever."0.10.0" { inherit profileName; };
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.43" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".xz2."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "xz2";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c179869f34fc7c01830d3ce7ea2086bc3a07e0d35289b667d0a8bf910258926c"; };
    dependencies = {
      lzma_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lzma-sys."0.1.16" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".yaml-merge-keys."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "yaml-merge-keys";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fd236a7dc9bb598f349fe4a8754f49181fee50284daa15cd1ba652d722280004"; };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.20" { inherit profileName; };
      yaml_rust = rustPackages."registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.4.4" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "yaml-rust";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e66366e18dc58b46801afbf2ca7661a9f59cc8c5962c29892b6039b4f86fa992"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.4.4" = overridableMkRustCrate (profileName: rec {
    name = "yaml-rust";
    version = "0.4.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "39f0c922f1a334134dc2f7a8b67dc5d25f0735263feec974345ff706bcf20b0d"; };
    dependencies = {
      linked_hash_map = rustPackages."registry+https://github.com/rust-lang/crates.io-index".linked-hash-map."0.5.3" { inherit profileName; };
    };
  });
  
}
